#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Header_01

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Header_01.W_Header_01_C
// 0x0128 (0x05C8 - 0x04A0)
class UW_Header_01_C final : public UUIHeader_01
{
public:
	class UImage*                                 Header;                                            // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_1;                                          // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_2;                                          // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_3;                                          // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_4;                                          // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_10;                                         // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_11;                                         // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_12;                                         // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_13;                                         // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_14;                                         // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_15;                                         // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_16;                                         // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_17;                                         // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_18;                                         // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_19;                                         // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_20;                                         // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_21;                                         // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_23;                                         // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_24;                                         // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_25;                                         // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_26;                                         // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_27;                                         // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_28;                                         // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_29;                                         // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_34;                                         // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_35;                                         // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_36;                                         // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_37;                                         // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_01;                                         // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_02;                                         // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_03;                                         // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_04;                                         // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_05;                                         // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_06;                                         // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_07;                                         // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Header_08;                                         // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Headerr_09;                                        // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Header_01_C">();
	}
	static class UW_Header_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Header_01_C>();
	}
};
static_assert(alignof(UW_Header_01_C) == 0x000008, "Wrong alignment on UW_Header_01_C");
static_assert(sizeof(UW_Header_01_C) == 0x0005C8, "Wrong size on UW_Header_01_C");
static_assert(offsetof(UW_Header_01_C, Header) == 0x0004A0, "Member 'UW_Header_01_C::Header' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_1) == 0x0004A8, "Member 'UW_Header_01_C::Header_1' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_2) == 0x0004B0, "Member 'UW_Header_01_C::Header_2' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_3) == 0x0004B8, "Member 'UW_Header_01_C::Header_3' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_4) == 0x0004C0, "Member 'UW_Header_01_C::Header_4' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_10) == 0x0004C8, "Member 'UW_Header_01_C::Header_10' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_11) == 0x0004D0, "Member 'UW_Header_01_C::Header_11' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_12) == 0x0004D8, "Member 'UW_Header_01_C::Header_12' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_13) == 0x0004E0, "Member 'UW_Header_01_C::Header_13' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_14) == 0x0004E8, "Member 'UW_Header_01_C::Header_14' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_15) == 0x0004F0, "Member 'UW_Header_01_C::Header_15' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_16) == 0x0004F8, "Member 'UW_Header_01_C::Header_16' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_17) == 0x000500, "Member 'UW_Header_01_C::Header_17' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_18) == 0x000508, "Member 'UW_Header_01_C::Header_18' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_19) == 0x000510, "Member 'UW_Header_01_C::Header_19' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_20) == 0x000518, "Member 'UW_Header_01_C::Header_20' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_21) == 0x000520, "Member 'UW_Header_01_C::Header_21' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_23) == 0x000528, "Member 'UW_Header_01_C::Header_23' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_24) == 0x000530, "Member 'UW_Header_01_C::Header_24' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_25) == 0x000538, "Member 'UW_Header_01_C::Header_25' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_26) == 0x000540, "Member 'UW_Header_01_C::Header_26' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_27) == 0x000548, "Member 'UW_Header_01_C::Header_27' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_28) == 0x000550, "Member 'UW_Header_01_C::Header_28' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_29) == 0x000558, "Member 'UW_Header_01_C::Header_29' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_34) == 0x000560, "Member 'UW_Header_01_C::Header_34' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_35) == 0x000568, "Member 'UW_Header_01_C::Header_35' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_36) == 0x000570, "Member 'UW_Header_01_C::Header_36' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_37) == 0x000578, "Member 'UW_Header_01_C::Header_37' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_01) == 0x000580, "Member 'UW_Header_01_C::Header_01' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_02) == 0x000588, "Member 'UW_Header_01_C::Header_02' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_03) == 0x000590, "Member 'UW_Header_01_C::Header_03' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_04) == 0x000598, "Member 'UW_Header_01_C::Header_04' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_05) == 0x0005A0, "Member 'UW_Header_01_C::Header_05' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_06) == 0x0005A8, "Member 'UW_Header_01_C::Header_06' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_07) == 0x0005B0, "Member 'UW_Header_01_C::Header_07' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Header_08) == 0x0005B8, "Member 'UW_Header_01_C::Header_08' has a wrong offset!");
static_assert(offsetof(UW_Header_01_C, Headerr_09) == 0x0005C0, "Member 'UW_Header_01_C::Headerr_09' has a wrong offset!");

}

