#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_Darwin

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DarwinGame_structs.hpp"
#include "DarwinGame_classes.hpp"
#include "GameplayTags_structs.hpp"
#include "ST_SimultaneousKey_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BPC_Darwin.BPC_Darwin_C
// 0x0108 (0x06F0 - 0x05E8)
class ABPC_Darwin_C final : public AAppPlayerController
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05E8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TMulticastInlineDelegate<void(uint8 Type)>    SendInput;                                         // 0x05F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bIsSkipDigitalInputOnlyNow;                        // 0x0600(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_601[0x7];                                      // 0x0601(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<EAxisMappingType, int32>                 PriorityofKeys;                                    // 0x0608(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<EAxisMappingType>                      PressedStack;                                      // 0x0658(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<EAxisMappingType>                      ReleasedStack;                                     // 0x0668(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<EAxisMappingType>                      PressedKeys;                                       // 0x0678(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<struct FST_SimultaneousKey>            SimultaneousKeys;                                  // 0x0688(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	TMap<EAxisMappingType, struct FGameplayTag>   ActionTagMap;                                      // 0x0698(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          BattleMode;                                        // 0x06E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsInterruptedInput;                               // 0x06E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsWalking;                                        // 0x06EA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BPC_Darwin(int32 EntryPoint);
	void InpAxisKeyEvt_Acceleration_K2Node_InputVectorAxisEvent_2(const struct FVector& AxisValue);
	void InpAxisKeyEvt_Tilt_K2Node_InputVectorAxisEvent_0(const struct FVector& AxisValue);
	void InpAxisKeyEvt_RotationRate_K2Node_InputVectorAxisEvent_1(const struct FVector& AxisValue);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ProcessInput(float DeltaTime, bool GamePaused, const struct FKeyInput& KeyInput_0, struct FKeyInput* OutKeyInput, struct FEventReply* Reply);
	void PostProcessInput();
	void ProcessPressedKey();
	void ProcessReleasedKey();
	void ProcessSimultaneousPressedKey(bool* Result);
	float ConvertToPlatformValue(float Value);
	void OpenMainMenu();
	void OpenMapMenu();
	void Interrupted_Input();
	void SetLeftAnalogStickInputX(float ValueLocal);
	void SetLeftAnalogStickInputY(float ValueLocal);
	void GetInteractFirstSimultaneousKey(TArray<EAxisMappingType>& PressedKeysStack, EAxisMappingType* FirstKey);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BPC_Darwin_C">();
	}
	static class ABPC_Darwin_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABPC_Darwin_C>();
	}
};
static_assert(alignof(ABPC_Darwin_C) == 0x000008, "Wrong alignment on ABPC_Darwin_C");
static_assert(sizeof(ABPC_Darwin_C) == 0x0006F0, "Wrong size on ABPC_Darwin_C");
static_assert(offsetof(ABPC_Darwin_C, UberGraphFrame) == 0x0005E8, "Member 'ABPC_Darwin_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABPC_Darwin_C, SendInput) == 0x0005F0, "Member 'ABPC_Darwin_C::SendInput' has a wrong offset!");
static_assert(offsetof(ABPC_Darwin_C, bIsSkipDigitalInputOnlyNow) == 0x000600, "Member 'ABPC_Darwin_C::bIsSkipDigitalInputOnlyNow' has a wrong offset!");
static_assert(offsetof(ABPC_Darwin_C, PriorityofKeys) == 0x000608, "Member 'ABPC_Darwin_C::PriorityofKeys' has a wrong offset!");
static_assert(offsetof(ABPC_Darwin_C, PressedStack) == 0x000658, "Member 'ABPC_Darwin_C::PressedStack' has a wrong offset!");
static_assert(offsetof(ABPC_Darwin_C, ReleasedStack) == 0x000668, "Member 'ABPC_Darwin_C::ReleasedStack' has a wrong offset!");
static_assert(offsetof(ABPC_Darwin_C, PressedKeys) == 0x000678, "Member 'ABPC_Darwin_C::PressedKeys' has a wrong offset!");
static_assert(offsetof(ABPC_Darwin_C, SimultaneousKeys) == 0x000688, "Member 'ABPC_Darwin_C::SimultaneousKeys' has a wrong offset!");
static_assert(offsetof(ABPC_Darwin_C, ActionTagMap) == 0x000698, "Member 'ABPC_Darwin_C::ActionTagMap' has a wrong offset!");
static_assert(offsetof(ABPC_Darwin_C, BattleMode) == 0x0006E8, "Member 'ABPC_Darwin_C::BattleMode' has a wrong offset!");
static_assert(offsetof(ABPC_Darwin_C, bIsInterruptedInput) == 0x0006E9, "Member 'ABPC_Darwin_C::bIsInterruptedInput' has a wrong offset!");
static_assert(offsetof(ABPC_Darwin_C, bIsWalking) == 0x0006EA, "Member 'ABPC_Darwin_C::bIsWalking' has a wrong offset!");

}

