#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_SetTurnFromBlackboardLocation

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTTask_SetTurnFromBlackboardLocation.BTTask_SetTurnFromBlackboardLocation_C.ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation
// 0x0050 (0x0050 - 0x0000)
struct BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMonsterBase*                           K2Node_DynamicCast_AsMonster_Base;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorOnBlackboard_ReturnValue;        // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetAngleToTargetLocationAndIsLeft_isLeft; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAngleToTargetLocationAndIsLeft_ReturnValue; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation) == 0x000008, "Wrong alignment on BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation");
static_assert(sizeof(BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation) == 0x000050, "Wrong size on BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation, EntryPoint) == 0x000000, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation, K2Node_Event_OwnerController_1) == 0x000008, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation, K2Node_Event_ControlledPawn_1) == 0x000010, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation, K2Node_Event_OwnerController) == 0x000018, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation, K2Node_Event_ControlledPawn) == 0x000020, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation, K2Node_DynamicCast_AsMonster_Base) == 0x000030, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation::K2Node_DynamicCast_AsMonster_Base' has a wrong offset!");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation, CallFunc_GetVectorOnBlackboard_ReturnValue) == 0x00003C, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation::CallFunc_GetVectorOnBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation, CallFunc_GetAngleToTargetLocationAndIsLeft_isLeft) == 0x000048, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation::CallFunc_GetAngleToTargetLocationAndIsLeft_isLeft' has a wrong offset!");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation, CallFunc_GetAngleToTargetLocationAndIsLeft_ReturnValue) == 0x00004C, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ExecuteUbergraph_BTTask_SetTurnFromBlackboardLocation::CallFunc_GetAngleToTargetLocationAndIsLeft_ReturnValue' has a wrong offset!");

// Function BTTask_SetTurnFromBlackboardLocation.BTTask_SetTurnFromBlackboardLocation_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTTask_SetTurnFromBlackboardLocation_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_SetTurnFromBlackboardLocation_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTTask_SetTurnFromBlackboardLocation_C_ReceiveTickAI");
static_assert(sizeof(BTTask_SetTurnFromBlackboardLocation_C_ReceiveTickAI) == 0x000018, "Wrong size on BTTask_SetTurnFromBlackboardLocation_C_ReceiveTickAI");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTTask_SetTurnFromBlackboardLocation.BTTask_SetTurnFromBlackboardLocation_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_SetTurnFromBlackboardLocation_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_SetTurnFromBlackboardLocation_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTTask_SetTurnFromBlackboardLocation_C_ReceiveExecuteAI");
static_assert(sizeof(BTTask_SetTurnFromBlackboardLocation_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTTask_SetTurnFromBlackboardLocation_C_ReceiveExecuteAI");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_SetTurnFromBlackboardLocation_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTTask_SetTurnFromBlackboardLocation_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

