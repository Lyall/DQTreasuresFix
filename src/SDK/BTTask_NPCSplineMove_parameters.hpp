#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_NPCSplineMove

#include "Basic.hpp"

#include "DarwinGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BTTask_NPCSplineMove.BTTask_NPCSplineMove_C.ExecuteUbergraph_BTTask_NPCSplineMove
// 0x0350 (0x0350 - 0x0000)
struct BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_NPCDataAIParam                     CallFunc_GetNPCAiParam_ReturnValue;                // 0x0008(0x0038)()
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue;     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0078(0x0018)()
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0090(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_NPCDataAIParam                     CallFunc_GetNPCAiParam_ReturnValue_1;              // 0x00A8(0x0038)()
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00E0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue;        // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetAIWorkTargetLocation_ReturnValue;      // 0x00F0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x00FC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0108(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x012C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANPCBase*                               K2Node_DynamicCast_AsNPCBase;                      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue_1;   // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetGameTimeSinceCreation_ReturnValue_2;   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x0190(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x01A8(0x0018)()
	bool                                          CallFunc_EqualEqual_FloatFloat_ReturnValue_1;      // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FST_NPCDataAIParam                     CallFunc_GetNPCAiParam_ReturnValue_2;              // 0x01D0(0x0038)()
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x3];                                      // 0x0209(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x020C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0210(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0228(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24E[0x2];                                      // 0x024E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_2;             // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetSplinePosition_ReturnValue;            // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_3;             // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_4;             // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USplineComponent*                       CallFunc_GetSplineComponent_ReturnValue;           // 0x0268(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_NPCDataAIParam                     CallFunc_GetNPCAiParam_ReturnValue_3;              // 0x0278(0x0038)()
	struct FST_NPCDataAIParam                     CallFunc_GetNPCAiParam_ReturnValue_4;              // 0x02B0(0x0038)()
	struct FVector                                CallFunc_GetCurrentLocationAndRotation_Locate;     // 0x02E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentLocationAndRotation_Locate_1;   // 0x02F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_NPCDataAIParam                     CallFunc_GetNPCAiParam_ReturnValue_5;              // 0x0300(0x0038)()
	struct FVector                                CallFunc_GetCurrentLocationAndRotation_Locate_2;   // 0x0338(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove) == 0x000008, "Wrong alignment on BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove");
static_assert(sizeof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove) == 0x000350, "Wrong size on BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, EntryPoint) == 0x000000, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetNPCAiParam_ReturnValue) == 0x000008, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetNPCAiParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, K2Node_Event_OwnerController_1) == 0x000040, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, K2Node_Event_ControlledPawn_1) == 0x000048, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetGameTimeSinceCreation_ReturnValue) == 0x000050, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetGameTimeSinceCreation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Conv_FloatToString_ReturnValue) == 0x000058, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Conv_StringToText_ReturnValue) == 0x000078, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000090, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_BreakVector_X) == 0x00009C, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_BreakVector_Z) == 0x0000A4, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetNPCAiParam_ReturnValue_1) == 0x0000A8, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetNPCAiParam_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_MakeVector_ReturnValue) == 0x0000E0, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_EqualEqual_FloatFloat_ReturnValue) == 0x0000EC, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_EqualEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetAIWorkTargetLocation_ReturnValue) == 0x0000F0, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetAIWorkTargetLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0000FC, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_FindLookAtRotation_ReturnValue) == 0x000108, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, K2Node_Event_OwnerController) == 0x000118, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, K2Node_Event_ControlledPawn) == 0x000120, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, K2Node_Event_DeltaSeconds) == 0x000128, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetForwardVector_ReturnValue) == 0x00012C, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, K2Node_DynamicCast_AsNPCBase) == 0x000138, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::K2Node_DynamicCast_AsNPCBase' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, K2Node_DynamicCast_bSuccess) == 0x000140, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetGameTimeSinceCreation_ReturnValue_1) == 0x000144, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetGameTimeSinceCreation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetGameTimeSinceCreation_ReturnValue_2) == 0x000148, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetGameTimeSinceCreation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000150, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x000160, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000170, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000180, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Conv_StringToText_ReturnValue_1) == 0x000190, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0001A8, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_EqualEqual_FloatFloat_ReturnValue_1) == 0x0001C0, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_EqualEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001C4, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetNPCAiParam_ReturnValue_2) == 0x0001D0, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetNPCAiParam_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000208, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00020C, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_RInterpTo_ReturnValue) == 0x000210, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_BreakRotator_Roll) == 0x00021C, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_BreakRotator_Pitch) == 0x000220, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_BreakRotator_Yaw) == 0x000224, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_MakeRotator_ReturnValue) == 0x000228, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000234, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, Temp_int_Variable) == 0x000238, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00023C, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000240, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Add_FloatFloat_ReturnValue) == 0x000244, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000248, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00024C, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00024D, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Add_IntInt_ReturnValue) == 0x000250, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Add_FloatFloat_ReturnValue_2) == 0x000254, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Add_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetSplinePosition_ReturnValue) == 0x000258, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetSplinePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Add_FloatFloat_ReturnValue_3) == 0x00025C, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Add_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Add_FloatFloat_ReturnValue_4) == 0x000260, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Add_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetSplineComponent_ReturnValue) == 0x000268, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetSplineComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_IsValid_ReturnValue) == 0x000270, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetNPCAiParam_ReturnValue_3) == 0x000278, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetNPCAiParam_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetNPCAiParam_ReturnValue_4) == 0x0002B0, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetNPCAiParam_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetCurrentLocationAndRotation_Locate) == 0x0002E8, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetCurrentLocationAndRotation_Locate' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetCurrentLocationAndRotation_Locate_1) == 0x0002F4, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetCurrentLocationAndRotation_Locate_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetNPCAiParam_ReturnValue_5) == 0x000300, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetNPCAiParam_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_GetCurrentLocationAndRotation_Locate_2) == 0x000338, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_GetCurrentLocationAndRotation_Locate_2' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Vector_Distance_ReturnValue) == 0x000344, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove, CallFunc_Less_FloatFloat_ReturnValue) == 0x000348, "Member 'BTTask_NPCSplineMove_C_ExecuteUbergraph_BTTask_NPCSplineMove::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function BTTask_NPCSplineMove.BTTask_NPCSplineMove_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTTask_NPCSplineMove_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_NPCSplineMove_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTTask_NPCSplineMove_C_ReceiveTickAI");
static_assert(sizeof(BTTask_NPCSplineMove_C_ReceiveTickAI) == 0x000018, "Wrong size on BTTask_NPCSplineMove_C_ReceiveTickAI");
static_assert(offsetof(BTTask_NPCSplineMove_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTTask_NPCSplineMove_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTTask_NPCSplineMove_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTTask_NPCSplineMove_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTTask_NPCSplineMove.BTTask_NPCSplineMove_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_NPCSplineMove_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_NPCSplineMove_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTTask_NPCSplineMove_C_ReceiveExecuteAI");
static_assert(sizeof(BTTask_NPCSplineMove_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTTask_NPCSplineMove_C_ReceiveExecuteAI");
static_assert(offsetof(BTTask_NPCSplineMove_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTTask_NPCSplineMove_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_NPCSplineMove_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTTask_NPCSplineMove_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

