#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SkillPop_00

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_SkillPop_00.W_SkillPop_00_C
// 0x00B0 (0x0570 - 0x04C0)
class UW_SkillPop_00_C final : public UUISkillPop_00
{
public:
	class UWidgetAnimation*                       Out;                                               // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image;                                             // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_58;                                          // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PopAdd;                                            // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PopMain;                                           // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_C*                 W_SkillPop_Count_00;                               // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_Add_C*             W_SkillPop_Count_00_Add;                           // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_C*                 W_SkillPop_Count_01;                               // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_Add_C*             W_SkillPop_Count_01_Add;                           // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_C*                 W_SkillPop_Count_02;                               // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_Add_C*             W_SkillPop_Count_02_Add;                           // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_C*                 W_SkillPop_Count_03;                               // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_Add_C*             W_SkillPop_Count_03_Add;                           // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_C*                 W_SkillPop_Count_04;                               // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_Add_C*             W_SkillPop_Count_04_Add;                           // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_C*                 W_SkillPop_Count_05;                               // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_Add_C*             W_SkillPop_Count_05_Add;                           // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_C*                 W_SkillPop_Count_06;                               // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_Add_C*             W_SkillPop_Count_06_Add;                           // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_C*                 W_SkillPop_Count_07;                               // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SkillPop_Count_00_Add_C*             W_SkillPop_Count_07_Add;                           // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_SkillPop_00_C">();
	}
	static class UW_SkillPop_00_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_SkillPop_00_C>();
	}
};
static_assert(alignof(UW_SkillPop_00_C) == 0x000008, "Wrong alignment on UW_SkillPop_00_C");
static_assert(sizeof(UW_SkillPop_00_C) == 0x000570, "Wrong size on UW_SkillPop_00_C");
static_assert(offsetof(UW_SkillPop_00_C, Out) == 0x0004C0, "Member 'UW_SkillPop_00_C::Out' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, In) == 0x0004C8, "Member 'UW_SkillPop_00_C::In' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, Image) == 0x0004D0, "Member 'UW_SkillPop_00_C::Image' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, Image_58) == 0x0004D8, "Member 'UW_SkillPop_00_C::Image_58' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, PopAdd) == 0x0004E0, "Member 'UW_SkillPop_00_C::PopAdd' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, PopMain) == 0x0004E8, "Member 'UW_SkillPop_00_C::PopMain' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_00) == 0x0004F0, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_00' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_00_Add) == 0x0004F8, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_00_Add' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_01) == 0x000500, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_01' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_01_Add) == 0x000508, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_01_Add' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_02) == 0x000510, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_02' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_02_Add) == 0x000518, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_02_Add' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_03) == 0x000520, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_03' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_03_Add) == 0x000528, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_03_Add' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_04) == 0x000530, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_04' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_04_Add) == 0x000538, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_04_Add' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_05) == 0x000540, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_05' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_05_Add) == 0x000548, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_05_Add' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_06) == 0x000550, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_06' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_06_Add) == 0x000558, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_06_Add' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_07) == 0x000560, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_07' has a wrong offset!");
static_assert(offsetof(UW_SkillPop_00_C, W_SkillPop_Count_07_Add) == 0x000568, "Member 'UW_SkillPop_00_C::W_SkillPop_Count_07_Add' has a wrong offset!");

}

