#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ThousandArtifact

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_ThousandArtifact.BP_ThousandArtifact_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_ThousandArtifact_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThousandArtifact_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_ThousandArtifact_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_ThousandArtifact_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_ThousandArtifact_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_ThousandArtifact_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_ThousandArtifact_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ThousandArtifact_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_ThousandArtifact_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ThousandArtifact_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_ThousandArtifact_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ThousandArtifact_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_ThousandArtifact_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_ThousandArtifact.BP_ThousandArtifact_C.ExecuteUbergraph_BP_ThousandArtifact
// 0x0028 (0x0028 - 0x0000)
struct BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact) == 0x000008, "Wrong alignment on BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact");
static_assert(sizeof(BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact) == 0x000028, "Wrong size on BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact");
static_assert(offsetof(BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact, EntryPoint) == 0x000000, "Member 'BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000008, "Member 'BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact, K2Node_ComponentBoundEvent_OtherActor) == 0x000010, "Member 'BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact, K2Node_ComponentBoundEvent_OtherComp) == 0x000018, "Member 'BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000020, "Member 'BP_ThousandArtifact_C_ExecuteUbergraph_BP_ThousandArtifact::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");

// Function BP_ThousandArtifact.BP_ThousandArtifact_C.GetWaterOverlapCollision
// 0x0008 (0x0008 - 0x0000)
struct BP_ThousandArtifact_C_GetWaterOverlapCollision final
{
public:
	class UPrimitiveComponent*                    ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_ThousandArtifact_C_GetWaterOverlapCollision) == 0x000008, "Wrong alignment on BP_ThousandArtifact_C_GetWaterOverlapCollision");
static_assert(sizeof(BP_ThousandArtifact_C_GetWaterOverlapCollision) == 0x000008, "Wrong size on BP_ThousandArtifact_C_GetWaterOverlapCollision");
static_assert(offsetof(BP_ThousandArtifact_C_GetWaterOverlapCollision, ReturnValue) == 0x000000, "Member 'BP_ThousandArtifact_C_GetWaterOverlapCollision::ReturnValue' has a wrong offset!");

}

