#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CameraInfo

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_CameraInfo.W_CameraInfo_C.ExecuteUbergraph_W_CameraInfo
// 0x0098 (0x0098 - 0x0000)
struct W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Height;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Length;                         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0010(0x0018)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Angle;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0030(0x0018)()
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
};
static_assert(alignof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo) == 0x000008, "Wrong alignment on W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo");
static_assert(sizeof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo) == 0x000098, "Wrong size on W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo");
static_assert(offsetof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo, EntryPoint) == 0x000000, "Member 'W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo, K2Node_CustomEvent_Height) == 0x000004, "Member 'W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo::K2Node_CustomEvent_Height' has a wrong offset!");
static_assert(offsetof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000008, "Member 'W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo, K2Node_CustomEvent_Length) == 0x00000C, "Member 'W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo::K2Node_CustomEvent_Length' has a wrong offset!");
static_assert(offsetof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo, CallFunc_Conv_FloatToText_ReturnValue) == 0x000010, "Member 'W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000028, "Member 'W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo, K2Node_CustomEvent_Angle) == 0x00002C, "Member 'W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo::K2Node_CustomEvent_Angle' has a wrong offset!");
static_assert(offsetof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000030, "Member 'W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo, CallFunc_Abs_Int_ReturnValue) == 0x000048, "Member 'W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo, CallFunc_Less_IntInt_ReturnValue) == 0x00004C, "Member 'W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo, CallFunc_Conv_IntToString_ReturnValue) == 0x000050, "Member 'W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo, CallFunc_SelectString_ReturnValue) == 0x000060, "Member 'W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo, CallFunc_Concat_StrStr_ReturnValue) == 0x000070, "Member 'W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'W_CameraInfo_C_ExecuteUbergraph_W_CameraInfo::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function W_CameraInfo.W_CameraInfo_C.SetGazePointHeight
// 0x0004 (0x0004 - 0x0000)
struct W_CameraInfo_C_SetGazePointHeight final
{
public:
	float                                         Height;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CameraInfo_C_SetGazePointHeight) == 0x000004, "Wrong alignment on W_CameraInfo_C_SetGazePointHeight");
static_assert(sizeof(W_CameraInfo_C_SetGazePointHeight) == 0x000004, "Wrong size on W_CameraInfo_C_SetGazePointHeight");
static_assert(offsetof(W_CameraInfo_C_SetGazePointHeight, Height) == 0x000000, "Member 'W_CameraInfo_C_SetGazePointHeight::Height' has a wrong offset!");

// Function W_CameraInfo.W_CameraInfo_C.SetCameraAngle
// 0x0004 (0x0004 - 0x0000)
struct W_CameraInfo_C_SetCameraAngle final
{
public:
	int32                                         Angle_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CameraInfo_C_SetCameraAngle) == 0x000004, "Wrong alignment on W_CameraInfo_C_SetCameraAngle");
static_assert(sizeof(W_CameraInfo_C_SetCameraAngle) == 0x000004, "Wrong size on W_CameraInfo_C_SetCameraAngle");
static_assert(offsetof(W_CameraInfo_C_SetCameraAngle, Angle_0) == 0x000000, "Member 'W_CameraInfo_C_SetCameraAngle::Angle_0' has a wrong offset!");

// Function W_CameraInfo.W_CameraInfo_C.SetBoomLength
// 0x0004 (0x0004 - 0x0000)
struct W_CameraInfo_C_SetBoomLength final
{
public:
	float                                         Length_0;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_CameraInfo_C_SetBoomLength) == 0x000004, "Wrong alignment on W_CameraInfo_C_SetBoomLength");
static_assert(sizeof(W_CameraInfo_C_SetBoomLength) == 0x000004, "Wrong size on W_CameraInfo_C_SetBoomLength");
static_assert(offsetof(W_CameraInfo_C_SetBoomLength, Length_0) == 0x000000, "Member 'W_CameraInfo_C_SetBoomLength::Length_0' has a wrong offset!");

}

