#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Vision_MonsterIcon

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Vision_MonsterIcon.W_Vision_MonsterIcon_C
// 0x0080 (0x0608 - 0x0588)
class UW_Vision_MonsterIcon_C final : public UUIVision_MonsterIcon
{
public:
	class UWidgetAnimation*                       Panel_Wait;                                        // 0x0588(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Panel_Off;                                         // 0x0590(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Panel_On;                                          // 0x0598(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ArrowOff;                                          // 0x05A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       off;                                               // 0x05A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       on;                                                // 0x05B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Wait;                                              // 0x05B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BlackBase;                                         // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame;                                             // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Frame_Additive;                                    // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Base;                                         // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Frame;                                        // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_Frame_Eff_1;                                  // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 MonsterIcon;                                       // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ButtonArrow_C*                       W_ButtonArrow_L;                                   // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ButtonArrow_C*                       W_ButtonArrow_R;                                   // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Vision_MonsterIcon_C">();
	}
	static class UW_Vision_MonsterIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Vision_MonsterIcon_C>();
	}
};
static_assert(alignof(UW_Vision_MonsterIcon_C) == 0x000008, "Wrong alignment on UW_Vision_MonsterIcon_C");
static_assert(sizeof(UW_Vision_MonsterIcon_C) == 0x000608, "Wrong size on UW_Vision_MonsterIcon_C");
static_assert(offsetof(UW_Vision_MonsterIcon_C, Panel_Wait) == 0x000588, "Member 'UW_Vision_MonsterIcon_C::Panel_Wait' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, Panel_Off) == 0x000590, "Member 'UW_Vision_MonsterIcon_C::Panel_Off' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, Panel_On) == 0x000598, "Member 'UW_Vision_MonsterIcon_C::Panel_On' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, ArrowOff) == 0x0005A0, "Member 'UW_Vision_MonsterIcon_C::ArrowOff' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, off) == 0x0005A8, "Member 'UW_Vision_MonsterIcon_C::off' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, on) == 0x0005B0, "Member 'UW_Vision_MonsterIcon_C::on' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, Wait) == 0x0005B8, "Member 'UW_Vision_MonsterIcon_C::Wait' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, BlackBase) == 0x0005C0, "Member 'UW_Vision_MonsterIcon_C::BlackBase' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, Frame) == 0x0005C8, "Member 'UW_Vision_MonsterIcon_C::Frame' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, Frame_Additive) == 0x0005D0, "Member 'UW_Vision_MonsterIcon_C::Frame_Additive' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, Icon_Base) == 0x0005D8, "Member 'UW_Vision_MonsterIcon_C::Icon_Base' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, Icon_Frame) == 0x0005E0, "Member 'UW_Vision_MonsterIcon_C::Icon_Frame' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, Icon_Frame_Eff_1) == 0x0005E8, "Member 'UW_Vision_MonsterIcon_C::Icon_Frame_Eff_1' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, MonsterIcon) == 0x0005F0, "Member 'UW_Vision_MonsterIcon_C::MonsterIcon' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, W_ButtonArrow_L) == 0x0005F8, "Member 'UW_Vision_MonsterIcon_C::W_ButtonArrow_L' has a wrong offset!");
static_assert(offsetof(UW_Vision_MonsterIcon_C, W_ButtonArrow_R) == 0x000600, "Member 'UW_Vision_MonsterIcon_C::W_ButtonArrow_R' has a wrong offset!");

}

