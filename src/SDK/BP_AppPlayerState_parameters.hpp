#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AppPlayerState

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_AppPlayerState.BP_AppPlayerState_C.ExecuteUbergraph_BP_AppPlayerState
// 0x0008 (0x0008 - 0x0000)
struct BP_AppPlayerState_C_ExecuteUbergraph_BP_AppPlayerState final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_ExpValue;                             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppPlayerState_C_ExecuteUbergraph_BP_AppPlayerState) == 0x000004, "Wrong alignment on BP_AppPlayerState_C_ExecuteUbergraph_BP_AppPlayerState");
static_assert(sizeof(BP_AppPlayerState_C_ExecuteUbergraph_BP_AppPlayerState) == 0x000008, "Wrong size on BP_AppPlayerState_C_ExecuteUbergraph_BP_AppPlayerState");
static_assert(offsetof(BP_AppPlayerState_C_ExecuteUbergraph_BP_AppPlayerState, EntryPoint) == 0x000000, "Member 'BP_AppPlayerState_C_ExecuteUbergraph_BP_AppPlayerState::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_ExecuteUbergraph_BP_AppPlayerState, K2Node_Event_ExpValue) == 0x000004, "Member 'BP_AppPlayerState_C_ExecuteUbergraph_BP_AppPlayerState::K2Node_Event_ExpValue' has a wrong offset!");

// Function BP_AppPlayerState.BP_AppPlayerState_C.AddExpToPlayer
// 0x0004 (0x0004 - 0x0000)
struct BP_AppPlayerState_C_AddExpToPlayer final
{
public:
	int32                                         ExpValue;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_AppPlayerState_C_AddExpToPlayer) == 0x000004, "Wrong alignment on BP_AppPlayerState_C_AddExpToPlayer");
static_assert(sizeof(BP_AppPlayerState_C_AddExpToPlayer) == 0x000004, "Wrong size on BP_AppPlayerState_C_AddExpToPlayer");
static_assert(offsetof(BP_AppPlayerState_C_AddExpToPlayer, ExpValue) == 0x000000, "Member 'BP_AppPlayerState_C_AddExpToPlayer::ExpValue' has a wrong offset!");

// Function BP_AppPlayerState.BP_AppPlayerState_C.AddExp
// 0x01A0 (0x01A0 - 0x0000)
struct BP_AppPlayerState_C_AddExp final
{
public:
	int32                                         Exp;                                               // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   UniqueName;                                        // 0x0008(0x0018)(Edit, BlueprintVisible)
	class UGameDataParty*                         GameDataParty;                                     // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataFlag*                          GameDataEventFlag;                                 // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 UnlockSkillLevel;                                  // 0x0030(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          ComboUP;                                           // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PlayerLevel;                                       // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UpLevel;                                           // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGPACharacter*                          K2Node_DynamicCast_AsGPACharacter;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x2];                                       // 0x0062(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConstValue_PartyMonsterLoopRange_first; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConstValue_PartyMonsterLoopRange_last; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameDataFlag*                          CallFunc_GetGameDataFlag_GameDataFlag;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataPlayer*                        CallFunc_GetGameDataPlayer_GameDataPlayer;         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHP_ReturnValue;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameDataPlayer*                        CallFunc_GetGameDataPlayer_GameDataPlayer_1;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevel_ReturnValue;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataPlayer*                        CallFunc_GetGameDataPlayer_GameDataPlayer_2;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_AddExp_ReturnValue;                       // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_Play2DSoundByCueName_ReturnValue;         // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPartyMonsterLevel_ReturnValue;         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmptySlot_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIField_WinLogbox*                     CallFunc_GetFieldLogWindow_OutWidget;              // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Field_WinPStatus_C*                  CallFunc_GetFieldPlayerStatus_Result;              // 0x00E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Field_WinPStatus_C*                  CallFunc_GetFieldPlayerStatus_Result_1;            // 0x00F0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_MakeArray_Array;                            // 0x0180(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_AppPlayerState_C_AddExp) == 0x000008, "Wrong alignment on BP_AppPlayerState_C_AddExp");
static_assert(sizeof(BP_AppPlayerState_C_AddExp) == 0x0001A0, "Wrong size on BP_AppPlayerState_C_AddExp");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, Exp) == 0x000000, "Member 'BP_AppPlayerState_C_AddExp::Exp' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, UniqueName) == 0x000008, "Member 'BP_AppPlayerState_C_AddExp::UniqueName' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, GameDataParty) == 0x000020, "Member 'BP_AppPlayerState_C_AddExp::GameDataParty' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, GameDataEventFlag) == 0x000028, "Member 'BP_AppPlayerState_C_AddExp::GameDataEventFlag' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, UnlockSkillLevel) == 0x000030, "Member 'BP_AppPlayerState_C_AddExp::UnlockSkillLevel' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, ComboUP) == 0x000040, "Member 'BP_AppPlayerState_C_AddExp::ComboUP' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, PlayerLevel) == 0x000044, "Member 'BP_AppPlayerState_C_AddExp::PlayerLevel' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, UpLevel) == 0x000048, "Member 'BP_AppPlayerState_C_AddExp::UpLevel' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000050, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, K2Node_DynamicCast_AsGPACharacter) == 0x000058, "Member 'BP_AppPlayerState_C_AddExp::K2Node_DynamicCast_AsGPACharacter' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'BP_AppPlayerState_C_AddExp::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_IsValid_ReturnValue) == 0x000061, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_GetConstValue_PartyMonsterLoopRange_first) == 0x000064, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_GetConstValue_PartyMonsterLoopRange_first' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_GetConstValue_PartyMonsterLoopRange_last) == 0x000068, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_GetConstValue_PartyMonsterLoopRange_last' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_GetGameDataFlag_GameDataFlag) == 0x000070, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_GetGameDataFlag_GameDataFlag' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_GetGameDataPlayer_GameDataPlayer) == 0x000078, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_GetGameDataPlayer_GameDataPlayer' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_GetHP_ReturnValue) == 0x000080, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_GetHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_GetGameDataPlayer_GameDataPlayer_1) == 0x000088, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_GetGameDataPlayer_GameDataPlayer_1' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000090, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_GetLevel_ReturnValue) == 0x000094, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_GetLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_GetGameDataPlayer_GameDataPlayer_2) == 0x000098, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_GetGameDataPlayer_GameDataPlayer_2' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_AddExp_ReturnValue) == 0x0000A0, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_AddExp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000A8, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Play2DSoundByCueName_ReturnValue) == 0x0000B0, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Play2DSoundByCueName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, Temp_int_Variable) == 0x0000C0, "Member 'BP_AppPlayerState_C_AddExp::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_GetPartyMonsterLevel_ReturnValue) == 0x0000C4, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_GetPartyMonsterLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_IsEmptySlot_ReturnValue) == 0x0000C8, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_IsEmptySlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000C9, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Add_IntInt_ReturnValue) == 0x0000CC, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_GetFieldLogWindow_OutWidget) == 0x0000D0, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_GetFieldLogWindow_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0000D8, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, Temp_bool_True_if_break_was_hit_Variable) == 0x0000D9, "Member 'BP_AppPlayerState_C_AddExp::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_GetFieldPlayerStatus_Result) == 0x0000E0, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_GetFieldPlayerStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_IsValid_ReturnValue_1) == 0x0000E8, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Not_PreBool_ReturnValue) == 0x0000E9, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_GetFieldPlayerStatus_Result_1) == 0x0000F0, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_GetFieldPlayerStatus_Result_1' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Less_IntInt_ReturnValue) == 0x0000F8, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Conv_IntToString_ReturnValue) == 0x000100, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, Temp_int_Array_Index_Variable) == 0x000110, "Member 'BP_AppPlayerState_C_AddExp::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Concat_StrStr_ReturnValue) == 0x000118, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Array_Get_Item) == 0x000128, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000130, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Greater_IntInt_ReturnValue) == 0x000140, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000141, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Add_IntInt_ReturnValue_1) == 0x000144, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000148, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_BooleanAND_ReturnValue) == 0x000158, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000160, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Conv_StringToName_ReturnValue) == 0x000170, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, Temp_int_Loop_Counter_Variable) == 0x000178, "Member 'BP_AppPlayerState_C_AddExp::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, K2Node_MakeArray_Array) == 0x000180, "Member 'BP_AppPlayerState_C_AddExp::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Less_IntInt_ReturnValue_1) == 0x000190, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_Add_IntInt_ReturnValue_2) == 0x000194, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_AppPlayerState_C_AddExp, CallFunc_BooleanAND_ReturnValue_1) == 0x000198, "Member 'BP_AppPlayerState_C_AddExp::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

}

