#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_Darwin

#include "Basic.hpp"

#include "BPC_Darwin_classes.hpp"
#include "BPC_Darwin_parameters.hpp"


namespace SDK
{

// Function BPC_Darwin.BPC_Darwin_C.ExecuteUbergraph_BPC_Darwin
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPC_Darwin_C::ExecuteUbergraph_BPC_Darwin(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "ExecuteUbergraph_BPC_Darwin");

	Params::BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_Darwin.BPC_Darwin_C.InpAxisKeyEvt_Acceleration_K2Node_InputVectorAxisEvent_2
// (BlueprintEvent)
// Parameters:
// struct FVector                          AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPC_Darwin_C::InpAxisKeyEvt_Acceleration_K2Node_InputVectorAxisEvent_2(const struct FVector& AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "InpAxisKeyEvt_Acceleration_K2Node_InputVectorAxisEvent_2");

	Params::BPC_Darwin_C_InpAxisKeyEvt_Acceleration_K2Node_InputVectorAxisEvent_2 Parms{};

	Parms.AxisValue = std::move(AxisValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_Darwin.BPC_Darwin_C.InpAxisKeyEvt_Tilt_K2Node_InputVectorAxisEvent_0
// (BlueprintEvent)
// Parameters:
// struct FVector                          AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPC_Darwin_C::InpAxisKeyEvt_Tilt_K2Node_InputVectorAxisEvent_0(const struct FVector& AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "InpAxisKeyEvt_Tilt_K2Node_InputVectorAxisEvent_0");

	Params::BPC_Darwin_C_InpAxisKeyEvt_Tilt_K2Node_InputVectorAxisEvent_0 Parms{};

	Parms.AxisValue = std::move(AxisValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_Darwin.BPC_Darwin_C.InpAxisKeyEvt_RotationRate_K2Node_InputVectorAxisEvent_1
// (BlueprintEvent)
// Parameters:
// struct FVector                          AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPC_Darwin_C::InpAxisKeyEvt_RotationRate_K2Node_InputVectorAxisEvent_1(const struct FVector& AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "InpAxisKeyEvt_RotationRate_K2Node_InputVectorAxisEvent_1");

	Params::BPC_Darwin_C_InpAxisKeyEvt_RotationRate_K2Node_InputVectorAxisEvent_1 Parms{};

	Parms.AxisValue = std::move(AxisValue);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_Darwin.BPC_Darwin_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABPC_Darwin_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_Darwin.BPC_Darwin_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPC_Darwin_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "ReceiveTick");

	Params::BPC_Darwin_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_Darwin.BPC_Darwin_C.ProcessInput
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    GamePaused                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FKeyInput                        KeyInput_0                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FKeyInput                        OutKeyInput                                            (Parm, OutParm)
// struct FEventReply                      Reply                                                  (Parm, OutParm)

void ABPC_Darwin_C::ProcessInput(float DeltaTime, bool GamePaused, const struct FKeyInput& KeyInput_0, struct FKeyInput* OutKeyInput, struct FEventReply* Reply)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "ProcessInput");

	Params::BPC_Darwin_C_ProcessInput Parms{};

	Parms.DeltaTime = DeltaTime;
	Parms.GamePaused = GamePaused;
	Parms.KeyInput_0 = std::move(KeyInput_0);

	UObject::ProcessEvent(Func, &Parms);

	if (OutKeyInput != nullptr)
		*OutKeyInput = std::move(Parms.OutKeyInput);

	if (Reply != nullptr)
		*Reply = std::move(Parms.Reply);
}


// Function BPC_Darwin.BPC_Darwin_C.PostProcessInput
// (Public, BlueprintCallable, BlueprintEvent)

void ABPC_Darwin_C::PostProcessInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "PostProcessInput");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_Darwin.BPC_Darwin_C.ProcessPressedKey
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABPC_Darwin_C::ProcessPressedKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "ProcessPressedKey");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_Darwin.BPC_Darwin_C.ProcessReleasedKey
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABPC_Darwin_C::ProcessReleasedKey()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "ProcessReleasedKey");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_Darwin.BPC_Darwin_C.ProcessSimultaneousPressedKey
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABPC_Darwin_C::ProcessSimultaneousPressedKey(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "ProcessSimultaneousPressedKey");

	Params::BPC_Darwin_C_ProcessSimultaneousPressedKey Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BPC_Darwin.BPC_Darwin_C.ConvertToPlatformValue
// (Protected, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float ABPC_Darwin_C::ConvertToPlatformValue(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "ConvertToPlatformValue");

	Params::BPC_Darwin_C_ConvertToPlatformValue Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BPC_Darwin.BPC_Darwin_C.OpenMainMenu
// (Public, BlueprintCallable, BlueprintEvent)

void ABPC_Darwin_C::OpenMainMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "OpenMainMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_Darwin.BPC_Darwin_C.OpenMapMenu
// (Public, BlueprintCallable, BlueprintEvent)

void ABPC_Darwin_C::OpenMapMenu()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "OpenMapMenu");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_Darwin.BPC_Darwin_C.Interrupted Input
// (Public, BlueprintCallable, BlueprintEvent)

void ABPC_Darwin_C::Interrupted_Input()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "Interrupted Input");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BPC_Darwin.BPC_Darwin_C.SetLeftAnalogStickInputX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ValueLocal                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPC_Darwin_C::SetLeftAnalogStickInputX(float ValueLocal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "SetLeftAnalogStickInputX");

	Params::BPC_Darwin_C_SetLeftAnalogStickInputX Parms{};

	Parms.ValueLocal = ValueLocal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_Darwin.BPC_Darwin_C.SetLeftAnalogStickInputY
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ValueLocal                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPC_Darwin_C::SetLeftAnalogStickInputY(float ValueLocal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "SetLeftAnalogStickInputY");

	Params::BPC_Darwin_C_SetLeftAnalogStickInputY Parms{};

	Parms.ValueLocal = ValueLocal;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BPC_Darwin.BPC_Darwin_C.GetInteractFirstSimultaneousKey
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<EAxisMappingType>                PressedKeysStack                                       (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// EAxisMappingType                        FirstKey                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABPC_Darwin_C::GetInteractFirstSimultaneousKey(TArray<EAxisMappingType>& PressedKeysStack, EAxisMappingType* FirstKey)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BPC_Darwin_C", "GetInteractFirstSimultaneousKey");

	Params::BPC_Darwin_C_GetInteractFirstSimultaneousKey Parms{};

	Parms.PressedKeysStack = std::move(PressedKeysStack);

	UObject::ProcessEvent(Func, &Parms);

	PressedKeysStack = std::move(Parms.PressedKeysStack);

	if (FirstKey != nullptr)
		*FirstKey = Parms.FirstKey;
}

}

