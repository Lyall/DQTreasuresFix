#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AS_Guarantee_Jump

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AS_Guarantee_Jump.AS_Guarantee_Jump_C.Received_NotifyBegin
// 0x00B8 (0x00B8 - 0x0000)
struct AS_Guarantee_Jump_C_Received_NotifyBegin final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDuration;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGPACharacter*                          K2Node_DynamicCast_AsGPACharacter;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMonster*                               K2Node_DynamicCast_AsMonster;                      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UStateBase*                             CallFunc_GetCurrentState_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NeedFixedJump_ReturnValue;                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAirStateJump*                          K2Node_DynamicCast_AsAir_State_Jump;               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorOnBlackboard_ReturnValue;        // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0098(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AS_Guarantee_Jump_C_Received_NotifyBegin) == 0x000008, "Wrong alignment on AS_Guarantee_Jump_C_Received_NotifyBegin");
static_assert(sizeof(AS_Guarantee_Jump_C_Received_NotifyBegin) == 0x0000B8, "Wrong size on AS_Guarantee_Jump_C_Received_NotifyBegin");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, MeshComp) == 0x000000, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::MeshComp' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, Animation) == 0x000008, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::Animation' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, TotalDuration) == 0x000010, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::TotalDuration' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, ReturnValue) == 0x000014, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, K2Node_DynamicCast_AsGPACharacter) == 0x000020, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::K2Node_DynamicCast_AsGPACharacter' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, K2Node_DynamicCast_AsMonster) == 0x000030, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::K2Node_DynamicCast_AsMonster' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_GetCurrentState_ReturnValue) == 0x000040, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_GetCurrentState_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_NeedFixedJump_ReturnValue) == 0x000048, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_NeedFixedJump_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, K2Node_DynamicCast_AsAir_State_Jump) == 0x000050, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::K2Node_DynamicCast_AsAir_State_Jump' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00005C, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_GetVectorOnBlackboard_ReturnValue) == 0x000068, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_GetVectorOnBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_BreakVector_X) == 0x000074, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_BreakVector_Y) == 0x000078, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_BreakVector_Z) == 0x00007C, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_BreakVector_X_1) == 0x000080, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_BreakVector_Y_1) == 0x000084, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_BreakVector_Z_1) == 0x000088, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_MakeVector_ReturnValue) == 0x00008C, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_MakeVector_ReturnValue_1) == 0x000098, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_FindLookAtRotation_ReturnValue) == 0x0000A4, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_Guarantee_Jump_C_Received_NotifyBegin, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000B0, "Member 'AS_Guarantee_Jump_C_Received_NotifyBegin::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

}

