#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CoinPlate_Set_01

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_CoinPlate_Set_01.W_CoinPlate_Set_01_C
// 0x0060 (0x0660 - 0x0600)
class UW_CoinPlate_Set_01_C final : public UUICoinMenu_CoinPlate_Set
{
public:
	class UWidgetAnimation*                       Coin;                                              // 0x0600(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Party;                                             // 0x0608(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_CoinSet_C*                           CoinSet_01;                                        // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_CoinSet_C*                           CoinSet_02;                                        // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_CoinSet_C*                           CoinSet_03;                                        // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_CoinSet_C*                           CoinSet_04;                                        // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_CoinSet_C*                           CoinSet_05;                                        // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_CoinSet_C*                           CoinSet_06;                                        // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_CoinSet_C*                           CoinSet_07;                                        // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_CoinSet_C*                           CoinSet_08;                                        // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_CoinSet_C*                           CoinSet_09;                                        // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Menu_IconArrow_C*                    W_Menu_IconArrow;                                  // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_CoinPlate_Set_01_C">();
	}
	static class UW_CoinPlate_Set_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_CoinPlate_Set_01_C>();
	}
};
static_assert(alignof(UW_CoinPlate_Set_01_C) == 0x000008, "Wrong alignment on UW_CoinPlate_Set_01_C");
static_assert(sizeof(UW_CoinPlate_Set_01_C) == 0x000660, "Wrong size on UW_CoinPlate_Set_01_C");
static_assert(offsetof(UW_CoinPlate_Set_01_C, Coin) == 0x000600, "Member 'UW_CoinPlate_Set_01_C::Coin' has a wrong offset!");
static_assert(offsetof(UW_CoinPlate_Set_01_C, Party) == 0x000608, "Member 'UW_CoinPlate_Set_01_C::Party' has a wrong offset!");
static_assert(offsetof(UW_CoinPlate_Set_01_C, CoinSet_01) == 0x000610, "Member 'UW_CoinPlate_Set_01_C::CoinSet_01' has a wrong offset!");
static_assert(offsetof(UW_CoinPlate_Set_01_C, CoinSet_02) == 0x000618, "Member 'UW_CoinPlate_Set_01_C::CoinSet_02' has a wrong offset!");
static_assert(offsetof(UW_CoinPlate_Set_01_C, CoinSet_03) == 0x000620, "Member 'UW_CoinPlate_Set_01_C::CoinSet_03' has a wrong offset!");
static_assert(offsetof(UW_CoinPlate_Set_01_C, CoinSet_04) == 0x000628, "Member 'UW_CoinPlate_Set_01_C::CoinSet_04' has a wrong offset!");
static_assert(offsetof(UW_CoinPlate_Set_01_C, CoinSet_05) == 0x000630, "Member 'UW_CoinPlate_Set_01_C::CoinSet_05' has a wrong offset!");
static_assert(offsetof(UW_CoinPlate_Set_01_C, CoinSet_06) == 0x000638, "Member 'UW_CoinPlate_Set_01_C::CoinSet_06' has a wrong offset!");
static_assert(offsetof(UW_CoinPlate_Set_01_C, CoinSet_07) == 0x000640, "Member 'UW_CoinPlate_Set_01_C::CoinSet_07' has a wrong offset!");
static_assert(offsetof(UW_CoinPlate_Set_01_C, CoinSet_08) == 0x000648, "Member 'UW_CoinPlate_Set_01_C::CoinSet_08' has a wrong offset!");
static_assert(offsetof(UW_CoinPlate_Set_01_C, CoinSet_09) == 0x000650, "Member 'UW_CoinPlate_Set_01_C::CoinSet_09' has a wrong offset!");
static_assert(offsetof(UW_CoinPlate_Set_01_C, W_Menu_IconArrow) == 0x000658, "Member 'UW_CoinPlate_Set_01_C::W_Menu_IconArrow' has a wrong offset!");

}

