#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Dodge

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Dodge.GA_Dodge_C.ExecuteUbergraph_GA_Dodge
// 0x0640 (0x0640 - 0x0000)
struct GA_Dodge_C_ExecuteUbergraph_GA_Dodge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_4;                     // 0x0004(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_4;                    // 0x0010(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_3;                     // 0x00D0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_3;                    // 0x00D8(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0188(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_2;                     // 0x0198(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_2;                    // 0x01A0(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0250(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x0260(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x0268(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0318(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0328(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0330(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x03E0(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x03F0(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x04A0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A9[0x7];                                      // 0x04A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_Payload;                        // 0x04B0(0x00B0)()
	TDelegate<void(const struct FGameplayEventData& Payload)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0560(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayEventData                     Temp_struct_Variable_2;                            // 0x0570(0x00B0)()
	class UAbilityTask_WaitGameplayEvent*         CallFunc_WaitGameplayEvent_ReturnValue;            // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0629(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x062A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62B[0x5];                                      // 0x062B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_PlayMontageAndWaitEvent*   CallFunc_PlayMontageAndWaitEvent_ReturnValue;      // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSwim_isSwim;                            // 0x0639(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge) == 0x000008, "Wrong alignment on GA_Dodge_C_ExecuteUbergraph_GA_Dodge");
static_assert(sizeof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge) == 0x000640, "Wrong size on GA_Dodge_C_ExecuteUbergraph_GA_Dodge");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, EntryPoint) == 0x000000, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventTag_4) == 0x000004, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventTag_4' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventData_4) == 0x000010, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventData_4' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CreateDelegate_OutputDelegate) == 0x0000C0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventTag_3) == 0x0000D0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventTag_3' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventData_3) == 0x0000D8, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventData_3' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CreateDelegate_OutputDelegate_1) == 0x000188, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventTag_2) == 0x000198, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventTag_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventData_2) == 0x0001A0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventData_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CreateDelegate_OutputDelegate_2) == 0x000250, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventTag_1) == 0x000260, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventData_1) == 0x000268, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CreateDelegate_OutputDelegate_3) == 0x000318, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventTag) == 0x000328, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_EventData) == 0x000330, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CreateDelegate_OutputDelegate_4) == 0x0003E0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, Temp_struct_Variable) == 0x0003F0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, Temp_struct_Variable_1) == 0x0004A0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0004A8, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CustomEvent_Payload) == 0x0004B0, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CustomEvent_Payload' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_CreateDelegate_OutputDelegate_5) == 0x000560, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, Temp_struct_Variable_2) == 0x000570, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_WaitGameplayEvent_ReturnValue) == 0x000620, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_WaitGameplayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_IsValid_ReturnValue) == 0x000628, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, K2Node_Event_bWasCancelled) == 0x000629, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_IsValid_ReturnValue_1) == 0x00062A, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_PlayMontageAndWaitEvent_ReturnValue) == 0x000630, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_PlayMontageAndWaitEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_IsValid_ReturnValue_2) == 0x000638, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_ExecuteUbergraph_GA_Dodge, CallFunc_IsSwim_isSwim) == 0x000639, "Member 'GA_Dodge_C_ExecuteUbergraph_GA_Dodge::CallFunc_IsSwim_isSwim' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Dodge_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Dodge_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Dodge_C_K2_OnEndAbility");
static_assert(sizeof(GA_Dodge_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Dodge_C_K2_OnEndAbility");
static_assert(offsetof(GA_Dodge_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Dodge_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.EventReceived_25BCB00D4EF3AAD01972C7ABFA2D04C5
// 0x00B0 (0x00B0 - 0x0000)
struct GA_Dodge_C_EventReceived_25BCB00D4EF3AAD01972C7ABFA2D04C5 final
{
public:
	struct FGameplayEventData                     Payload;                                           // 0x0000(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dodge_C_EventReceived_25BCB00D4EF3AAD01972C7ABFA2D04C5) == 0x000008, "Wrong alignment on GA_Dodge_C_EventReceived_25BCB00D4EF3AAD01972C7ABFA2D04C5");
static_assert(sizeof(GA_Dodge_C_EventReceived_25BCB00D4EF3AAD01972C7ABFA2D04C5) == 0x0000B0, "Wrong size on GA_Dodge_C_EventReceived_25BCB00D4EF3AAD01972C7ABFA2D04C5");
static_assert(offsetof(GA_Dodge_C_EventReceived_25BCB00D4EF3AAD01972C7ABFA2D04C5, Payload) == 0x000000, "Member 'GA_Dodge_C_EventReceived_25BCB00D4EF3AAD01972C7ABFA2D04C5::Payload' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.OnCompleted_89F155064F1FEAF37E66A9AF566FDFFC
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dodge_C_OnCompleted_89F155064F1FEAF37E66A9AF566FDFFC final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dodge_C_OnCompleted_89F155064F1FEAF37E66A9AF566FDFFC) == 0x000008, "Wrong alignment on GA_Dodge_C_OnCompleted_89F155064F1FEAF37E66A9AF566FDFFC");
static_assert(sizeof(GA_Dodge_C_OnCompleted_89F155064F1FEAF37E66A9AF566FDFFC) == 0x0000B8, "Wrong size on GA_Dodge_C_OnCompleted_89F155064F1FEAF37E66A9AF566FDFFC");
static_assert(offsetof(GA_Dodge_C_OnCompleted_89F155064F1FEAF37E66A9AF566FDFFC, EventTag) == 0x000000, "Member 'GA_Dodge_C_OnCompleted_89F155064F1FEAF37E66A9AF566FDFFC::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnCompleted_89F155064F1FEAF37E66A9AF566FDFFC, EventData) == 0x000008, "Member 'GA_Dodge_C_OnCompleted_89F155064F1FEAF37E66A9AF566FDFFC::EventData' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.OnBlendOut_89F155064F1FEAF37E66A9AF566FDFFC
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dodge_C_OnBlendOut_89F155064F1FEAF37E66A9AF566FDFFC final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dodge_C_OnBlendOut_89F155064F1FEAF37E66A9AF566FDFFC) == 0x000008, "Wrong alignment on GA_Dodge_C_OnBlendOut_89F155064F1FEAF37E66A9AF566FDFFC");
static_assert(sizeof(GA_Dodge_C_OnBlendOut_89F155064F1FEAF37E66A9AF566FDFFC) == 0x0000B8, "Wrong size on GA_Dodge_C_OnBlendOut_89F155064F1FEAF37E66A9AF566FDFFC");
static_assert(offsetof(GA_Dodge_C_OnBlendOut_89F155064F1FEAF37E66A9AF566FDFFC, EventTag) == 0x000000, "Member 'GA_Dodge_C_OnBlendOut_89F155064F1FEAF37E66A9AF566FDFFC::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnBlendOut_89F155064F1FEAF37E66A9AF566FDFFC, EventData) == 0x000008, "Member 'GA_Dodge_C_OnBlendOut_89F155064F1FEAF37E66A9AF566FDFFC::EventData' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.OnInterrupted_89F155064F1FEAF37E66A9AF566FDFFC
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dodge_C_OnInterrupted_89F155064F1FEAF37E66A9AF566FDFFC final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dodge_C_OnInterrupted_89F155064F1FEAF37E66A9AF566FDFFC) == 0x000008, "Wrong alignment on GA_Dodge_C_OnInterrupted_89F155064F1FEAF37E66A9AF566FDFFC");
static_assert(sizeof(GA_Dodge_C_OnInterrupted_89F155064F1FEAF37E66A9AF566FDFFC) == 0x0000B8, "Wrong size on GA_Dodge_C_OnInterrupted_89F155064F1FEAF37E66A9AF566FDFFC");
static_assert(offsetof(GA_Dodge_C_OnInterrupted_89F155064F1FEAF37E66A9AF566FDFFC, EventTag) == 0x000000, "Member 'GA_Dodge_C_OnInterrupted_89F155064F1FEAF37E66A9AF566FDFFC::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnInterrupted_89F155064F1FEAF37E66A9AF566FDFFC, EventData) == 0x000008, "Member 'GA_Dodge_C_OnInterrupted_89F155064F1FEAF37E66A9AF566FDFFC::EventData' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.OnCancelled_89F155064F1FEAF37E66A9AF566FDFFC
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dodge_C_OnCancelled_89F155064F1FEAF37E66A9AF566FDFFC final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dodge_C_OnCancelled_89F155064F1FEAF37E66A9AF566FDFFC) == 0x000008, "Wrong alignment on GA_Dodge_C_OnCancelled_89F155064F1FEAF37E66A9AF566FDFFC");
static_assert(sizeof(GA_Dodge_C_OnCancelled_89F155064F1FEAF37E66A9AF566FDFFC) == 0x0000B8, "Wrong size on GA_Dodge_C_OnCancelled_89F155064F1FEAF37E66A9AF566FDFFC");
static_assert(offsetof(GA_Dodge_C_OnCancelled_89F155064F1FEAF37E66A9AF566FDFFC, EventTag) == 0x000000, "Member 'GA_Dodge_C_OnCancelled_89F155064F1FEAF37E66A9AF566FDFFC::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_OnCancelled_89F155064F1FEAF37E66A9AF566FDFFC, EventData) == 0x000008, "Member 'GA_Dodge_C_OnCancelled_89F155064F1FEAF37E66A9AF566FDFFC::EventData' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.EventReceived_89F155064F1FEAF37E66A9AF566FDFFC
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dodge_C_EventReceived_89F155064F1FEAF37E66A9AF566FDFFC final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dodge_C_EventReceived_89F155064F1FEAF37E66A9AF566FDFFC) == 0x000008, "Wrong alignment on GA_Dodge_C_EventReceived_89F155064F1FEAF37E66A9AF566FDFFC");
static_assert(sizeof(GA_Dodge_C_EventReceived_89F155064F1FEAF37E66A9AF566FDFFC) == 0x0000B8, "Wrong size on GA_Dodge_C_EventReceived_89F155064F1FEAF37E66A9AF566FDFFC");
static_assert(offsetof(GA_Dodge_C_EventReceived_89F155064F1FEAF37E66A9AF566FDFFC, EventTag) == 0x000000, "Member 'GA_Dodge_C_EventReceived_89F155064F1FEAF37E66A9AF566FDFFC::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_EventReceived_89F155064F1FEAF37E66A9AF566FDFFC, EventData) == 0x000008, "Member 'GA_Dodge_C_EventReceived_89F155064F1FEAF37E66A9AF566FDFFC::EventData' has a wrong offset!");

// Function GA_Dodge.GA_Dodge_C.isSwim
// 0x0018 (0x0018 - 0x0000)
struct GA_Dodge_C_isSwim final
{
public:
	bool                                          isSwim_0;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Player_C*                           K2Node_DynamicCast_AsBP_Player;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_OnTheWater_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Dodge_C_isSwim) == 0x000008, "Wrong alignment on GA_Dodge_C_isSwim");
static_assert(sizeof(GA_Dodge_C_isSwim) == 0x000018, "Wrong size on GA_Dodge_C_isSwim");
static_assert(offsetof(GA_Dodge_C_isSwim, isSwim_0) == 0x000000, "Member 'GA_Dodge_C_isSwim::isSwim_0' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_isSwim, K2Node_DynamicCast_AsBP_Player) == 0x000008, "Member 'GA_Dodge_C_isSwim::K2Node_DynamicCast_AsBP_Player' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_isSwim, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GA_Dodge_C_isSwim::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Dodge_C_isSwim, CallFunc_OnTheWater_ReturnValue) == 0x000011, "Member 'GA_Dodge_C_isSwim::CallFunc_OnTheWater_ReturnValue' has a wrong offset!");

}

