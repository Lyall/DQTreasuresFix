#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AttackCollisionGimmick

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DarwinGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AttackCollisionGimmick.BP_AttackCollisionGimmick_C
// 0x0038 (0x02B8 - 0x0280)
class ABP_AttackCollisionGimmick_C final : public AAttackCollisionBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USphereComponent*                       Sphere;                                            // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UAttackElementBaseComponent*            AttackElement;                                     // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AMonsterBoss*                           MonsterBoss;                                       // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GetBoss;                                           // 0x02A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 GimmickActor;                                      // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Reset();
	void ExecuteUbergraph_BP_AttackCollisionGimmick(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AttackCollisionGimmick_C">();
	}
	static class ABP_AttackCollisionGimmick_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AttackCollisionGimmick_C>();
	}
};
static_assert(alignof(ABP_AttackCollisionGimmick_C) == 0x000008, "Wrong alignment on ABP_AttackCollisionGimmick_C");
static_assert(sizeof(ABP_AttackCollisionGimmick_C) == 0x0002B8, "Wrong size on ABP_AttackCollisionGimmick_C");
static_assert(offsetof(ABP_AttackCollisionGimmick_C, UberGraphFrame) == 0x000280, "Member 'ABP_AttackCollisionGimmick_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AttackCollisionGimmick_C, Sphere) == 0x000288, "Member 'ABP_AttackCollisionGimmick_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_AttackCollisionGimmick_C, AttackElement) == 0x000290, "Member 'ABP_AttackCollisionGimmick_C::AttackElement' has a wrong offset!");
static_assert(offsetof(ABP_AttackCollisionGimmick_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_AttackCollisionGimmick_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_AttackCollisionGimmick_C, MonsterBoss) == 0x0002A0, "Member 'ABP_AttackCollisionGimmick_C::MonsterBoss' has a wrong offset!");
static_assert(offsetof(ABP_AttackCollisionGimmick_C, GetBoss) == 0x0002A8, "Member 'ABP_AttackCollisionGimmick_C::GetBoss' has a wrong offset!");
static_assert(offsetof(ABP_AttackCollisionGimmick_C, GimmickActor) == 0x0002B0, "Member 'ABP_AttackCollisionGimmick_C::GimmickActor' has a wrong offset!");

}

