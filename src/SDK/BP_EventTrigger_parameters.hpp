#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventTrigger

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DarwinGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_EventTrigger.BP_EventTrigger_C.ExecuteUbergraph_BP_EventTrigger
// 0x0290 (0x0290 - 0x0000)
struct BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0038(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0048(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x00E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x00F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0100(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0138(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0144(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0150(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0170(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0178(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0184(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x020D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_20E[0x2];                                      // 0x020E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0214(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0218(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0224(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0230(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x023C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0270(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x027C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_event_id;                             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger) == 0x000008, "Wrong alignment on BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger");
static_assert(sizeof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger) == 0x000290, "Wrong size on BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, EntryPoint) == 0x000000, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000008, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000010, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000018, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000020, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000028, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000030, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000038, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000040, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_bFromSweep) == 0x000044, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_SweepResult) == 0x000048, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_bBlockingHit) == 0x0000D0, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_bInitialOverlap) == 0x0000D1, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_Time) == 0x0000D4, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_Distance) == 0x0000D8, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_Location) == 0x0000DC, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_ImpactPoint) == 0x0000E8, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_Normal) == 0x0000F4, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_ImpactNormal) == 0x000100, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_PhysMat) == 0x000110, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_HitActor) == 0x000118, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_HitComponent) == 0x000120, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_HitBoneName) == 0x000128, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_HitItem) == 0x000130, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_FaceIndex) == 0x000134, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_TraceStart) == 0x000138, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_TraceEnd) == 0x000144, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000150, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_HitComponent) == 0x000160, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_OtherActor) == 0x000168, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_OtherComp) == 0x000170, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000178, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_ComponentBoundEvent_Hit) == 0x000184, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_bBlockingHit_1) == 0x00020C, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x00020D, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_Time_1) == 0x000210, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_Distance_1) == 0x000214, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_Location_1) == 0x000218, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000224, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_Normal_1) == 0x000230, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_ImpactNormal_1) == 0x00023C, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_PhysMat_1) == 0x000248, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_HitActor_1) == 0x000250, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_HitComponent_1) == 0x000258, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_HitBoneName_1) == 0x000260, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_HitItem_1) == 0x000268, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_FaceIndex_1) == 0x00026C, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_TraceStart_1) == 0x000270, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, CallFunc_BreakHitResult_TraceEnd_1) == 0x00027C, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger, K2Node_Event_event_id) == 0x000288, "Member 'BP_EventTrigger_C_ExecuteUbergraph_BP_EventTrigger::K2Node_Event_event_id' has a wrong offset!");

// Function BP_EventTrigger.BP_EventTrigger_C.BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature
// 0x00B0 (0x00B0 - 0x0000)
struct BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0024(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature) == 0x0000B0, "Wrong size on BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature, Hit) == 0x000024, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function BP_EventTrigger.BP_EventTrigger_C.BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_EventTrigger.BP_EventTrigger_C.BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_EventTrigger_C_BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_EventTrigger.BP_EventTrigger_C.SetEventIDToEventSender
// 0x0008 (0x0008 - 0x0000)
struct BP_EventTrigger_C_SetEventIDToEventSender final
{
public:
	class FName                                   event_id;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventTrigger_C_SetEventIDToEventSender) == 0x000004, "Wrong alignment on BP_EventTrigger_C_SetEventIDToEventSender");
static_assert(sizeof(BP_EventTrigger_C_SetEventIDToEventSender) == 0x000008, "Wrong size on BP_EventTrigger_C_SetEventIDToEventSender");
static_assert(offsetof(BP_EventTrigger_C_SetEventIDToEventSender, event_id) == 0x000000, "Member 'BP_EventTrigger_C_SetEventIDToEventSender::event_id' has a wrong offset!");

// Function BP_EventTrigger.BP_EventTrigger_C.EntryDataTable
// 0x01A0 (0x01A0 - 0x0000)
struct BP_EventTrigger_C_EntryDataTable final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0xB];                                        // 0x0005(0x000B)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ConvertCSV_ReturnValue;                   // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00C8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ConvertCSV_ReturnValue_1;                 // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0118(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_CreateDataTableCSVHeader_ReturnValue;     // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_EventTriggerPoint                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0140(0x0030)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ConvertCSV_ReturnValue_2;                 // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventTrigger_C_EntryDataTable) == 0x000010, "Wrong alignment on BP_EventTrigger_C_EntryDataTable");
static_assert(sizeof(BP_EventTrigger_C_EntryDataTable) == 0x0001A0, "Wrong size on BP_EventTrigger_C_EntryDataTable");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_EventTrigger_C_EntryDataTable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_IsEditor_ReturnValue) == 0x000004, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_NotEqual_NameName_ReturnValue) == 0x000040, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_BreakTransform_Location) == 0x000044, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_BreakTransform_Rotation) == 0x000050, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_BreakTransform_Scale) == 0x00005C, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_ConvertCSV_ReturnValue) == 0x000068, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_ConvertCSV_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000078, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_GetTransform_ReturnValue_1) == 0x000080, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_BreakTransform_Location_1) == 0x0000B0, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_BreakTransform_Rotation_1) == 0x0000BC, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_BreakTransform_Scale_1) == 0x0000C8, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, Temp_int_Loop_Counter_Variable) == 0x0000D4, "Member 'BP_EventTrigger_C_EntryDataTable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_ConvertCSV_ReturnValue_1) == 0x0000D8, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_ConvertCSV_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F0, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000100, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000108, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000118, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_CreateDataTableCSVHeader_ReturnValue) == 0x000128, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_CreateDataTableCSVHeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_Array_Get_Item) == 0x000138, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000140, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000170, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000171, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_Array_Length_ReturnValue) == 0x000174, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_ConvertCSV_ReturnValue_2) == 0x000178, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_ConvertCSV_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_Less_IntInt_ReturnValue) == 0x000188, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_EntryDataTable, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000190, "Member 'BP_EventTrigger_C_EntryDataTable::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_EventTrigger.BP_EventTrigger_C.ConvertCSV
// 0x00F0 (0x00F0 - 0x0000)
struct BP_EventTrigger_C_ConvertCSV final
{
public:
	class FName                                   EventID_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Postion;                                           // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x0014(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                Scale;                                             // 0x0020(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ConvertVectorToCSVString_ReturnValue;     // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ConvertRotaterToCSVString_ReturnValue;    // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ConvertVectorToCSVString_ReturnValue_1;   // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventTrigger_C_ConvertCSV) == 0x000008, "Wrong alignment on BP_EventTrigger_C_ConvertCSV");
static_assert(sizeof(BP_EventTrigger_C_ConvertCSV) == 0x0000F0, "Wrong size on BP_EventTrigger_C_ConvertCSV");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, EventID_0) == 0x000000, "Member 'BP_EventTrigger_C_ConvertCSV::EventID_0' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, Postion) == 0x000008, "Member 'BP_EventTrigger_C_ConvertCSV::Postion' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, Rotation) == 0x000014, "Member 'BP_EventTrigger_C_ConvertCSV::Rotation' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, Scale) == 0x000020, "Member 'BP_EventTrigger_C_ConvertCSV::Scale' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, ReturnValue) == 0x000030, "Member 'BP_EventTrigger_C_ConvertCSV::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, CallFunc_Conv_NameToString_ReturnValue) == 0x000040, "Member 'BP_EventTrigger_C_ConvertCSV::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, CallFunc_ConvertVectorToCSVString_ReturnValue) == 0x000050, "Member 'BP_EventTrigger_C_ConvertCSV::CallFunc_ConvertVectorToCSVString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'BP_EventTrigger_C_ConvertCSV::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, CallFunc_ConvertRotaterToCSVString_ReturnValue) == 0x000070, "Member 'BP_EventTrigger_C_ConvertCSV::CallFunc_ConvertRotaterToCSVString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000080, "Member 'BP_EventTrigger_C_ConvertCSV::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, CallFunc_ConvertVectorToCSVString_ReturnValue_1) == 0x000090, "Member 'BP_EventTrigger_C_ConvertCSV::CallFunc_ConvertVectorToCSVString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A0, "Member 'BP_EventTrigger_C_ConvertCSV::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000B0, "Member 'BP_EventTrigger_C_ConvertCSV::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000C0, "Member 'BP_EventTrigger_C_ConvertCSV::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000D0, "Member 'BP_EventTrigger_C_ConvertCSV::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_ConvertCSV, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0000E0, "Member 'BP_EventTrigger_C_ConvertCSV::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");

// Function BP_EventTrigger.BP_EventTrigger_C.GetAutoSaveLocation
// 0x0088 (0x0088 - 0x0000)
struct BP_EventTrigger_C_GetAutoSaveLocation final
{
public:
	class AActor*                                 self2;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_Origin;                    // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorBounds_BoxExtent;                 // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0064(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventTrigger_C_GetAutoSaveLocation) == 0x000008, "Wrong alignment on BP_EventTrigger_C_GetAutoSaveLocation");
static_assert(sizeof(BP_EventTrigger_C_GetAutoSaveLocation) == 0x000088, "Wrong size on BP_EventTrigger_C_GetAutoSaveLocation");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, self2) == 0x000000, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::self2' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, ReturnValue) == 0x000008, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, CallFunc_GetActorBounds_Origin) == 0x000014, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::CallFunc_GetActorBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, CallFunc_GetActorBounds_BoxExtent) == 0x000020, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::CallFunc_GetActorBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, CallFunc_GetComponentBounds_Origin) == 0x00002C, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, CallFunc_GetComponentBounds_BoxExtent) == 0x000038, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, CallFunc_GetComponentBounds_SphereRadius) == 0x000044, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000048, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000054, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, CallFunc_BreakVector_X) == 0x000058, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, CallFunc_BreakVector_Y) == 0x00005C, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, CallFunc_BreakVector_Z) == 0x000060, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, CallFunc_MakeVector_ReturnValue) == 0x000064, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, CallFunc_Normal_ReturnValue) == 0x000070, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_GetAutoSaveLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x00007C, "Member 'BP_EventTrigger_C_GetAutoSaveLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");

// Function BP_EventTrigger.BP_EventTrigger_C.StartEvent
// 0x0030 (0x0030 - 0x0000)
struct BP_EventTrigger_C_StartEvent final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorIsPlayer_ReturnValue;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameDataFlag*                          CallFunc_GetGameDataFlag_GameDataFlag;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanPlayEventUniqueCondition_ReturnValue;  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Debug_IsNotPlayEvent_ReturnValue;         // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventTrigger_C_StartEvent) == 0x000008, "Wrong alignment on BP_EventTrigger_C_StartEvent");
static_assert(sizeof(BP_EventTrigger_C_StartEvent) == 0x000030, "Wrong size on BP_EventTrigger_C_StartEvent");
static_assert(offsetof(BP_EventTrigger_C_StartEvent, OtherActor) == 0x000000, "Member 'BP_EventTrigger_C_StartEvent::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_StartEvent, CallFunc_ActorIsPlayer_ReturnValue) == 0x000008, "Member 'BP_EventTrigger_C_StartEvent::CallFunc_ActorIsPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_StartEvent, CallFunc_GetGameDataFlag_GameDataFlag) == 0x000010, "Member 'BP_EventTrigger_C_StartEvent::CallFunc_GetGameDataFlag_GameDataFlag' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_StartEvent, CallFunc_GetFlag_ReturnValue) == 0x000018, "Member 'BP_EventTrigger_C_StartEvent::CallFunc_GetFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_StartEvent, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'BP_EventTrigger_C_StartEvent::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_StartEvent, CallFunc_CanPlayEventUniqueCondition_ReturnValue) == 0x00001A, "Member 'BP_EventTrigger_C_StartEvent::CallFunc_CanPlayEventUniqueCondition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_StartEvent, CallFunc_Debug_IsNotPlayEvent_ReturnValue) == 0x00001B, "Member 'BP_EventTrigger_C_StartEvent::CallFunc_Debug_IsNotPlayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventTrigger_C_StartEvent, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'BP_EventTrigger_C_StartEvent::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");

}

