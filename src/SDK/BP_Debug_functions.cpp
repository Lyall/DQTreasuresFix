#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Debug

#include "Basic.hpp"

#include "BP_Debug_classes.hpp"
#include "BP_Debug_parameters.hpp"


namespace SDK
{

// Function BP_Debug.BP_Debug_C.ChangeDebugMoveSpeed
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ChangeValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

float UBP_Debug_C::ChangeDebugMoveSpeed(float ChangeValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "ChangeDebugMoveSpeed");

	Params::BP_Debug_C_ChangeDebugMoveSpeed Parms{};

	Parms.ChangeValue = ChangeValue;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_Debug.BP_Debug_C.Update
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Debug_C::Update(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Update");

	Params::BP_Debug_C_Update Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Debug.BP_Debug_C.Button_X
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Debug_C::Button_X(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Button_X");

	Params::BP_Debug_C_Button_X Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Debug.BP_Debug_C.Button_Y
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Debug_C::Button_Y(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Button_Y");

	Params::BP_Debug_C_Button_Y Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Debug.BP_Debug_C.Button_B
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Debug_C::Button_B(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Button_B");

	Params::BP_Debug_C_Button_B Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Debug.BP_Debug_C.Button_A
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Debug_C::Button_A(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Button_A");

	Params::BP_Debug_C_Button_A Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Debug.BP_Debug_C.Button_L
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Debug_C::Button_L(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Button_L");

	Params::BP_Debug_C_Button_L Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Debug.BP_Debug_C.Button_LT
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Debug_C::Button_LT(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Button_LT");

	Params::BP_Debug_C_Button_LT Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Debug.BP_Debug_C.Button_R
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Debug_C::Button_R(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Button_R");

	Params::BP_Debug_C_Button_R Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Debug.BP_Debug_C.Move
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InputVector                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Debug_C::Move(const struct FVector& InputVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Move");

	Params::BP_Debug_C_Move Parms{};

	Parms.InputVector = std::move(InputVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Debug.BP_Debug_C.Exit
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_Debug_C::Exit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Exit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Debug.BP_Debug_C.Button_RT
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Debug_C::Button_RT(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Button_RT");

	Params::BP_Debug_C_Button_RT Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Debug.BP_Debug_C.Button_Up
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Debug_C::Button_Up(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Button_Up");

	Params::BP_Debug_C_Button_Up Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Debug.BP_Debug_C.Button_Down
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Debug_C::Button_Down(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Button_Down");

	Params::BP_Debug_C_Button_Down Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Debug.BP_Debug_C.Button_Left
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Debug_C::Button_Left(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Button_Left");

	Params::BP_Debug_C_Button_Left Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Debug.BP_Debug_C.Button_Right
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_Debug_C::Button_Right(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Button_Right");

	Params::BP_Debug_C_Button_Right Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Debug.BP_Debug_C.Enter
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UBP_Debug_C::Enter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "Enter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Debug.BP_Debug_C.ExecuteUbergraph_BP_Debug
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_Debug_C::ExecuteUbergraph_BP_Debug(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Debug_C", "ExecuteUbergraph_BP_Debug");

	Params::BP_Debug_C_ExecuteUbergraph_BP_Debug Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}

}

