#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_FieldAction_Glut

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_FieldAction_Glut.W_FieldAction_Glut_C
// 0x0060 (0x0510 - 0x04B0)
class UW_FieldAction_Glut_C final : public UUIFieldAction_Glut
{
public:
	class UWidgetAnimation*                       NewAnimation_1;                                    // 0x04B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NewAnimation;                                      // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Glut_1Slot;                                        // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Mem;                                               // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Glut_3Slot;                                        // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Glut_2Slot;                                        // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Gauge_Base_1Slot;                                  // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Gauge_Base_2Slot;                                  // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Gauge_Base_3Slot;                                  // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mem_1;                                             // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mem_2;                                             // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mem_3;                                             // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_FieldAction_Glut_C">();
	}
	static class UW_FieldAction_Glut_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_FieldAction_Glut_C>();
	}
};
static_assert(alignof(UW_FieldAction_Glut_C) == 0x000008, "Wrong alignment on UW_FieldAction_Glut_C");
static_assert(sizeof(UW_FieldAction_Glut_C) == 0x000510, "Wrong size on UW_FieldAction_Glut_C");
static_assert(offsetof(UW_FieldAction_Glut_C, NewAnimation_1) == 0x0004B0, "Member 'UW_FieldAction_Glut_C::NewAnimation_1' has a wrong offset!");
static_assert(offsetof(UW_FieldAction_Glut_C, NewAnimation) == 0x0004B8, "Member 'UW_FieldAction_Glut_C::NewAnimation' has a wrong offset!");
static_assert(offsetof(UW_FieldAction_Glut_C, Glut_1Slot) == 0x0004C0, "Member 'UW_FieldAction_Glut_C::Glut_1Slot' has a wrong offset!");
static_assert(offsetof(UW_FieldAction_Glut_C, Mem) == 0x0004C8, "Member 'UW_FieldAction_Glut_C::Mem' has a wrong offset!");
static_assert(offsetof(UW_FieldAction_Glut_C, Glut_3Slot) == 0x0004D0, "Member 'UW_FieldAction_Glut_C::Glut_3Slot' has a wrong offset!");
static_assert(offsetof(UW_FieldAction_Glut_C, Glut_2Slot) == 0x0004D8, "Member 'UW_FieldAction_Glut_C::Glut_2Slot' has a wrong offset!");
static_assert(offsetof(UW_FieldAction_Glut_C, Gauge_Base_1Slot) == 0x0004E0, "Member 'UW_FieldAction_Glut_C::Gauge_Base_1Slot' has a wrong offset!");
static_assert(offsetof(UW_FieldAction_Glut_C, Gauge_Base_2Slot) == 0x0004E8, "Member 'UW_FieldAction_Glut_C::Gauge_Base_2Slot' has a wrong offset!");
static_assert(offsetof(UW_FieldAction_Glut_C, Gauge_Base_3Slot) == 0x0004F0, "Member 'UW_FieldAction_Glut_C::Gauge_Base_3Slot' has a wrong offset!");
static_assert(offsetof(UW_FieldAction_Glut_C, Mem_1) == 0x0004F8, "Member 'UW_FieldAction_Glut_C::Mem_1' has a wrong offset!");
static_assert(offsetof(UW_FieldAction_Glut_C, Mem_2) == 0x000500, "Member 'UW_FieldAction_Glut_C::Mem_2' has a wrong offset!");
static_assert(offsetof(UW_FieldAction_Glut_C, Mem_3) == 0x000508, "Member 'UW_FieldAction_Glut_C::Mem_3' has a wrong offset!");

}

