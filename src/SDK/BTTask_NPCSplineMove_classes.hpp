#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_NPCSplineMove

#include "Basic.hpp"

#include "BTTask_Base_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTTask_NPCSplineMove.BTTask_NPCSplineMove_C
// 0x0048 (0x0158 - 0x0110)
class UBTTask_NPCSplineMove_C final : public UBTTask_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BTTask_NPCSplineMove_C;             // 0x0110(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ANPCBase*                               NPCBase;                                           // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Position;                                          // 0x0120(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          EndFlag;                                           // 0x0124(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_125[0x3];                                      // 0x0125(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          OwnController;                                     // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugInfo;                                         // 0x0130(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          DebugSphereDraw;                                   // 0x0131(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Color;                                             // 0x0134(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DefaultSpeed;                                      // 0x0144(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaTime;                                         // 0x0148(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x014C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedRate;                                         // 0x0150(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTTask_NPCSplineMove(int32 EntryPoint);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void SetMoveState();
	void StopMoveState();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTTask_NPCSplineMove_C">();
	}
	static class UBTTask_NPCSplineMove_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTTask_NPCSplineMove_C>();
	}
};
static_assert(alignof(UBTTask_NPCSplineMove_C) == 0x000008, "Wrong alignment on UBTTask_NPCSplineMove_C");
static_assert(sizeof(UBTTask_NPCSplineMove_C) == 0x000158, "Wrong size on UBTTask_NPCSplineMove_C");
static_assert(offsetof(UBTTask_NPCSplineMove_C, UberGraphFrame_BTTask_NPCSplineMove_C) == 0x000110, "Member 'UBTTask_NPCSplineMove_C::UberGraphFrame_BTTask_NPCSplineMove_C' has a wrong offset!");
static_assert(offsetof(UBTTask_NPCSplineMove_C, NPCBase) == 0x000118, "Member 'UBTTask_NPCSplineMove_C::NPCBase' has a wrong offset!");
static_assert(offsetof(UBTTask_NPCSplineMove_C, Position) == 0x000120, "Member 'UBTTask_NPCSplineMove_C::Position' has a wrong offset!");
static_assert(offsetof(UBTTask_NPCSplineMove_C, EndFlag) == 0x000124, "Member 'UBTTask_NPCSplineMove_C::EndFlag' has a wrong offset!");
static_assert(offsetof(UBTTask_NPCSplineMove_C, OwnController) == 0x000128, "Member 'UBTTask_NPCSplineMove_C::OwnController' has a wrong offset!");
static_assert(offsetof(UBTTask_NPCSplineMove_C, DebugInfo) == 0x000130, "Member 'UBTTask_NPCSplineMove_C::DebugInfo' has a wrong offset!");
static_assert(offsetof(UBTTask_NPCSplineMove_C, DebugSphereDraw) == 0x000131, "Member 'UBTTask_NPCSplineMove_C::DebugSphereDraw' has a wrong offset!");
static_assert(offsetof(UBTTask_NPCSplineMove_C, Color) == 0x000134, "Member 'UBTTask_NPCSplineMove_C::Color' has a wrong offset!");
static_assert(offsetof(UBTTask_NPCSplineMove_C, DefaultSpeed) == 0x000144, "Member 'UBTTask_NPCSplineMove_C::DefaultSpeed' has a wrong offset!");
static_assert(offsetof(UBTTask_NPCSplineMove_C, DeltaTime) == 0x000148, "Member 'UBTTask_NPCSplineMove_C::DeltaTime' has a wrong offset!");
static_assert(offsetof(UBTTask_NPCSplineMove_C, Speed) == 0x00014C, "Member 'UBTTask_NPCSplineMove_C::Speed' has a wrong offset!");
static_assert(offsetof(UBTTask_NPCSplineMove_C, SpeedRate) == 0x000150, "Member 'UBTTask_NPCSplineMove_C::SpeedRate' has a wrong offset!");

}

