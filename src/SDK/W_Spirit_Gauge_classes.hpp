#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Spirit_Gauge

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Spirit_Gauge.W_Spirit_Gauge_C
// 0x0060 (0x0680 - 0x0620)
class UW_Spirit_Gauge_C final : public UUISpirit_Gauge
{
public:
	class UWidgetAnimation*                       Gauge_Low_Change;                                  // 0x0620(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Gauge_Mid_Change;                                  // 0x0628(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Gauge_All;                                         // 0x0630(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Gauge_Low;                                         // 0x0638(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Gauge_Mid;                                         // 0x0640(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Gauge_Full;                                        // 0x0648(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x0650(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0658(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Face;                                              // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Gauge_Base;                                        // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Gauge_Body;                                        // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Gauge_Edge;                                        // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Spirit_Gauge_C">();
	}
	static class UW_Spirit_Gauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Spirit_Gauge_C>();
	}
};
static_assert(alignof(UW_Spirit_Gauge_C) == 0x000010, "Wrong alignment on UW_Spirit_Gauge_C");
static_assert(sizeof(UW_Spirit_Gauge_C) == 0x000680, "Wrong size on UW_Spirit_Gauge_C");
static_assert(offsetof(UW_Spirit_Gauge_C, Gauge_Low_Change) == 0x000620, "Member 'UW_Spirit_Gauge_C::Gauge_Low_Change' has a wrong offset!");
static_assert(offsetof(UW_Spirit_Gauge_C, Gauge_Mid_Change) == 0x000628, "Member 'UW_Spirit_Gauge_C::Gauge_Mid_Change' has a wrong offset!");
static_assert(offsetof(UW_Spirit_Gauge_C, Gauge_All) == 0x000630, "Member 'UW_Spirit_Gauge_C::Gauge_All' has a wrong offset!");
static_assert(offsetof(UW_Spirit_Gauge_C, Gauge_Low) == 0x000638, "Member 'UW_Spirit_Gauge_C::Gauge_Low' has a wrong offset!");
static_assert(offsetof(UW_Spirit_Gauge_C, Gauge_Mid) == 0x000640, "Member 'UW_Spirit_Gauge_C::Gauge_Mid' has a wrong offset!");
static_assert(offsetof(UW_Spirit_Gauge_C, Gauge_Full) == 0x000648, "Member 'UW_Spirit_Gauge_C::Gauge_Full' has a wrong offset!");
static_assert(offsetof(UW_Spirit_Gauge_C, Out) == 0x000650, "Member 'UW_Spirit_Gauge_C::Out' has a wrong offset!");
static_assert(offsetof(UW_Spirit_Gauge_C, In) == 0x000658, "Member 'UW_Spirit_Gauge_C::In' has a wrong offset!");
static_assert(offsetof(UW_Spirit_Gauge_C, Face) == 0x000660, "Member 'UW_Spirit_Gauge_C::Face' has a wrong offset!");
static_assert(offsetof(UW_Spirit_Gauge_C, Gauge_Base) == 0x000668, "Member 'UW_Spirit_Gauge_C::Gauge_Base' has a wrong offset!");
static_assert(offsetof(UW_Spirit_Gauge_C, Gauge_Body) == 0x000670, "Member 'UW_Spirit_Gauge_C::Gauge_Body' has a wrong offset!");
static_assert(offsetof(UW_Spirit_Gauge_C, Gauge_Edge) == 0x000678, "Member 'UW_Spirit_Gauge_C::Gauge_Edge' has a wrong offset!");

}

