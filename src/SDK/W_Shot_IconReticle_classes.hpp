#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Shot_IconReticle

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Shot_IconReticle.W_Shot_IconReticle_C
// 0x0100 (0x06A8 - 0x05A8)
class UW_Shot_IconReticle_C final : public UUIShot_IconReticle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x05A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hold_On_qq;                                        // 0x05B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       R_Guide_Click_Free;                                // 0x05B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       L_Guide_Click_Free;                                // 0x05C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Lock_Wait;                                         // 0x05C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Name_Off;                                          // 0x05D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Name_On;                                           // 0x05D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       R_Guide_Click;                                     // 0x05E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       L_Guide_Click;                                     // 0x05E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LR_Guide_02;                                       // 0x05F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LR_Guide_01;                                       // 0x05F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Assist_UnLock;                                     // 0x0600(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Assist_Lock;                                       // 0x0608(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Empty;                                             // 0x0610(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hold_Off;                                          // 0x0618(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Shot;                                              // 0x0620(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x0628(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0630(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Hold_On;                                           // 0x0638(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Base_Button_L;                                     // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Base_Button_R;                                     // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Button_L;                                          // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Button_R;                                          // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Lock_Bottom;                                       // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Lock_Left;                                         // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Lock_Right;                                        // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Lock_Top;                                          // 0x0678(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Reticle_01;                                        // 0x0680(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Reticle_02;                                        // 0x0688(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Reticle_L;                                         // 0x0690(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Reticle_R;                                         // 0x0698(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Shot_MonsterName_C*                  W_Shot_MonsterName;                                // 0x06A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void SlingShot();
	void SetReticleVisibility(bool visible);
	void SetAim(bool IsAim);
	void ExecuteUbergraph_W_Shot_IconReticle(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Shot_IconReticle_C">();
	}
	static class UW_Shot_IconReticle_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Shot_IconReticle_C>();
	}
};
static_assert(alignof(UW_Shot_IconReticle_C) == 0x000008, "Wrong alignment on UW_Shot_IconReticle_C");
static_assert(sizeof(UW_Shot_IconReticle_C) == 0x0006A8, "Wrong size on UW_Shot_IconReticle_C");
static_assert(offsetof(UW_Shot_IconReticle_C, UberGraphFrame) == 0x0005A8, "Member 'UW_Shot_IconReticle_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Hold_On_qq) == 0x0005B0, "Member 'UW_Shot_IconReticle_C::Hold_On_qq' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, R_Guide_Click_Free) == 0x0005B8, "Member 'UW_Shot_IconReticle_C::R_Guide_Click_Free' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, L_Guide_Click_Free) == 0x0005C0, "Member 'UW_Shot_IconReticle_C::L_Guide_Click_Free' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Lock_Wait) == 0x0005C8, "Member 'UW_Shot_IconReticle_C::Lock_Wait' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Name_Off) == 0x0005D0, "Member 'UW_Shot_IconReticle_C::Name_Off' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Name_On) == 0x0005D8, "Member 'UW_Shot_IconReticle_C::Name_On' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, R_Guide_Click) == 0x0005E0, "Member 'UW_Shot_IconReticle_C::R_Guide_Click' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, L_Guide_Click) == 0x0005E8, "Member 'UW_Shot_IconReticle_C::L_Guide_Click' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, LR_Guide_02) == 0x0005F0, "Member 'UW_Shot_IconReticle_C::LR_Guide_02' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, LR_Guide_01) == 0x0005F8, "Member 'UW_Shot_IconReticle_C::LR_Guide_01' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Assist_UnLock) == 0x000600, "Member 'UW_Shot_IconReticle_C::Assist_UnLock' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Assist_Lock) == 0x000608, "Member 'UW_Shot_IconReticle_C::Assist_Lock' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Empty) == 0x000610, "Member 'UW_Shot_IconReticle_C::Empty' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Hold_Off) == 0x000618, "Member 'UW_Shot_IconReticle_C::Hold_Off' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Shot) == 0x000620, "Member 'UW_Shot_IconReticle_C::Shot' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Out) == 0x000628, "Member 'UW_Shot_IconReticle_C::Out' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, In) == 0x000630, "Member 'UW_Shot_IconReticle_C::In' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Hold_On) == 0x000638, "Member 'UW_Shot_IconReticle_C::Hold_On' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Base_Button_L) == 0x000640, "Member 'UW_Shot_IconReticle_C::Base_Button_L' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Base_Button_R) == 0x000648, "Member 'UW_Shot_IconReticle_C::Base_Button_R' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Button_L) == 0x000650, "Member 'UW_Shot_IconReticle_C::Button_L' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Button_R) == 0x000658, "Member 'UW_Shot_IconReticle_C::Button_R' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Lock_Bottom) == 0x000660, "Member 'UW_Shot_IconReticle_C::Lock_Bottom' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Lock_Left) == 0x000668, "Member 'UW_Shot_IconReticle_C::Lock_Left' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Lock_Right) == 0x000670, "Member 'UW_Shot_IconReticle_C::Lock_Right' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Lock_Top) == 0x000678, "Member 'UW_Shot_IconReticle_C::Lock_Top' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Reticle_01) == 0x000680, "Member 'UW_Shot_IconReticle_C::Reticle_01' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Reticle_02) == 0x000688, "Member 'UW_Shot_IconReticle_C::Reticle_02' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Reticle_L) == 0x000690, "Member 'UW_Shot_IconReticle_C::Reticle_L' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, Reticle_R) == 0x000698, "Member 'UW_Shot_IconReticle_C::Reticle_R' has a wrong offset!");
static_assert(offsetof(UW_Shot_IconReticle_C, W_Shot_MonsterName) == 0x0006A0, "Member 'UW_Shot_IconReticle_C::W_Shot_MonsterName' has a wrong offset!");

}

