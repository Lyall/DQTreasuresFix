#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTS_NPCSplineNaviUpdate

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BTS_SetTraceTarget_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTS_NPCSplineNaviUpdate.BTS_NPCSplineNaviUpdate_C
// 0x0028 (0x00F8 - 0x00D0)
class UBTS_NPCSplineNaviUpdate_C final : public UBTS_SetTraceTarget_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BTS_NPCSplineNaviUpdate_C;          // 0x00D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ANPCBase*                               NPCBase;                                           // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         SpeedRate;                                         // 0x00E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x00E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MoveLoopDirection;                                 // 0x00E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LoopFlg;                                           // 0x00EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_ED[0x3];                                       // 0x00ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         PointNum;                                          // 0x00F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTS_NPCSplineNaviUpdate(int32 EntryPoint);
	void ReceiveTickAI(class AAIController* OwnerController, class APawn* ControlledPawn, float DeltaSeconds);
	void ReceiveActivationAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void UpdateMoveIndex(class ANPCBase* NPCBase_0);
	void UpdateMoveParams(class ANPCBase* NPCBase_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTS_NPCSplineNaviUpdate_C">();
	}
	static class UBTS_NPCSplineNaviUpdate_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTS_NPCSplineNaviUpdate_C>();
	}
};
static_assert(alignof(UBTS_NPCSplineNaviUpdate_C) == 0x000008, "Wrong alignment on UBTS_NPCSplineNaviUpdate_C");
static_assert(sizeof(UBTS_NPCSplineNaviUpdate_C) == 0x0000F8, "Wrong size on UBTS_NPCSplineNaviUpdate_C");
static_assert(offsetof(UBTS_NPCSplineNaviUpdate_C, UberGraphFrame_BTS_NPCSplineNaviUpdate_C) == 0x0000D0, "Member 'UBTS_NPCSplineNaviUpdate_C::UberGraphFrame_BTS_NPCSplineNaviUpdate_C' has a wrong offset!");
static_assert(offsetof(UBTS_NPCSplineNaviUpdate_C, NPCBase) == 0x0000D8, "Member 'UBTS_NPCSplineNaviUpdate_C::NPCBase' has a wrong offset!");
static_assert(offsetof(UBTS_NPCSplineNaviUpdate_C, SpeedRate) == 0x0000E0, "Member 'UBTS_NPCSplineNaviUpdate_C::SpeedRate' has a wrong offset!");
static_assert(offsetof(UBTS_NPCSplineNaviUpdate_C, Index_0) == 0x0000E4, "Member 'UBTS_NPCSplineNaviUpdate_C::Index_0' has a wrong offset!");
static_assert(offsetof(UBTS_NPCSplineNaviUpdate_C, MoveLoopDirection) == 0x0000E8, "Member 'UBTS_NPCSplineNaviUpdate_C::MoveLoopDirection' has a wrong offset!");
static_assert(offsetof(UBTS_NPCSplineNaviUpdate_C, LoopFlg) == 0x0000EC, "Member 'UBTS_NPCSplineNaviUpdate_C::LoopFlg' has a wrong offset!");
static_assert(offsetof(UBTS_NPCSplineNaviUpdate_C, PointNum) == 0x0000F0, "Member 'UBTS_NPCSplineNaviUpdate_C::PointNum' has a wrong offset!");

}

