#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Damage

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Damage.GA_Damage_C.ExecuteUbergraph_GA_Damage
// 0x0510 (0x0510 - 0x0000)
struct GA_Damage_C_ExecuteUbergraph_GA_Damage final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterInterface>   CallFunc_GetCurrentMoveStateTag_self_CastInput;    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           CallFunc_GetCurrentMoveStateTag_ReturnValue;       // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0020(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_4;                     // 0x0034(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_4;                    // 0x0040(0x00B0)()
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_3;                     // 0x00F0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_3;                    // 0x00F8(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x01A8(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_2;                     // 0x01B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_2;                    // 0x01C0(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0270(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x0280(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x0288(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0338(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0348(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0350(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0400(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0410(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x04C0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4CA[0x6];                                      // 0x04CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAbilityTask_PlayMontageAndWaitEvent*   CallFunc_PlayMontageAndWaitEvent_ReturnValue;      // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGPACharacter*                          K2Node_DynamicCast_AsGPACharacter;                 // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EA[0x6];                                      // 0x04EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface;          // 0x04F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Damage_C_ExecuteUbergraph_GA_Damage) == 0x000008, "Wrong alignment on GA_Damage_C_ExecuteUbergraph_GA_Damage");
static_assert(sizeof(GA_Damage_C_ExecuteUbergraph_GA_Damage) == 0x000510, "Wrong size on GA_Damage_C_ExecuteUbergraph_GA_Damage");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, EntryPoint) == 0x000000, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, CallFunc_GetCurrentMoveStateTag_self_CastInput) == 0x000008, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::CallFunc_GetCurrentMoveStateTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, CallFunc_GetCurrentMoveStateTag_ReturnValue) == 0x000018, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::CallFunc_GetCurrentMoveStateTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CreateDelegate_OutputDelegate) == 0x000020, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x000030, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CustomEvent_EventTag_4) == 0x000034, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CustomEvent_EventTag_4' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CustomEvent_EventData_4) == 0x000040, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CustomEvent_EventData_4' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CustomEvent_EventTag_3) == 0x0000F0, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CustomEvent_EventTag_3' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CustomEvent_EventData_3) == 0x0000F8, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CustomEvent_EventData_3' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CreateDelegate_OutputDelegate_1) == 0x0001A8, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CustomEvent_EventTag_2) == 0x0001B8, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CustomEvent_EventTag_2' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CustomEvent_EventData_2) == 0x0001C0, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CustomEvent_EventData_2' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CreateDelegate_OutputDelegate_2) == 0x000270, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CustomEvent_EventTag_1) == 0x000280, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CustomEvent_EventData_1) == 0x000288, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CreateDelegate_OutputDelegate_3) == 0x000338, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CustomEvent_EventTag) == 0x000348, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CustomEvent_EventData) == 0x000350, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_CreateDelegate_OutputDelegate_4) == 0x000400, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, Temp_struct_Variable) == 0x000410, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, Temp_struct_Variable_1) == 0x0004C0, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x0004C8, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_Event_bWasCancelled) == 0x0004C9, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0004D0, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, CallFunc_PlayMontageAndWaitEvent_ReturnValue) == 0x0004D8, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::CallFunc_PlayMontageAndWaitEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_DynamicCast_AsGPACharacter) == 0x0004E0, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_DynamicCast_AsGPACharacter' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_DynamicCast_bSuccess) == 0x0004E8, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, CallFunc_IsValid_ReturnValue) == 0x0004E9, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x0004F0, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_DynamicCast_AsCharacter_Interface) == 0x0004F8, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_DynamicCast_AsCharacter_Interface' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_ExecuteUbergraph_GA_Damage, K2Node_DynamicCast_bSuccess_1) == 0x000508, "Member 'GA_Damage_C_ExecuteUbergraph_GA_Damage::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function GA_Damage.GA_Damage_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Damage_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Damage_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Damage_C_K2_OnEndAbility");
static_assert(sizeof(GA_Damage_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Damage_C_K2_OnEndAbility");
static_assert(offsetof(GA_Damage_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Damage_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Damage.GA_Damage_C.OnCompleted_25391CAE4141FEF67F9286BF5760C0DE
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Damage_C_OnCompleted_25391CAE4141FEF67F9286BF5760C0DE final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Damage_C_OnCompleted_25391CAE4141FEF67F9286BF5760C0DE) == 0x000008, "Wrong alignment on GA_Damage_C_OnCompleted_25391CAE4141FEF67F9286BF5760C0DE");
static_assert(sizeof(GA_Damage_C_OnCompleted_25391CAE4141FEF67F9286BF5760C0DE) == 0x0000B8, "Wrong size on GA_Damage_C_OnCompleted_25391CAE4141FEF67F9286BF5760C0DE");
static_assert(offsetof(GA_Damage_C_OnCompleted_25391CAE4141FEF67F9286BF5760C0DE, EventTag) == 0x000000, "Member 'GA_Damage_C_OnCompleted_25391CAE4141FEF67F9286BF5760C0DE::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_OnCompleted_25391CAE4141FEF67F9286BF5760C0DE, EventData) == 0x000008, "Member 'GA_Damage_C_OnCompleted_25391CAE4141FEF67F9286BF5760C0DE::EventData' has a wrong offset!");

// Function GA_Damage.GA_Damage_C.OnBlendOut_25391CAE4141FEF67F9286BF5760C0DE
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Damage_C_OnBlendOut_25391CAE4141FEF67F9286BF5760C0DE final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Damage_C_OnBlendOut_25391CAE4141FEF67F9286BF5760C0DE) == 0x000008, "Wrong alignment on GA_Damage_C_OnBlendOut_25391CAE4141FEF67F9286BF5760C0DE");
static_assert(sizeof(GA_Damage_C_OnBlendOut_25391CAE4141FEF67F9286BF5760C0DE) == 0x0000B8, "Wrong size on GA_Damage_C_OnBlendOut_25391CAE4141FEF67F9286BF5760C0DE");
static_assert(offsetof(GA_Damage_C_OnBlendOut_25391CAE4141FEF67F9286BF5760C0DE, EventTag) == 0x000000, "Member 'GA_Damage_C_OnBlendOut_25391CAE4141FEF67F9286BF5760C0DE::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_OnBlendOut_25391CAE4141FEF67F9286BF5760C0DE, EventData) == 0x000008, "Member 'GA_Damage_C_OnBlendOut_25391CAE4141FEF67F9286BF5760C0DE::EventData' has a wrong offset!");

// Function GA_Damage.GA_Damage_C.OnInterrupted_25391CAE4141FEF67F9286BF5760C0DE
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Damage_C_OnInterrupted_25391CAE4141FEF67F9286BF5760C0DE final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Damage_C_OnInterrupted_25391CAE4141FEF67F9286BF5760C0DE) == 0x000008, "Wrong alignment on GA_Damage_C_OnInterrupted_25391CAE4141FEF67F9286BF5760C0DE");
static_assert(sizeof(GA_Damage_C_OnInterrupted_25391CAE4141FEF67F9286BF5760C0DE) == 0x0000B8, "Wrong size on GA_Damage_C_OnInterrupted_25391CAE4141FEF67F9286BF5760C0DE");
static_assert(offsetof(GA_Damage_C_OnInterrupted_25391CAE4141FEF67F9286BF5760C0DE, EventTag) == 0x000000, "Member 'GA_Damage_C_OnInterrupted_25391CAE4141FEF67F9286BF5760C0DE::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_OnInterrupted_25391CAE4141FEF67F9286BF5760C0DE, EventData) == 0x000008, "Member 'GA_Damage_C_OnInterrupted_25391CAE4141FEF67F9286BF5760C0DE::EventData' has a wrong offset!");

// Function GA_Damage.GA_Damage_C.OnCancelled_25391CAE4141FEF67F9286BF5760C0DE
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Damage_C_OnCancelled_25391CAE4141FEF67F9286BF5760C0DE final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Damage_C_OnCancelled_25391CAE4141FEF67F9286BF5760C0DE) == 0x000008, "Wrong alignment on GA_Damage_C_OnCancelled_25391CAE4141FEF67F9286BF5760C0DE");
static_assert(sizeof(GA_Damage_C_OnCancelled_25391CAE4141FEF67F9286BF5760C0DE) == 0x0000B8, "Wrong size on GA_Damage_C_OnCancelled_25391CAE4141FEF67F9286BF5760C0DE");
static_assert(offsetof(GA_Damage_C_OnCancelled_25391CAE4141FEF67F9286BF5760C0DE, EventTag) == 0x000000, "Member 'GA_Damage_C_OnCancelled_25391CAE4141FEF67F9286BF5760C0DE::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_OnCancelled_25391CAE4141FEF67F9286BF5760C0DE, EventData) == 0x000008, "Member 'GA_Damage_C_OnCancelled_25391CAE4141FEF67F9286BF5760C0DE::EventData' has a wrong offset!");

// Function GA_Damage.GA_Damage_C.EventReceived_25391CAE4141FEF67F9286BF5760C0DE
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Damage_C_EventReceived_25391CAE4141FEF67F9286BF5760C0DE final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Damage_C_EventReceived_25391CAE4141FEF67F9286BF5760C0DE) == 0x000008, "Wrong alignment on GA_Damage_C_EventReceived_25391CAE4141FEF67F9286BF5760C0DE");
static_assert(sizeof(GA_Damage_C_EventReceived_25391CAE4141FEF67F9286BF5760C0DE) == 0x0000B8, "Wrong size on GA_Damage_C_EventReceived_25391CAE4141FEF67F9286BF5760C0DE");
static_assert(offsetof(GA_Damage_C_EventReceived_25391CAE4141FEF67F9286BF5760C0DE, EventTag) == 0x000000, "Member 'GA_Damage_C_EventReceived_25391CAE4141FEF67F9286BF5760C0DE::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Damage_C_EventReceived_25391CAE4141FEF67F9286BF5760C0DE, EventData) == 0x000008, "Member 'GA_Damage_C_EventReceived_25391CAE4141FEF67F9286BF5760C0DE::EventData' has a wrong offset!");

}

