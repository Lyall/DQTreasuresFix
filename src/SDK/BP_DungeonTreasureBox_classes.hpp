#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_DungeonTreasureBox

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_DungeonTreasureBox.BP_DungeonTreasureBox_C
// 0x0030 (0x0340 - 0x0310)
class ABP_DungeonTreasureBox_C final : public ADungeonTreasureBox
{
public:
	class UToggleVisibilityComponent*             ToggleVisibility;                                  // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Effect;                                            // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UObjectReactionDefaultComponent*        ObjectReactionDefault;                             // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 RootBox;                                           // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          HitCollision;                                      // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	class USkeletalMeshComponent* GetRootBoxMesh() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_DungeonTreasureBox_C">();
	}
	static class ABP_DungeonTreasureBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_DungeonTreasureBox_C>();
	}
};
static_assert(alignof(ABP_DungeonTreasureBox_C) == 0x000008, "Wrong alignment on ABP_DungeonTreasureBox_C");
static_assert(sizeof(ABP_DungeonTreasureBox_C) == 0x000340, "Wrong size on ABP_DungeonTreasureBox_C");
static_assert(offsetof(ABP_DungeonTreasureBox_C, ToggleVisibility) == 0x000310, "Member 'ABP_DungeonTreasureBox_C::ToggleVisibility' has a wrong offset!");
static_assert(offsetof(ABP_DungeonTreasureBox_C, Effect) == 0x000318, "Member 'ABP_DungeonTreasureBox_C::Effect' has a wrong offset!");
static_assert(offsetof(ABP_DungeonTreasureBox_C, ObjectReactionDefault) == 0x000320, "Member 'ABP_DungeonTreasureBox_C::ObjectReactionDefault' has a wrong offset!");
static_assert(offsetof(ABP_DungeonTreasureBox_C, RootBox) == 0x000328, "Member 'ABP_DungeonTreasureBox_C::RootBox' has a wrong offset!");
static_assert(offsetof(ABP_DungeonTreasureBox_C, HitCollision) == 0x000330, "Member 'ABP_DungeonTreasureBox_C::HitCollision' has a wrong offset!");
static_assert(offsetof(ABP_DungeonTreasureBox_C, DefaultSceneRoot) == 0x000338, "Member 'ABP_DungeonTreasureBox_C::DefaultSceneRoot' has a wrong offset!");

}

