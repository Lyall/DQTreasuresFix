#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_GazePlayer

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DarwinGame_structs.hpp"


namespace SDK::Params
{

// Function BTTask_GazePlayer.BTTask_GazePlayer_C.ExecuteUbergraph_BTTask_GazePlayer
// 0x0150 (0x0150 - 0x0000)
struct BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_3;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_3;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMonsterBase*                           K2Node_DynamicCast_AsMonster_Base;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFieldManager*                          CallFunc_GetInstance_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMonsterBTTaskExecuter*                 CallFunc_GetMonsterBTTaskExecuter_ReturnValue;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMonsterBase*                           K2Node_DynamicCast_AsMonster_Base_1;               // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ExecuteTask_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorOnBlackboard_ReturnValue;        // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMonster*                               K2Node_DynamicCast_AsMonster;                      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface;          // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VSize_ReturnValue;                        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMonsterEcologicalAI*                   CallFunc_GetEcologicalAI_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMonsterTableComponent*                 CallFunc_GetMonsterTableComponent_ReturnValue;     // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_EcologicalMotionData               CallFunc_GetEcologicalMotionData_out;              // 0x00D0(0x0028)()
	bool                                          CallFunc_GetEcologicalMotionData_ReturnValue;      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFieldManager*                          CallFunc_GetInstance_ReturnValue_1;                // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMonsterBase*                           K2Node_DynamicCast_AsMonster_Base_2;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMonsterBTTaskExecuter*                 CallFunc_GetMonsterBTTaskExecuter_ReturnValue_1;   // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMonsterBase*                           K2Node_DynamicCast_AsMonster_Base_3;               // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer) == 0x000008, "Wrong alignment on BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer");
static_assert(sizeof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer) == 0x000150, "Wrong size on BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, EntryPoint) == 0x000000, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_Event_OwnerController_3) == 0x000018, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_Event_OwnerController_3' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_Event_ControlledPawn_3) == 0x000020, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_Event_ControlledPawn_3' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_Event_DeltaSeconds) == 0x000028, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_DynamicCast_AsMonster_Base) == 0x000030, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_DynamicCast_AsMonster_Base' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, CallFunc_GetInstance_ReturnValue) == 0x000040, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_Event_OwnerController_2) == 0x000048, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_Event_ControlledPawn_2) == 0x000050, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, CallFunc_GetMonsterBTTaskExecuter_ReturnValue) == 0x000058, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::CallFunc_GetMonsterBTTaskExecuter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_DynamicCast_AsMonster_Base_1) == 0x000060, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_DynamicCast_AsMonster_Base_1' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_DynamicCast_bSuccess_1) == 0x000068, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, CallFunc_ExecuteTask_ReturnValue) == 0x000069, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::CallFunc_ExecuteTask_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00006C, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, CallFunc_GetVectorOnBlackboard_ReturnValue) == 0x000078, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::CallFunc_GetVectorOnBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_DynamicCast_AsMonster) == 0x000088, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_DynamicCast_AsMonster' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_DynamicCast_bSuccess_2) == 0x000090, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000094, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_DynamicCast_AsCharacter_Interface) == 0x0000A0, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_DynamicCast_AsCharacter_Interface' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, CallFunc_VSize_ReturnValue) == 0x0000B4, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000B8, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, CallFunc_GetEcologicalAI_ReturnValue) == 0x0000C0, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::CallFunc_GetEcologicalAI_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, CallFunc_GetMonsterTableComponent_ReturnValue) == 0x0000C8, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::CallFunc_GetMonsterTableComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, CallFunc_GetEcologicalMotionData_out) == 0x0000D0, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::CallFunc_GetEcologicalMotionData_out' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, CallFunc_GetEcologicalMotionData_ReturnValue) == 0x0000F8, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::CallFunc_GetEcologicalMotionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_Event_OwnerController_1) == 0x000100, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_Event_ControlledPawn_1) == 0x000108, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, CallFunc_GetInstance_ReturnValue_1) == 0x000110, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::CallFunc_GetInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_DynamicCast_AsMonster_Base_2) == 0x000118, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_DynamicCast_AsMonster_Base_2' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_DynamicCast_bSuccess_4) == 0x000120, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, CallFunc_GetMonsterBTTaskExecuter_ReturnValue_1) == 0x000128, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::CallFunc_GetMonsterBTTaskExecuter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_Event_OwnerController) == 0x000130, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_Event_ControlledPawn) == 0x000138, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_DynamicCast_AsMonster_Base_3) == 0x000140, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_DynamicCast_AsMonster_Base_3' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer, K2Node_DynamicCast_bSuccess_5) == 0x000148, "Member 'BTTask_GazePlayer_C_ExecuteUbergraph_BTTask_GazePlayer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");

// Function BTTask_GazePlayer.BTTask_GazePlayer_C.ReceiveFinished
// 0x0010 (0x0010 - 0x0000)
struct BTTask_GazePlayer_C_ReceiveFinished final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_GazePlayer_C_ReceiveFinished) == 0x000008, "Wrong alignment on BTTask_GazePlayer_C_ReceiveFinished");
static_assert(sizeof(BTTask_GazePlayer_C_ReceiveFinished) == 0x000010, "Wrong size on BTTask_GazePlayer_C_ReceiveFinished");
static_assert(offsetof(BTTask_GazePlayer_C_ReceiveFinished, OwnerController) == 0x000000, "Member 'BTTask_GazePlayer_C_ReceiveFinished::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ReceiveFinished, ControlledPawn) == 0x000008, "Member 'BTTask_GazePlayer_C_ReceiveFinished::ControlledPawn' has a wrong offset!");

// Function BTTask_GazePlayer.BTTask_GazePlayer_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_GazePlayer_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_GazePlayer_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTTask_GazePlayer_C_ReceiveAbortAI");
static_assert(sizeof(BTTask_GazePlayer_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTTask_GazePlayer_C_ReceiveAbortAI");
static_assert(offsetof(BTTask_GazePlayer_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTTask_GazePlayer_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTTask_GazePlayer_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTTask_GazePlayer.BTTask_GazePlayer_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_GazePlayer_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_GazePlayer_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTTask_GazePlayer_C_ReceiveExecuteAI");
static_assert(sizeof(BTTask_GazePlayer_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTTask_GazePlayer_C_ReceiveExecuteAI");
static_assert(offsetof(BTTask_GazePlayer_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTTask_GazePlayer_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTTask_GazePlayer_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTTask_GazePlayer.BTTask_GazePlayer_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTTask_GazePlayer_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_GazePlayer_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTTask_GazePlayer_C_ReceiveTickAI");
static_assert(sizeof(BTTask_GazePlayer_C_ReceiveTickAI) == 0x000018, "Wrong size on BTTask_GazePlayer_C_ReceiveTickAI");
static_assert(offsetof(BTTask_GazePlayer_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTTask_GazePlayer_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTTask_GazePlayer_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_GazePlayer_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTTask_GazePlayer_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

