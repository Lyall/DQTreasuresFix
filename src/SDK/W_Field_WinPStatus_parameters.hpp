#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Field_WinPStatus

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DarwinGame_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_Field_WinPStatus.W_Field_WinPStatus_C.SetTextColor
// 0x0040 (0x0040 - 0x0000)
struct W_Field_WinPStatus_C_SetTextColor final
{
public:
	class UTextBlock*                             Text;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0018(0x0028)()
};
static_assert(alignof(W_Field_WinPStatus_C_SetTextColor) == 0x000008, "Wrong alignment on W_Field_WinPStatus_C_SetTextColor");
static_assert(sizeof(W_Field_WinPStatus_C_SetTextColor) == 0x000040, "Wrong size on W_Field_WinPStatus_C_SetTextColor");
static_assert(offsetof(W_Field_WinPStatus_C_SetTextColor, Text) == 0x000000, "Member 'W_Field_WinPStatus_C_SetTextColor::Text' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_SetTextColor, Color) == 0x000008, "Member 'W_Field_WinPStatus_C_SetTextColor::Color' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_SetTextColor, K2Node_MakeStruct_SlateColor) == 0x000018, "Member 'W_Field_WinPStatus_C_SetTextColor::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function W_Field_WinPStatus.W_Field_WinPStatus_C.SetWindowColor
// 0x0020 (0x0020 - 0x0000)
struct W_Field_WinPStatus_C_SetWindowColor final
{
public:
	class FName                                   FIRST_HP_FEW;                                      // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Field_WinPStatus_C_SetWindowColor) == 0x000008, "Wrong alignment on W_Field_WinPStatus_C_SetWindowColor");
static_assert(sizeof(W_Field_WinPStatus_C_SetWindowColor) == 0x000020, "Wrong size on W_Field_WinPStatus_C_SetWindowColor");
static_assert(offsetof(W_Field_WinPStatus_C_SetWindowColor, FIRST_HP_FEW) == 0x000000, "Member 'W_Field_WinPStatus_C_SetWindowColor::FIRST_HP_FEW' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_SetWindowColor, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_Field_WinPStatus_C_SetWindowColor::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_SetWindowColor, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000010, "Member 'W_Field_WinPStatus_C_SetWindowColor::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_SetWindowColor, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000014, "Member 'W_Field_WinPStatus_C_SetWindowColor::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_SetWindowColor, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'W_Field_WinPStatus_C_SetWindowColor::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_SetWindowColor, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00001C, "Member 'W_Field_WinPStatus_C_SetWindowColor::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_Field_WinPStatus.W_Field_WinPStatus_C.DamageExec
// 0x0008 (0x0008 - 0x0000)
struct W_Field_WinPStatus_C_DamageExec final
{
public:
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Field_WinPStatus_C_DamageExec) == 0x000008, "Wrong alignment on W_Field_WinPStatus_C_DamageExec");
static_assert(sizeof(W_Field_WinPStatus_C_DamageExec) == 0x000008, "Wrong size on W_Field_WinPStatus_C_DamageExec");
static_assert(offsetof(W_Field_WinPStatus_C_DamageExec, CallFunc_PlayAnimation_ReturnValue) == 0x000000, "Member 'W_Field_WinPStatus_C_DamageExec::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function W_Field_WinPStatus.W_Field_WinPStatus_C.InitializeLevel
// 0x0018 (0x0018 - 0x0000)
struct W_Field_WinPStatus_C_InitializeLevel final
{
public:
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0000(0x0018)()
};
static_assert(alignof(W_Field_WinPStatus_C_InitializeLevel) == 0x000008, "Wrong alignment on W_Field_WinPStatus_C_InitializeLevel");
static_assert(sizeof(W_Field_WinPStatus_C_InitializeLevel) == 0x000018, "Wrong size on W_Field_WinPStatus_C_InitializeLevel");
static_assert(offsetof(W_Field_WinPStatus_C_InitializeLevel, CallFunc_Conv_IntToText_ReturnValue) == 0x000000, "Member 'W_Field_WinPStatus_C_InitializeLevel::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function W_Field_WinPStatus.W_Field_WinPStatus_C.InitializeHP
// 0x0008 (0x0008 - 0x0000)
struct W_Field_WinPStatus_C_InitializeHP final
{
public:
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Field_WinPStatus_C_InitializeHP) == 0x000004, "Wrong alignment on W_Field_WinPStatus_C_InitializeHP");
static_assert(sizeof(W_Field_WinPStatus_C_InitializeHP) == 0x000008, "Wrong size on W_Field_WinPStatus_C_InitializeHP");
static_assert(offsetof(W_Field_WinPStatus_C_InitializeHP, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000000, "Member 'W_Field_WinPStatus_C_InitializeHP::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_InitializeHP, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000004, "Member 'W_Field_WinPStatus_C_InitializeHP::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");

// Function W_Field_WinPStatus.W_Field_WinPStatus_C.UpdateHP
// 0x0020 (0x0020 - 0x0000)
struct W_Field_WinPStatus_C_UpdateHP final
{
public:
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0000(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Field_WinPStatus_C_UpdateHP) == 0x000008, "Wrong alignment on W_Field_WinPStatus_C_UpdateHP");
static_assert(sizeof(W_Field_WinPStatus_C_UpdateHP) == 0x000020, "Wrong size on W_Field_WinPStatus_C_UpdateHP");
static_assert(offsetof(W_Field_WinPStatus_C_UpdateHP, CallFunc_Conv_IntToText_ReturnValue) == 0x000000, "Member 'W_Field_WinPStatus_C_UpdateHP::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_UpdateHP, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'W_Field_WinPStatus_C_UpdateHP::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_UpdateHP, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x00001C, "Member 'W_Field_WinPStatus_C_UpdateHP::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");

// Function W_Field_WinPStatus.W_Field_WinPStatus_C.Update
// 0x0004 (0x0004 - 0x0000)
struct W_Field_WinPStatus_C_Update final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Field_WinPStatus_C_Update) == 0x000004, "Wrong alignment on W_Field_WinPStatus_C_Update");
static_assert(sizeof(W_Field_WinPStatus_C_Update) == 0x000004, "Wrong size on W_Field_WinPStatus_C_Update");
static_assert(offsetof(W_Field_WinPStatus_C_Update, DeltaTime) == 0x000000, "Member 'W_Field_WinPStatus_C_Update::DeltaTime' has a wrong offset!");

// Function W_Field_WinPStatus.W_Field_WinPStatus_C.SetHP
// 0x0008 (0x0008 - 0x0000)
struct W_Field_WinPStatus_C_SetHP final
{
public:
	int32                                         InHP;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDamage;                                          // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsPlayAnim;                                        // 0x0005(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Field_WinPStatus_C_SetHP) == 0x000004, "Wrong alignment on W_Field_WinPStatus_C_SetHP");
static_assert(sizeof(W_Field_WinPStatus_C_SetHP) == 0x000008, "Wrong size on W_Field_WinPStatus_C_SetHP");
static_assert(offsetof(W_Field_WinPStatus_C_SetHP, InHP) == 0x000000, "Member 'W_Field_WinPStatus_C_SetHP::InHP' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_SetHP, IsDamage) == 0x000004, "Member 'W_Field_WinPStatus_C_SetHP::IsDamage' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_SetHP, IsPlayAnim) == 0x000005, "Member 'W_Field_WinPStatus_C_SetHP::IsPlayAnim' has a wrong offset!");

// Function W_Field_WinPStatus.W_Field_WinPStatus_C.SetMaxHP
// 0x0004 (0x0004 - 0x0000)
struct W_Field_WinPStatus_C_SetMaxHP final
{
public:
	int32                                         InMaxHP;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Field_WinPStatus_C_SetMaxHP) == 0x000004, "Wrong alignment on W_Field_WinPStatus_C_SetMaxHP");
static_assert(sizeof(W_Field_WinPStatus_C_SetMaxHP) == 0x000004, "Wrong size on W_Field_WinPStatus_C_SetMaxHP");
static_assert(offsetof(W_Field_WinPStatus_C_SetMaxHP, InMaxHP) == 0x000000, "Member 'W_Field_WinPStatus_C_SetMaxHP::InMaxHP' has a wrong offset!");

// Function W_Field_WinPStatus.W_Field_WinPStatus_C.SetLevel
// 0x0004 (0x0004 - 0x0000)
struct W_Field_WinPStatus_C_SetLevel final
{
public:
	int32                                         NewLevel;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Field_WinPStatus_C_SetLevel) == 0x000004, "Wrong alignment on W_Field_WinPStatus_C_SetLevel");
static_assert(sizeof(W_Field_WinPStatus_C_SetLevel) == 0x000004, "Wrong size on W_Field_WinPStatus_C_SetLevel");
static_assert(offsetof(W_Field_WinPStatus_C_SetLevel, NewLevel) == 0x000000, "Member 'W_Field_WinPStatus_C_SetLevel::NewLevel' has a wrong offset!");

// Function W_Field_WinPStatus.W_Field_WinPStatus_C.ExecLvup
// 0x0008 (0x0008 - 0x0000)
struct W_Field_WinPStatus_C_ExecLvup final
{
public:
	int32                                         UpLevel;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ComboUP_0;                                         // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Field_WinPStatus_C_ExecLvup) == 0x000004, "Wrong alignment on W_Field_WinPStatus_C_ExecLvup");
static_assert(sizeof(W_Field_WinPStatus_C_ExecLvup) == 0x000008, "Wrong size on W_Field_WinPStatus_C_ExecLvup");
static_assert(offsetof(W_Field_WinPStatus_C_ExecLvup, UpLevel) == 0x000000, "Member 'W_Field_WinPStatus_C_ExecLvup::UpLevel' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecLvup, ComboUP_0) == 0x000004, "Member 'W_Field_WinPStatus_C_ExecLvup::ComboUP_0' has a wrong offset!");

// Function W_Field_WinPStatus.W_Field_WinPStatus_C.ExecuteUbergraph_W_Field_WinPStatus
// 0x0098 (0x0098 - 0x0000)
struct W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_InHP;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDamage;                             // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsPlayAnim;                           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_InMaxHP;                              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_NewLevel;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_UpLevel;                              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ComboUP;                              // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EOpenState                                    CallFunc_GetOpenState_ReturnValue;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EOpenState                                    CallFunc_GetOpenState_ReturnValue_1;               // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameDataPlayer*                        CallFunc_GetGameDataPlayer_GameDataPlayer;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_Status                             CallFunc_GetStatus_ReturnValue;                    // 0x0038(0x0018)(NoDestructor)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetID_ReturnValue;                        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0070(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0088(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus) == 0x000008, "Wrong alignment on W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus");
static_assert(sizeof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus) == 0x000098, "Wrong size on W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, EntryPoint) == 0x000000, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, K2Node_Event_InHP) == 0x000004, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::K2Node_Event_InHP' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, K2Node_Event_IsDamage) == 0x000008, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::K2Node_Event_IsDamage' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, K2Node_Event_IsPlayAnim) == 0x000009, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::K2Node_Event_IsPlayAnim' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, K2Node_Event_InMaxHP) == 0x00000C, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::K2Node_Event_InMaxHP' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, K2Node_Event_NewLevel) == 0x000014, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::K2Node_Event_NewLevel' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, K2Node_Event_UpLevel) == 0x000018, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::K2Node_Event_UpLevel' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, K2Node_Event_ComboUP) == 0x00001C, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::K2Node_Event_ComboUP' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, CallFunc_Subtract_IntInt_ReturnValue) == 0x000020, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, CallFunc_GetOpenState_ReturnValue) == 0x000024, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::CallFunc_GetOpenState_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000025, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, CallFunc_GetOpenState_ReturnValue_1) == 0x000026, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::CallFunc_GetOpenState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000027, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, CallFunc_GetGameDataPlayer_GameDataPlayer) == 0x000030, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::CallFunc_GetGameDataPlayer_GameDataPlayer' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, CallFunc_GetStatus_ReturnValue) == 0x000038, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::CallFunc_GetStatus_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, CallFunc_FTrunc_ReturnValue) == 0x000050, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, CallFunc_FTrunc_ReturnValue_1) == 0x000054, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, CallFunc_GetID_ReturnValue) == 0x000058, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::CallFunc_GetID_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, CallFunc_MakeLiteralName_ReturnValue) == 0x000060, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, K2Node_Event_DeltaTime) == 0x000068, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, CallFunc_Conv_IntToText_ReturnValue) == 0x000070, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus, K2Node_CreateDelegate_OutputDelegate) == 0x000088, "Member 'W_Field_WinPStatus_C_ExecuteUbergraph_W_Field_WinPStatus::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

}

