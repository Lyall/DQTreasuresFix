#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_QM_Panel_03

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_QM_Panel_03.W_QM_Panel_03_C
// 0x0050 (0x0540 - 0x04F0)
class UW_QM_Panel_03_C final : public UUIQM_Panel_03
{
public:
	class UWidgetAnimation*                       NewAnimation;                                      // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Word_On;                                           // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Cat_Notes_1_On;                                    // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Difficult;                                         // 0x0508(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Exp;                                               // 0x0510(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Gold;                                              // 0x0518(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Nomal;                                             // 0x0520(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BasePanel_1;                                       // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Difficulty;                                        // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Line_01;                                           // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_QM_Panel_03_C">();
	}
	static class UW_QM_Panel_03_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_QM_Panel_03_C>();
	}
};
static_assert(alignof(UW_QM_Panel_03_C) == 0x000008, "Wrong alignment on UW_QM_Panel_03_C");
static_assert(sizeof(UW_QM_Panel_03_C) == 0x000540, "Wrong size on UW_QM_Panel_03_C");
static_assert(offsetof(UW_QM_Panel_03_C, NewAnimation) == 0x0004F0, "Member 'UW_QM_Panel_03_C::NewAnimation' has a wrong offset!");
static_assert(offsetof(UW_QM_Panel_03_C, Word_On) == 0x0004F8, "Member 'UW_QM_Panel_03_C::Word_On' has a wrong offset!");
static_assert(offsetof(UW_QM_Panel_03_C, Cat_Notes_1_On) == 0x000500, "Member 'UW_QM_Panel_03_C::Cat_Notes_1_On' has a wrong offset!");
static_assert(offsetof(UW_QM_Panel_03_C, Difficult) == 0x000508, "Member 'UW_QM_Panel_03_C::Difficult' has a wrong offset!");
static_assert(offsetof(UW_QM_Panel_03_C, Exp) == 0x000510, "Member 'UW_QM_Panel_03_C::Exp' has a wrong offset!");
static_assert(offsetof(UW_QM_Panel_03_C, Gold) == 0x000518, "Member 'UW_QM_Panel_03_C::Gold' has a wrong offset!");
static_assert(offsetof(UW_QM_Panel_03_C, Nomal) == 0x000520, "Member 'UW_QM_Panel_03_C::Nomal' has a wrong offset!");
static_assert(offsetof(UW_QM_Panel_03_C, BasePanel_1) == 0x000528, "Member 'UW_QM_Panel_03_C::BasePanel_1' has a wrong offset!");
static_assert(offsetof(UW_QM_Panel_03_C, Difficulty) == 0x000530, "Member 'UW_QM_Panel_03_C::Difficulty' has a wrong offset!");
static_assert(offsetof(UW_QM_Panel_03_C, Line_01) == 0x000538, "Member 'UW_QM_Panel_03_C::Line_01' has a wrong offset!");

}

