#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Air_FixedJump

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_Air_FixedJump.BP_Air_FixedJump_C.ExecuteUbergraph_BP_Air_FixedJump
// 0x0004 (0x0004 - 0x0000)
struct BP_Air_FixedJump_C_ExecuteUbergraph_BP_Air_FixedJump final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Air_FixedJump_C_ExecuteUbergraph_BP_Air_FixedJump) == 0x000004, "Wrong alignment on BP_Air_FixedJump_C_ExecuteUbergraph_BP_Air_FixedJump");
static_assert(sizeof(BP_Air_FixedJump_C_ExecuteUbergraph_BP_Air_FixedJump) == 0x000004, "Wrong size on BP_Air_FixedJump_C_ExecuteUbergraph_BP_Air_FixedJump");
static_assert(offsetof(BP_Air_FixedJump_C_ExecuteUbergraph_BP_Air_FixedJump, EntryPoint) == 0x000000, "Member 'BP_Air_FixedJump_C_ExecuteUbergraph_BP_Air_FixedJump::EntryPoint' has a wrong offset!");

// Function BP_Air_FixedJump.BP_Air_FixedJump_C.CalculateJumpVelocity
// 0x0060 (0x0060 - 0x0000)
struct BP_Air_FixedJump_C_CalculateJumpVelocity final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMonster*                               CallFunc_GetMonster_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorOnBlackboard_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance2D_ReturnValue;            // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BlueprintSuggestProjectileVelocity_TossVelocity; // 0x003C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BlueprintSuggestProjectileVelocity_ReturnValue; // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BlueprintSuggestProjectileVelocity_TossVelocity_1; // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BlueprintSuggestProjectileVelocity_ReturnValue_1; // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Air_FixedJump_C_CalculateJumpVelocity) == 0x000008, "Wrong alignment on BP_Air_FixedJump_C_CalculateJumpVelocity");
static_assert(sizeof(BP_Air_FixedJump_C_CalculateJumpVelocity) == 0x000060, "Wrong size on BP_Air_FixedJump_C_CalculateJumpVelocity");
static_assert(offsetof(BP_Air_FixedJump_C_CalculateJumpVelocity, ReturnValue) == 0x000000, "Member 'BP_Air_FixedJump_C_CalculateJumpVelocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Air_FixedJump_C_CalculateJumpVelocity, CallFunc_GetMonster_ReturnValue) == 0x000010, "Member 'BP_Air_FixedJump_C_CalculateJumpVelocity::CallFunc_GetMonster_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Air_FixedJump_C_CalculateJumpVelocity, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_Air_FixedJump_C_CalculateJumpVelocity::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Air_FixedJump_C_CalculateJumpVelocity, CallFunc_GetVectorOnBlackboard_ReturnValue) == 0x000024, "Member 'BP_Air_FixedJump_C_CalculateJumpVelocity::CallFunc_GetVectorOnBlackboard_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Air_FixedJump_C_CalculateJumpVelocity, CallFunc_Vector_Distance2D_ReturnValue) == 0x000030, "Member 'BP_Air_FixedJump_C_CalculateJumpVelocity::CallFunc_Vector_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Air_FixedJump_C_CalculateJumpVelocity, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_Air_FixedJump_C_CalculateJumpVelocity::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Air_FixedJump_C_CalculateJumpVelocity, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000038, "Member 'BP_Air_FixedJump_C_CalculateJumpVelocity::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Air_FixedJump_C_CalculateJumpVelocity, CallFunc_BlueprintSuggestProjectileVelocity_TossVelocity) == 0x00003C, "Member 'BP_Air_FixedJump_C_CalculateJumpVelocity::CallFunc_BlueprintSuggestProjectileVelocity_TossVelocity' has a wrong offset!");
static_assert(offsetof(BP_Air_FixedJump_C_CalculateJumpVelocity, CallFunc_BlueprintSuggestProjectileVelocity_ReturnValue) == 0x000048, "Member 'BP_Air_FixedJump_C_CalculateJumpVelocity::CallFunc_BlueprintSuggestProjectileVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Air_FixedJump_C_CalculateJumpVelocity, CallFunc_BlueprintSuggestProjectileVelocity_TossVelocity_1) == 0x00004C, "Member 'BP_Air_FixedJump_C_CalculateJumpVelocity::CallFunc_BlueprintSuggestProjectileVelocity_TossVelocity_1' has a wrong offset!");
static_assert(offsetof(BP_Air_FixedJump_C_CalculateJumpVelocity, CallFunc_BlueprintSuggestProjectileVelocity_ReturnValue_1) == 0x000058, "Member 'BP_Air_FixedJump_C_CalculateJumpVelocity::CallFunc_BlueprintSuggestProjectileVelocity_ReturnValue_1' has a wrong offset!");

}

