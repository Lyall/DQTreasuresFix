#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PlayerGauge

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "W_GaugeBase_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PlayerGauge.W_PlayerGauge_C
// 0x0020 (0x0510 - 0x04F0)
class UW_PlayerGauge_C final : public UW_GaugeBase_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Gauge_Animation;                                   // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Pc_HPMPGauge;                                      // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Pc_HPMPGauge_Damage;                               // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void SetGauge(float Param, float MaxParam);
	void ExecuteUbergraph_W_PlayerGauge(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PlayerGauge_C">();
	}
	static class UW_PlayerGauge_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PlayerGauge_C>();
	}
};
static_assert(alignof(UW_PlayerGauge_C) == 0x000008, "Wrong alignment on UW_PlayerGauge_C");
static_assert(sizeof(UW_PlayerGauge_C) == 0x000510, "Wrong size on UW_PlayerGauge_C");
static_assert(offsetof(UW_PlayerGauge_C, UberGraphFrame) == 0x0004F0, "Member 'UW_PlayerGauge_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PlayerGauge_C, Gauge_Animation) == 0x0004F8, "Member 'UW_PlayerGauge_C::Gauge_Animation' has a wrong offset!");
static_assert(offsetof(UW_PlayerGauge_C, Pc_HPMPGauge) == 0x000500, "Member 'UW_PlayerGauge_C::Pc_HPMPGauge' has a wrong offset!");
static_assert(offsetof(UW_PlayerGauge_C, Pc_HPMPGauge_Damage) == 0x000508, "Member 'UW_PlayerGauge_C::Pc_HPMPGauge_Damage' has a wrong offset!");

}

