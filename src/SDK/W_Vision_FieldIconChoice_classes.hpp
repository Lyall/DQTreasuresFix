#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Vision_FieldIconChoice

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Vision_FieldIconChoice.W_Vision_FieldIconChoice_C
// 0x0018 (0x04B0 - 0x0498)
class UW_Vision_FieldIconChoice_C final : public UUIVision_FieldIconChoice
{
public:
	class UWidgetAnimation*                       off;                                               // 0x0498(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       on;                                                // 0x04A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_Vision_FieldIcon_C*                  W_Vision_FieldIcon;                                // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Vision_FieldIconChoice_C">();
	}
	static class UW_Vision_FieldIconChoice_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Vision_FieldIconChoice_C>();
	}
};
static_assert(alignof(UW_Vision_FieldIconChoice_C) == 0x000008, "Wrong alignment on UW_Vision_FieldIconChoice_C");
static_assert(sizeof(UW_Vision_FieldIconChoice_C) == 0x0004B0, "Wrong size on UW_Vision_FieldIconChoice_C");
static_assert(offsetof(UW_Vision_FieldIconChoice_C, off) == 0x000498, "Member 'UW_Vision_FieldIconChoice_C::off' has a wrong offset!");
static_assert(offsetof(UW_Vision_FieldIconChoice_C, on) == 0x0004A0, "Member 'UW_Vision_FieldIconChoice_C::on' has a wrong offset!");
static_assert(offsetof(UW_Vision_FieldIconChoice_C, W_Vision_FieldIcon) == 0x0004A8, "Member 'UW_Vision_FieldIconChoice_C::W_Vision_FieldIcon' has a wrong offset!");

}

