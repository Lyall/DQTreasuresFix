#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AS_ZoomUp

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AS_ZoomUp.AS_ZoomUp_C
// 0x0010 (0x0050 - 0x0040)
class UAS_ZoomUp_C final : public UAnimNotifyState_ZoomUp
{
public:
	float                                         Length;                                            // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InterpSpeed;                                       // 0x0044(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Angle;                                             // 0x0048(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Yaw;                                               // 0x004C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool Received_NotifyTick(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float FrameDeltaTime) const;
	class FString GetNotifyName() const;
	bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation) const;
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration) const;
	float GetDestAngle() const;
	float GetDestLength() const;
	float GetDestYaw() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AS_ZoomUp_C">();
	}
	static class UAS_ZoomUp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAS_ZoomUp_C>();
	}
};
static_assert(alignof(UAS_ZoomUp_C) == 0x000008, "Wrong alignment on UAS_ZoomUp_C");
static_assert(sizeof(UAS_ZoomUp_C) == 0x000050, "Wrong size on UAS_ZoomUp_C");
static_assert(offsetof(UAS_ZoomUp_C, Length) == 0x000040, "Member 'UAS_ZoomUp_C::Length' has a wrong offset!");
static_assert(offsetof(UAS_ZoomUp_C, InterpSpeed) == 0x000044, "Member 'UAS_ZoomUp_C::InterpSpeed' has a wrong offset!");
static_assert(offsetof(UAS_ZoomUp_C, Angle) == 0x000048, "Member 'UAS_ZoomUp_C::Angle' has a wrong offset!");
static_assert(offsetof(UAS_ZoomUp_C, Yaw) == 0x00004C, "Member 'UAS_ZoomUp_C::Yaw' has a wrong offset!");

}

