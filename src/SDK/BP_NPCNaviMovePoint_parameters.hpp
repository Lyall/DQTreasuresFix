#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPCNaviMovePoint

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DarwinGame_structs.hpp"


namespace SDK::Params
{

// Function BP_NPCNaviMovePoint.BP_NPCNaviMovePoint_C.UserConstructionScript
// 0x0140 (0x0140 - 0x0000)
struct BP_NPCNaviMovePoint_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ConvertToCSVString_CSVRowString;          // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ConvertToCSVString_CSVRowString_1;        // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0080(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_NPCEventAiMovePoints               CallFunc_GetDataTableRowFromName_OutRow;           // 0x00A8(0x0058)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ConvertToCSVString_CSVRowString_2;        // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CreateDataTableCSVHeader_ReturnValue;     // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCNaviMovePoint_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_NPCNaviMovePoint_C_UserConstructionScript");
static_assert(sizeof(BP_NPCNaviMovePoint_C_UserConstructionScript) == 0x000140, "Wrong size on BP_NPCNaviMovePoint_C_UserConstructionScript");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_IsEditor_ReturnValue) == 0x000004, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000014, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_NotEqual_NameName_ReturnValue) == 0x000024, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00002C, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_ConvertToCSVString_CSVRowString) == 0x000040, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_ConvertToCSVString_CSVRowString' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000060, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_NotEqual_StrStr_ReturnValue) == 0x00006C, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_ConvertToCSVString_CSVRowString_1) == 0x000070, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_ConvertToCSVString_CSVRowString_1' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000080, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000090, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000A8, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000100, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000101, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000104, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_ConvertToCSVString_CSVRowString_2) == 0x000108, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_ConvertToCSVString_CSVRowString_2' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000118, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000120, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_UserConstructionScript, CallFunc_CreateDataTableCSVHeader_ReturnValue) == 0x000130, "Member 'BP_NPCNaviMovePoint_C_UserConstructionScript::CallFunc_CreateDataTableCSVHeader_ReturnValue' has a wrong offset!");

// Function BP_NPCNaviMovePoint.BP_NPCNaviMovePoint_C.ConvertToCSVString
// 0x02D0 (0x02D0 - 0x0000)
struct BP_NPCNaviMovePoint_C_ConvertToCSVString final
{
public:
	class FName                                   Key;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0008(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotator;                                           // 0x0014(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Range_0;                                           // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OutRange_0;                                        // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StartFlagName_0;                                   // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed_0;                                           // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Acceleration_0;                                    // 0x0034(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPCAiMovedState                              MovedState_0;                                      // 0x0038(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   EndFlagName_0;                                     // 0x003C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   TalkEventID;                                       // 0x0044(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         EmoteID_0;                                         // 0x004C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FukidashiID_0;                                     // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CSVRowString;                                      // 0x0058(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_2;          // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_3;          // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue;           // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_1;         // 0x0100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_4;          // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_2;         // 0x0120(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_FloatToString_ReturnValue_3;         // 0x0130(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ConvertRotaterToCSVString_ReturnValue;    // 0x0140(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ConvertVectorToCSVString_ReturnValue;     // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x01B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_12;             // 0x0200(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_13;             // 0x0210(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_14;             // 0x0220(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_15;             // 0x0230(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_16;             // 0x0240(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_17;             // 0x0250(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_18;             // 0x0260(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_19;             // 0x0270(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_20;             // 0x0280(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_21;             // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_22;             // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_23;             // 0x02B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_24;             // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPCNaviMovePoint_C_ConvertToCSVString) == 0x000008, "Wrong alignment on BP_NPCNaviMovePoint_C_ConvertToCSVString");
static_assert(sizeof(BP_NPCNaviMovePoint_C_ConvertToCSVString) == 0x0002D0, "Wrong size on BP_NPCNaviMovePoint_C_ConvertToCSVString");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, Key) == 0x000000, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::Key' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, Location) == 0x000008, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::Location' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, Rotator) == 0x000014, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::Rotator' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, Range_0) == 0x000020, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::Range_0' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, OutRange_0) == 0x000024, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::OutRange_0' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, StartFlagName_0) == 0x000028, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::StartFlagName_0' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, Speed_0) == 0x000030, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::Speed_0' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, Acceleration_0) == 0x000034, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::Acceleration_0' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, MovedState_0) == 0x000038, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::MovedState_0' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, EndFlagName_0) == 0x00003C, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::EndFlagName_0' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, TalkEventID) == 0x000044, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::TalkEventID' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, EmoteID_0) == 0x00004C, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::EmoteID_0' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, FukidashiID_0) == 0x000050, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::FukidashiID_0' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CSVRowString) == 0x000058, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CSVRowString' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Conv_NameToString_ReturnValue) == 0x000068, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000078, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue) == 0x000088, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Conv_IntToString_ReturnValue) == 0x000098, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000A8, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Conv_NameToString_ReturnValue_2) == 0x0000B8, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Conv_NameToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Conv_NameToString_ReturnValue_3) == 0x0000C8, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Conv_NameToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0000D8, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Conv_FloatToString_ReturnValue) == 0x0000E0, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Conv_FloatToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Conv_IntToString_ReturnValue_1) == 0x0000F0, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Conv_FloatToString_ReturnValue_1) == 0x000100, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Conv_FloatToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Conv_NameToString_ReturnValue_4) == 0x000110, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Conv_NameToString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Conv_FloatToString_ReturnValue_2) == 0x000120, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Conv_FloatToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Conv_FloatToString_ReturnValue_3) == 0x000130, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Conv_FloatToString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_ConvertRotaterToCSVString_ReturnValue) == 0x000140, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_ConvertRotaterToCSVString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_ConvertVectorToCSVString_ReturnValue) == 0x000150, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_ConvertVectorToCSVString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000160, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000170, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000180, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_5) == 0x000190, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_6) == 0x0001A0, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_7) == 0x0001B0, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_8) == 0x0001C0, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_9) == 0x0001D0, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_10) == 0x0001E0, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_11) == 0x0001F0, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_12) == 0x000200, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_13) == 0x000210, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_14) == 0x000220, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_15) == 0x000230, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_16) == 0x000240, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_17) == 0x000250, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_18) == 0x000260, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_19) == 0x000270, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_20) == 0x000280, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_21) == 0x000290, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_22) == 0x0002A0, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_23) == 0x0002B0, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(BP_NPCNaviMovePoint_C_ConvertToCSVString, CallFunc_Concat_StrStr_ReturnValue_24) == 0x0002C0, "Member 'BP_NPCNaviMovePoint_C_ConvertToCSVString::CallFunc_Concat_StrStr_ReturnValue_24' has a wrong offset!");

}

