#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Air_Fall_ForPlayer

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"


namespace SDK::Params
{

// Function BP_Air_Fall_ForPlayer.BP_Air_Fall_ForPlayer_C.GetSpActOneActionState
// 0x0080 (0x0080 - 0x0000)
struct BP_Air_Fall_ForPlayer_C_GetSpActOneActionState final
{
public:
	class UAction_Attack_C*                       ret;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           Temp_struct_Variable;                              // 0x0008(0x0008)(ConstParm, NoDestructor, HasGetValueTypeHash)
	TMap<struct FGameplayTag, class UActionStateBase*> CallFunc_GetActionStateList_ReturnValue;           // 0x0010(0x0050)(ContainsInstancedReference)
	class UActionStateBase*                       CallFunc_Map_Find_Value;                           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAction_Attack_C*                       K2Node_DynamicCast_AsAction_Attack;                // 0x0070(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Air_Fall_ForPlayer_C_GetSpActOneActionState) == 0x000008, "Wrong alignment on BP_Air_Fall_ForPlayer_C_GetSpActOneActionState");
static_assert(sizeof(BP_Air_Fall_ForPlayer_C_GetSpActOneActionState) == 0x000080, "Wrong size on BP_Air_Fall_ForPlayer_C_GetSpActOneActionState");
static_assert(offsetof(BP_Air_Fall_ForPlayer_C_GetSpActOneActionState, ret) == 0x000000, "Member 'BP_Air_Fall_ForPlayer_C_GetSpActOneActionState::ret' has a wrong offset!");
static_assert(offsetof(BP_Air_Fall_ForPlayer_C_GetSpActOneActionState, Temp_struct_Variable) == 0x000008, "Member 'BP_Air_Fall_ForPlayer_C_GetSpActOneActionState::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_Air_Fall_ForPlayer_C_GetSpActOneActionState, CallFunc_GetActionStateList_ReturnValue) == 0x000010, "Member 'BP_Air_Fall_ForPlayer_C_GetSpActOneActionState::CallFunc_GetActionStateList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Air_Fall_ForPlayer_C_GetSpActOneActionState, CallFunc_Map_Find_Value) == 0x000060, "Member 'BP_Air_Fall_ForPlayer_C_GetSpActOneActionState::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_Air_Fall_ForPlayer_C_GetSpActOneActionState, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'BP_Air_Fall_ForPlayer_C_GetSpActOneActionState::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Air_Fall_ForPlayer_C_GetSpActOneActionState, K2Node_DynamicCast_AsAction_Attack) == 0x000070, "Member 'BP_Air_Fall_ForPlayer_C_GetSpActOneActionState::K2Node_DynamicCast_AsAction_Attack' has a wrong offset!");
static_assert(offsetof(BP_Air_Fall_ForPlayer_C_GetSpActOneActionState, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'BP_Air_Fall_ForPlayer_C_GetSpActOneActionState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_Air_Fall_ForPlayer.BP_Air_Fall_ForPlayer_C.Update
// 0x0004 (0x0004 - 0x0000)
struct BP_Air_Fall_ForPlayer_C_Update final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Air_Fall_ForPlayer_C_Update) == 0x000004, "Wrong alignment on BP_Air_Fall_ForPlayer_C_Update");
static_assert(sizeof(BP_Air_Fall_ForPlayer_C_Update) == 0x000004, "Wrong size on BP_Air_Fall_ForPlayer_C_Update");
static_assert(offsetof(BP_Air_Fall_ForPlayer_C_Update, DeltaTime) == 0x000000, "Member 'BP_Air_Fall_ForPlayer_C_Update::DeltaTime' has a wrong offset!");

// Function BP_Air_Fall_ForPlayer.BP_Air_Fall_ForPlayer_C.ExecuteUbergraph_BP_Air_Fall_ForPlayer
// 0x0028 (0x0028 - 0x0000)
struct BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAction_Attack_C*                       CallFunc_GetSpActOneActionState_ret;               // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTime;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAction_Attack_C*                       CallFunc_GetSpActOneActionState_ret_1;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer) == 0x000008, "Wrong alignment on BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer");
static_assert(sizeof(BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer) == 0x000028, "Wrong size on BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer");
static_assert(offsetof(BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer, EntryPoint) == 0x000000, "Member 'BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer, CallFunc_GetSpActOneActionState_ret) == 0x000008, "Member 'BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer::CallFunc_GetSpActOneActionState_ret' has a wrong offset!");
static_assert(offsetof(BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer, K2Node_Event_DeltaTime) == 0x000014, "Member 'BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer, CallFunc_GetSpActOneActionState_ret_1) == 0x000018, "Member 'BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer::CallFunc_GetSpActOneActionState_ret_1' has a wrong offset!");
static_assert(offsetof(BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer, CallFunc_IsValid_ReturnValue_1) == 0x000020, "Member 'BP_Air_Fall_ForPlayer_C_ExecuteUbergraph_BP_Air_Fall_ForPlayer::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

}

