#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_AppraisePerformance_Root

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_AppraisePerformance_Root.W_AppraisePerformance_Root_C
// 0x0018 (0x0528 - 0x0510)
class UW_AppraisePerformance_Root_C final : public UUIAppraisePerformance_Root
{
public:
	class UWidgetAnimation*                       Out;                                               // 0x0510(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0518(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BK;                                                // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_AppraisePerformance_Root_C">();
	}
	static class UW_AppraisePerformance_Root_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_AppraisePerformance_Root_C>();
	}
};
static_assert(alignof(UW_AppraisePerformance_Root_C) == 0x000008, "Wrong alignment on UW_AppraisePerformance_Root_C");
static_assert(sizeof(UW_AppraisePerformance_Root_C) == 0x000528, "Wrong size on UW_AppraisePerformance_Root_C");
static_assert(offsetof(UW_AppraisePerformance_Root_C, Out) == 0x000510, "Member 'UW_AppraisePerformance_Root_C::Out' has a wrong offset!");
static_assert(offsetof(UW_AppraisePerformance_Root_C, In) == 0x000518, "Member 'UW_AppraisePerformance_Root_C::In' has a wrong offset!");
static_assert(offsetof(UW_AppraisePerformance_Root_C, BK) == 0x000520, "Member 'UW_AppraisePerformance_Root_C::BK' has a wrong offset!");

}

