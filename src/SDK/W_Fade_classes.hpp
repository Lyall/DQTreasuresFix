#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Fade

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "DarwinGame_structs.hpp"
#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Fade.W_Fade_C
// 0x0060 (0x0528 - 0x04C8)
class UW_Fade_C final : public UUIFade
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04C8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 Board;                                             // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x04D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AlphaStep;                                         // 0x04E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFading;                                          // 0x04EC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TMulticastInlineDelegate<void()>              OnFinishFadeOut;                                   // 0x04F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMulticastInlineDelegate<void()>              OnFinishFadeIn;                                    // 0x0500(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<class FName>                           RowNames;                                          // 0x0510(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	EFadeZOrderType                               RequestZOrderType;                                 // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFadeZOrderType                               CurrentZOrderType;                                 // 0x0521(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void FadeOutScreenKeepAlpha(float Time, const struct FLinearColor& Color_0, EFadeZOrderType ZorderType);
	void UpdateViewPort();
	void UpdateFade();
	void open();
	void ReAddViewPort(EFadeZOrderType ZorderType);
	void FadeInScreen(float Time);
	void FadeOutScreen(float Time, const struct FLinearColor& Color_0, EFadeZOrderType ZorderType);
	void Update(float DeltaTime);
	void ExecuteUbergraph_W_Fade(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Fade_C">();
	}
	static class UW_Fade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Fade_C>();
	}
};
static_assert(alignof(UW_Fade_C) == 0x000008, "Wrong alignment on UW_Fade_C");
static_assert(sizeof(UW_Fade_C) == 0x000528, "Wrong size on UW_Fade_C");
static_assert(offsetof(UW_Fade_C, UberGraphFrame) == 0x0004C8, "Member 'UW_Fade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Fade_C, Board) == 0x0004D0, "Member 'UW_Fade_C::Board' has a wrong offset!");
static_assert(offsetof(UW_Fade_C, Color) == 0x0004D8, "Member 'UW_Fade_C::Color' has a wrong offset!");
static_assert(offsetof(UW_Fade_C, AlphaStep) == 0x0004E8, "Member 'UW_Fade_C::AlphaStep' has a wrong offset!");
static_assert(offsetof(UW_Fade_C, IsFading) == 0x0004EC, "Member 'UW_Fade_C::IsFading' has a wrong offset!");
static_assert(offsetof(UW_Fade_C, OnFinishFadeOut) == 0x0004F0, "Member 'UW_Fade_C::OnFinishFadeOut' has a wrong offset!");
static_assert(offsetof(UW_Fade_C, OnFinishFadeIn) == 0x000500, "Member 'UW_Fade_C::OnFinishFadeIn' has a wrong offset!");
static_assert(offsetof(UW_Fade_C, RowNames) == 0x000510, "Member 'UW_Fade_C::RowNames' has a wrong offset!");
static_assert(offsetof(UW_Fade_C, RequestZOrderType) == 0x000520, "Member 'UW_Fade_C::RequestZOrderType' has a wrong offset!");
static_assert(offsetof(UW_Fade_C, CurrentZOrderType) == 0x000521, "Member 'UW_Fade_C::CurrentZOrderType' has a wrong offset!");

}

