#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PirateShipSea

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PirateShipSea.BP_PirateShipSea_C
// 0x0030 (0x0268 - 0x0238)
class ABP_PirateShipSea_C final : public AStaticMeshActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SM_ShipSea_01a;                                    // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Degree;                                            // 0x0248(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InitLocation;                                      // 0x024C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHeight;                                         // 0x0258(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveTime;                                          // 0x025C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FrameRate;                                         // 0x0260(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OneFrameAddDegree;                                 // 0x0264(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PirateShipSea(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void CalcDegree(float AddDegree, float* Degree_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PirateShipSea_C">();
	}
	static class ABP_PirateShipSea_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PirateShipSea_C>();
	}
};
static_assert(alignof(ABP_PirateShipSea_C) == 0x000008, "Wrong alignment on ABP_PirateShipSea_C");
static_assert(sizeof(ABP_PirateShipSea_C) == 0x000268, "Wrong size on ABP_PirateShipSea_C");
static_assert(offsetof(ABP_PirateShipSea_C, UberGraphFrame) == 0x000238, "Member 'ABP_PirateShipSea_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PirateShipSea_C, SM_ShipSea_01a) == 0x000240, "Member 'ABP_PirateShipSea_C::SM_ShipSea_01a' has a wrong offset!");
static_assert(offsetof(ABP_PirateShipSea_C, Degree) == 0x000248, "Member 'ABP_PirateShipSea_C::Degree' has a wrong offset!");
static_assert(offsetof(ABP_PirateShipSea_C, InitLocation) == 0x00024C, "Member 'ABP_PirateShipSea_C::InitLocation' has a wrong offset!");
static_assert(offsetof(ABP_PirateShipSea_C, MaxHeight) == 0x000258, "Member 'ABP_PirateShipSea_C::MaxHeight' has a wrong offset!");
static_assert(offsetof(ABP_PirateShipSea_C, MoveTime) == 0x00025C, "Member 'ABP_PirateShipSea_C::MoveTime' has a wrong offset!");
static_assert(offsetof(ABP_PirateShipSea_C, FrameRate) == 0x000260, "Member 'ABP_PirateShipSea_C::FrameRate' has a wrong offset!");
static_assert(offsetof(ABP_PirateShipSea_C, OneFrameAddDegree) == 0x000264, "Member 'ABP_PirateShipSea_C::OneFrameAddDegree' has a wrong offset!");

}

