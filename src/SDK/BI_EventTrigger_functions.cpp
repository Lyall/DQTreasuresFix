#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_EventTrigger

#include "Basic.hpp"

#include "BI_EventTrigger_classes.hpp"
#include "BI_EventTrigger_parameters.hpp"


namespace SDK
{

// Function BI_EventTrigger.BI_EventTrigger_C.EndOverlapEventTrigger
// (Public, BlueprintCallable, BlueprintEvent)

void IBI_EventTrigger_C::EndOverlapEventTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_EventTrigger_C", "EndOverlapEventTrigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BI_EventTrigger.BI_EventTrigger_C.CallPlayEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EEventType                              EventType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             QuestID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EQuestState                             QuestState                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_EventTalktBranchData         TextBranchData                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<struct FST_TextGoto>             TextGotoData                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class AActor*                           Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_EventTrigger_C::CallPlayEvent(const class FString& EventID, EEventType EventType, class FName QuestID, EQuestState QuestState, const struct FST_EventTalktBranchData& TextBranchData, const TArray<struct FST_TextGoto>& TextGotoData, class AActor* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_EventTrigger_C", "CallPlayEvent");

	Params::BI_EventTrigger_C_CallPlayEvent Parms{};

	Parms.EventID = std::move(EventID);
	Parms.EventType = EventType;
	Parms.QuestID = QuestID;
	Parms.QuestState = QuestState;
	Parms.TextBranchData = std::move(TextBranchData);
	Parms.TextGotoData = std::move(TextGotoData);
	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BI_EventTrigger.BI_EventTrigger_C.EndPlayEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEventCancel                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_EventTrigger_C::EndPlayEvent(bool IsEventCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_EventTrigger_C", "EndPlayEvent");

	Params::BI_EventTrigger_C_EndPlayEvent Parms{};

	Parms.IsEventCancel = IsEventCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BI_EventTrigger.BI_EventTrigger_C.SendEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DebugMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void IBI_EventTrigger_C::SendEvent(class FName EventID, class UActorComponent* Sender, bool DebugMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_EventTrigger_C", "SendEvent");

	Params::BI_EventTrigger_C_SendEvent Parms{};

	Parms.EventID = EventID;
	Parms.Sender = Sender;
	Parms.DebugMode = DebugMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BI_EventTrigger.BI_EventTrigger_C.SetEventSendNpc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_NPC_C*                        SendActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_EventTrigger_C::SetEventSendNpc(class ABP_NPC_C* SendActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_EventTrigger_C", "SetEventSendNpc");

	Params::BI_EventTrigger_C_SetEventSendNpc Parms{};

	Parms.SendActor = SendActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BI_EventTrigger.BI_EventTrigger_C.SendLiftEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_EventSender_C*                EventSender                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LiftId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             StarScarId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBI_EventTrigger_C::SendLiftEvent(class UBP_EventSender_C* EventSender, int32 LiftId, class FName StarScarId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BI_EventTrigger_C", "SendLiftEvent");

	Params::BI_EventTrigger_C_SendLiftEvent Parms{};

	Parms.EventSender = EventSender;
	Parms.LiftId = LiftId;
	Parms.StarScarId = StarScarId;

	UObject::ProcessEvent(Func, &Parms);
}

}

