#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Field_WinQuest

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Field_WinQuest.W_Field_WinQuest_C
// 0x00E0 (0x0670 - 0x0590)
class UW_Field_WinQuest_C final : public UUIField_WinQuest
{
public:
	class UWidgetAnimation*                       Another_On;                                        // 0x0590(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Current_On;                                        // 0x0598(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Clear_On;                                          // 0x05A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Another_Out;                                       // 0x05A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Another_In;                                        // 0x05B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Line_03;                                           // 0x05B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Line_02;                                           // 0x05C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Line_01;                                           // 0x05C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Counter_Off;                                       // 0x05D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Counter_On;                                        // 0x05D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Type_Clear;                                        // 0x05E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Type_Check;                                        // 0x05E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Type_Text;                                         // 0x05F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Goto_Off;                                          // 0x05F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Goto_On;                                           // 0x0600(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Base_out;                                          // 0x0608(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Base_in;                                           // 0x0610(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Quest_Base;                                        // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Quest_Base_01_1;                                   // 0x0620(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Quest_Base_01_2;                                   // 0x0628(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Quest_Base_02_1;                                   // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Quest_Base_02_2;                                   // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Quest_Data_C*                        W_Quest_Data_00;                                   // 0x0640(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Quest_Data_C*                        W_Quest_Data_01;                                   // 0x0648(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Quest_Data_C*                        W_Quest_Data_02;                                   // 0x0650(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Quest_Data_C*                        W_Quest_Data_03;                                   // 0x0658(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Quest_Data_C*                        W_Quest_Data_04;                                   // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SideScrollTextWidget_C*              W_StationNameScroll;                               // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Field_WinQuest_C">();
	}
	static class UW_Field_WinQuest_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Field_WinQuest_C>();
	}
};
static_assert(alignof(UW_Field_WinQuest_C) == 0x000010, "Wrong alignment on UW_Field_WinQuest_C");
static_assert(sizeof(UW_Field_WinQuest_C) == 0x000670, "Wrong size on UW_Field_WinQuest_C");
static_assert(offsetof(UW_Field_WinQuest_C, Another_On) == 0x000590, "Member 'UW_Field_WinQuest_C::Another_On' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Current_On) == 0x000598, "Member 'UW_Field_WinQuest_C::Current_On' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Clear_On) == 0x0005A0, "Member 'UW_Field_WinQuest_C::Clear_On' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Another_Out) == 0x0005A8, "Member 'UW_Field_WinQuest_C::Another_Out' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Another_In) == 0x0005B0, "Member 'UW_Field_WinQuest_C::Another_In' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Line_03) == 0x0005B8, "Member 'UW_Field_WinQuest_C::Line_03' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Line_02) == 0x0005C0, "Member 'UW_Field_WinQuest_C::Line_02' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Line_01) == 0x0005C8, "Member 'UW_Field_WinQuest_C::Line_01' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Counter_Off) == 0x0005D0, "Member 'UW_Field_WinQuest_C::Counter_Off' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Counter_On) == 0x0005D8, "Member 'UW_Field_WinQuest_C::Counter_On' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Type_Clear) == 0x0005E0, "Member 'UW_Field_WinQuest_C::Type_Clear' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Type_Check) == 0x0005E8, "Member 'UW_Field_WinQuest_C::Type_Check' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Type_Text) == 0x0005F0, "Member 'UW_Field_WinQuest_C::Type_Text' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Goto_Off) == 0x0005F8, "Member 'UW_Field_WinQuest_C::Goto_Off' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Goto_On) == 0x000600, "Member 'UW_Field_WinQuest_C::Goto_On' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Base_out) == 0x000608, "Member 'UW_Field_WinQuest_C::Base_out' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Base_in) == 0x000610, "Member 'UW_Field_WinQuest_C::Base_in' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Quest_Base) == 0x000618, "Member 'UW_Field_WinQuest_C::Quest_Base' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Quest_Base_01_1) == 0x000620, "Member 'UW_Field_WinQuest_C::Quest_Base_01_1' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Quest_Base_01_2) == 0x000628, "Member 'UW_Field_WinQuest_C::Quest_Base_01_2' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Quest_Base_02_1) == 0x000630, "Member 'UW_Field_WinQuest_C::Quest_Base_02_1' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, Quest_Base_02_2) == 0x000638, "Member 'UW_Field_WinQuest_C::Quest_Base_02_2' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, W_Quest_Data_00) == 0x000640, "Member 'UW_Field_WinQuest_C::W_Quest_Data_00' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, W_Quest_Data_01) == 0x000648, "Member 'UW_Field_WinQuest_C::W_Quest_Data_01' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, W_Quest_Data_02) == 0x000650, "Member 'UW_Field_WinQuest_C::W_Quest_Data_02' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, W_Quest_Data_03) == 0x000658, "Member 'UW_Field_WinQuest_C::W_Quest_Data_03' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, W_Quest_Data_04) == 0x000660, "Member 'UW_Field_WinQuest_C::W_Quest_Data_04' has a wrong offset!");
static_assert(offsetof(UW_Field_WinQuest_C, W_StationNameScroll) == 0x000668, "Member 'UW_Field_WinQuest_C::W_StationNameScroll' has a wrong offset!");

}

