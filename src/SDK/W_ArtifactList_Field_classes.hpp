#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ArtifactList_Field

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_ArtifactList_Field.W_ArtifactList_Field_C
// 0x0088 (0x0540 - 0x04B8)
class UW_ArtifactList_Field_C final : public UUIArtifactList_Field
{
public:
	class UWidgetAnimation*                       Out;                                               // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_10;                      // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_11;                      // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_12;                      // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_13;                      // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_14;                      // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_15;                      // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_01;                      // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_02;                      // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_03;                      // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_04;                      // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_05;                      // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_06;                      // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_07;                      // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_08;                      // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ArtifactList_ArtifactIcon_C*         TreasureList_TreasureIcon_09;                      // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_ArtifactList_Field_C">();
	}
	static class UW_ArtifactList_Field_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_ArtifactList_Field_C>();
	}
};
static_assert(alignof(UW_ArtifactList_Field_C) == 0x000008, "Wrong alignment on UW_ArtifactList_Field_C");
static_assert(sizeof(UW_ArtifactList_Field_C) == 0x000540, "Wrong size on UW_ArtifactList_Field_C");
static_assert(offsetof(UW_ArtifactList_Field_C, Out) == 0x0004B8, "Member 'UW_ArtifactList_Field_C::Out' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, In) == 0x0004C0, "Member 'UW_ArtifactList_Field_C::In' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_10) == 0x0004C8, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_10' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_11) == 0x0004D0, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_11' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_12) == 0x0004D8, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_12' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_13) == 0x0004E0, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_13' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_14) == 0x0004E8, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_14' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_15) == 0x0004F0, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_15' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_01) == 0x0004F8, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_01' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_02) == 0x000500, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_02' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_03) == 0x000508, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_03' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_04) == 0x000510, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_04' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_05) == 0x000518, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_05' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_06) == 0x000520, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_06' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_07) == 0x000528, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_07' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_08) == 0x000530, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_08' has a wrong offset!");
static_assert(offsetof(UW_ArtifactList_Field_C, TreasureList_TreasureIcon_09) == 0x000538, "Member 'UW_ArtifactList_Field_C::TreasureList_TreasureIcon_09' has a wrong offset!");

}

