#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PCChange

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PCChange.W_PCChange_C
// 0x0060 (0x0500 - 0x04A0)
class UW_PCChange_C final : public UUIPCChange
{
public:
	class UWidgetAnimation*                       change;                                            // 0x04A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 ClapEffect_01;                                     // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ClapEffectStar_A_01;                               // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ClapEffectStar_A_02;                               // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ClapEffectStar_A_03;                               // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ClapEffectStar_B_01;                               // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ClapEffectStar_B_02;                               // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ClapEffectStar_B_03;                               // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ClapEffectStar_B_04;                               // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Hand_01;                                           // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Hand_02;                                           // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Darkness_C*                          W_Darkness;                                        // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PCChange_C">();
	}
	static class UW_PCChange_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PCChange_C>();
	}
};
static_assert(alignof(UW_PCChange_C) == 0x000008, "Wrong alignment on UW_PCChange_C");
static_assert(sizeof(UW_PCChange_C) == 0x000500, "Wrong size on UW_PCChange_C");
static_assert(offsetof(UW_PCChange_C, change) == 0x0004A0, "Member 'UW_PCChange_C::change' has a wrong offset!");
static_assert(offsetof(UW_PCChange_C, ClapEffect_01) == 0x0004A8, "Member 'UW_PCChange_C::ClapEffect_01' has a wrong offset!");
static_assert(offsetof(UW_PCChange_C, ClapEffectStar_A_01) == 0x0004B0, "Member 'UW_PCChange_C::ClapEffectStar_A_01' has a wrong offset!");
static_assert(offsetof(UW_PCChange_C, ClapEffectStar_A_02) == 0x0004B8, "Member 'UW_PCChange_C::ClapEffectStar_A_02' has a wrong offset!");
static_assert(offsetof(UW_PCChange_C, ClapEffectStar_A_03) == 0x0004C0, "Member 'UW_PCChange_C::ClapEffectStar_A_03' has a wrong offset!");
static_assert(offsetof(UW_PCChange_C, ClapEffectStar_B_01) == 0x0004C8, "Member 'UW_PCChange_C::ClapEffectStar_B_01' has a wrong offset!");
static_assert(offsetof(UW_PCChange_C, ClapEffectStar_B_02) == 0x0004D0, "Member 'UW_PCChange_C::ClapEffectStar_B_02' has a wrong offset!");
static_assert(offsetof(UW_PCChange_C, ClapEffectStar_B_03) == 0x0004D8, "Member 'UW_PCChange_C::ClapEffectStar_B_03' has a wrong offset!");
static_assert(offsetof(UW_PCChange_C, ClapEffectStar_B_04) == 0x0004E0, "Member 'UW_PCChange_C::ClapEffectStar_B_04' has a wrong offset!");
static_assert(offsetof(UW_PCChange_C, Hand_01) == 0x0004E8, "Member 'UW_PCChange_C::Hand_01' has a wrong offset!");
static_assert(offsetof(UW_PCChange_C, Hand_02) == 0x0004F0, "Member 'UW_PCChange_C::Hand_02' has a wrong offset!");
static_assert(offsetof(UW_PCChange_C, W_Darkness) == 0x0004F8, "Member 'UW_PCChange_C::W_Darkness' has a wrong offset!");

}

