#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_SlingShot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"
#include "DarwinGame_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_SlingShot.ABP_SlingShot_C
// 0x0540 (0x07B0 - 0x0270)
class UABP_SlingShot_C final : public UAnimInstance
{
public:
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0270(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0278(0x0030)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x02A8(0x0020)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x02C8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x02F0(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x0318(0x0078)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0390(0x0030)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x03C0(0x0030)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x03F0(0x00B0)()
	struct FAnimNode_TwoWayBlend                  AnimGraphNode_TwoWayBlend;                         // 0x04A0(0x00C8)()
	struct FAnimNode_ModifyBoneFromAttachParent   AnimGraphNode_ModifyBoneFromAttachParent_1;        // 0x0568(0x0118)()
	struct FAnimNode_ModifyBoneFromAttachParent   AnimGraphNode_ModifyBoneFromAttachParent;          // 0x0680(0x0118)()
	bool                                          IsShot;                                            // 0x0798(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_799[0x3];                                      // 0x0799(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Alpha;                                             // 0x079C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Target;                                            // 0x07A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HandSocketName;                                    // 0x07A4(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void AnimNotify_ShotEnd();
	void SetVisible(bool Visibility);
	void Use();
	void Hold(bool End);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void Aim(const struct FVector& HandLocation);
	void ExecuteUbergraph_ABP_SlingShot(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_SlingShot_C">();
	}
	static class UABP_SlingShot_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_SlingShot_C>();
	}
};
static_assert(alignof(UABP_SlingShot_C) == 0x000010, "Wrong alignment on UABP_SlingShot_C");
static_assert(sizeof(UABP_SlingShot_C) == 0x0007B0, "Wrong size on UABP_SlingShot_C");
static_assert(offsetof(UABP_SlingShot_C, UberGraphFrame) == 0x000270, "Member 'UABP_SlingShot_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, AnimGraphNode_Root) == 0x000278, "Member 'UABP_SlingShot_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, AnimGraphNode_ComponentToLocalSpace) == 0x0002A8, "Member 'UABP_SlingShot_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, AnimGraphNode_TransitionResult_1) == 0x0002C8, "Member 'UABP_SlingShot_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, AnimGraphNode_TransitionResult) == 0x0002F0, "Member 'UABP_SlingShot_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, AnimGraphNode_SequencePlayer) == 0x000318, "Member 'UABP_SlingShot_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, AnimGraphNode_StateResult_1) == 0x000390, "Member 'UABP_SlingShot_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, AnimGraphNode_StateResult) == 0x0003C0, "Member 'UABP_SlingShot_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, AnimGraphNode_StateMachine) == 0x0003F0, "Member 'UABP_SlingShot_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, AnimGraphNode_TwoWayBlend) == 0x0004A0, "Member 'UABP_SlingShot_C::AnimGraphNode_TwoWayBlend' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, AnimGraphNode_ModifyBoneFromAttachParent_1) == 0x000568, "Member 'UABP_SlingShot_C::AnimGraphNode_ModifyBoneFromAttachParent_1' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, AnimGraphNode_ModifyBoneFromAttachParent) == 0x000680, "Member 'UABP_SlingShot_C::AnimGraphNode_ModifyBoneFromAttachParent' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, IsShot) == 0x000798, "Member 'UABP_SlingShot_C::IsShot' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, Alpha) == 0x00079C, "Member 'UABP_SlingShot_C::Alpha' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, Target) == 0x0007A0, "Member 'UABP_SlingShot_C::Target' has a wrong offset!");
static_assert(offsetof(UABP_SlingShot_C, HandSocketName) == 0x0007A4, "Member 'UABP_SlingShot_C::HandSocketName' has a wrong offset!");

}

