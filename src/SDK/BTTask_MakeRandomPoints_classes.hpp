#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_MakeRandomPoints

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "BTTask_Base_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTTask_MakeRandomPoints.BTTask_MakeRandomPoints_C
// 0x0028 (0x0138 - 0x0110)
class UBTTask_MakeRandomPoints_C final : public UBTTask_Base_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BTTask_MakeRandomPoints_C;          // 0x0110(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                TargetLocation;                                    // 0x0118(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RandomIndex;                                       // 0x0124(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMonsterBase*                           MonsterBase;                                       // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         RandomWalkRange;                                   // 0x0130(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CanSecoundCheck;                                   // 0x0134(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          CanThirdCheck;                                     // 0x0135(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BTTask_MakeRandomPoints(int32 EntryPoint);
	void QueryFinished(class UEnvQueryInstanceBlueprintWrapper* QueryInstance, EEnvQueryStatus QueryStatus);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);
	void BTTask_Run_EQSQuery(class UEnvQuery* QueryTemplate, class UObject* Querier, float GeneraterRadius, class UEnvQueryInstanceBlueprintWrapper** Return_Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTTask_MakeRandomPoints_C">();
	}
	static class UBTTask_MakeRandomPoints_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTTask_MakeRandomPoints_C>();
	}
};
static_assert(alignof(UBTTask_MakeRandomPoints_C) == 0x000008, "Wrong alignment on UBTTask_MakeRandomPoints_C");
static_assert(sizeof(UBTTask_MakeRandomPoints_C) == 0x000138, "Wrong size on UBTTask_MakeRandomPoints_C");
static_assert(offsetof(UBTTask_MakeRandomPoints_C, UberGraphFrame_BTTask_MakeRandomPoints_C) == 0x000110, "Member 'UBTTask_MakeRandomPoints_C::UberGraphFrame_BTTask_MakeRandomPoints_C' has a wrong offset!");
static_assert(offsetof(UBTTask_MakeRandomPoints_C, TargetLocation) == 0x000118, "Member 'UBTTask_MakeRandomPoints_C::TargetLocation' has a wrong offset!");
static_assert(offsetof(UBTTask_MakeRandomPoints_C, RandomIndex) == 0x000124, "Member 'UBTTask_MakeRandomPoints_C::RandomIndex' has a wrong offset!");
static_assert(offsetof(UBTTask_MakeRandomPoints_C, MonsterBase) == 0x000128, "Member 'UBTTask_MakeRandomPoints_C::MonsterBase' has a wrong offset!");
static_assert(offsetof(UBTTask_MakeRandomPoints_C, RandomWalkRange) == 0x000130, "Member 'UBTTask_MakeRandomPoints_C::RandomWalkRange' has a wrong offset!");
static_assert(offsetof(UBTTask_MakeRandomPoints_C, CanSecoundCheck) == 0x000134, "Member 'UBTTask_MakeRandomPoints_C::CanSecoundCheck' has a wrong offset!");
static_assert(offsetof(UBTTask_MakeRandomPoints_C, CanThirdCheck) == 0x000135, "Member 'UBTTask_MakeRandomPoints_C::CanThirdCheck' has a wrong offset!");

}

