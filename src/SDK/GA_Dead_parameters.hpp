#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GA_Dead

#include "Basic.hpp"

#include "DarwinGame_structs.hpp"
#include "GameplayTags_structs.hpp"
#include "GameplayAbilities_structs.hpp"


namespace SDK::Params
{

// Function GA_Dead.GA_Dead_C.ExecuteUbergraph_GA_Dead
// 0x0530 (0x0530 - 0x0000)
struct GA_Dead_C_ExecuteUbergraph_GA_Dead final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AMonsterBoss*                           K2Node_DynamicCast_AsMonster_Boss;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor)
	EMonsterBossDerived                           CallFunc_GetBossDerived_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_4;                     // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_4;                    // 0x0030(0x00B0)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00E4(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_3;                     // 0x00F4(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_3;                    // 0x0100(0x00B0)()
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_2;                     // 0x01B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_2;                    // 0x01B8(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x0268(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag_1;                     // 0x0278(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData_1;                    // 0x0280(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x0330(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayTag                           K2Node_CustomEvent_EventTag;                       // 0x0340(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     K2Node_CustomEvent_EventData;                      // 0x0348(0x00B0)()
	TDelegate<void(const struct FGameplayTag& EventTag, const struct FGameplayEventData& EventData)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x03F8(0x0010)(ZeroConstructor, NoDestructor)
	struct FGameplayEventData                     Temp_struct_Variable;                              // 0x0408(0x00B0)()
	struct FGameplayTag                           Temp_struct_Variable_1;                            // 0x04B8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess;   // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C1[0x7];                                      // 0x04C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue;  // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface;          // 0x04D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterInterface>   CallFunc_GetCurrentMoveStateTag_self_CastInput;    // 0x04E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGameplayTag                           CallFunc_GetCurrentMoveStateTag_ReturnValue;       // 0x04F8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1; // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAbilityTask_PlayMontageAndWaitEvent*   CallFunc_PlayMontageAndWaitEvent_ReturnValue;      // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bWasCancelled;                        // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0511(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_512[0x6];                                      // 0x0512(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1; // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGPACharacter*                          K2Node_DynamicCast_AsGPACharacter;                 // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Dead_C_ExecuteUbergraph_GA_Dead) == 0x000008, "Wrong alignment on GA_Dead_C_ExecuteUbergraph_GA_Dead");
static_assert(sizeof(GA_Dead_C_ExecuteUbergraph_GA_Dead) == 0x000530, "Wrong size on GA_Dead_C_ExecuteUbergraph_GA_Dead");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, EntryPoint) == 0x000000, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::EntryPoint' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_DynamicCast_AsMonster_Boss) == 0x000008, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_DynamicCast_AsMonster_Boss' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, CallFunc_GetBossDerived_ReturnValue) == 0x000024, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::CallFunc_GetBossDerived_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CustomEvent_EventTag_4) == 0x000028, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CustomEvent_EventTag_4' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CustomEvent_EventData_4) == 0x000030, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CustomEvent_EventData_4' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E0, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000E4, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CustomEvent_EventTag_3) == 0x0000F4, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CustomEvent_EventTag_3' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CustomEvent_EventData_3) == 0x000100, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CustomEvent_EventData_3' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CustomEvent_EventTag_2) == 0x0001B0, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CustomEvent_EventTag_2' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CustomEvent_EventData_2) == 0x0001B8, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CustomEvent_EventData_2' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CreateDelegate_OutputDelegate_2) == 0x000268, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CustomEvent_EventTag_1) == 0x000278, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CustomEvent_EventTag_1' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CustomEvent_EventData_1) == 0x000280, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CustomEvent_EventData_1' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CreateDelegate_OutputDelegate_3) == 0x000330, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CustomEvent_EventTag) == 0x000340, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CustomEvent_EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CustomEvent_EventData) == 0x000348, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CustomEvent_EventData' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_CreateDelegate_OutputDelegate_4) == 0x0003F8, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, Temp_struct_Variable) == 0x000408, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, Temp_struct_Variable_1) == 0x0004B8, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess) == 0x0004C0, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, CallFunc_GetAvatarActorFromActorInfo_ReturnValue) == 0x0004C8, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::CallFunc_GetAvatarActorFromActorInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_DynamicCast_AsCharacter_Interface) == 0x0004D0, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_DynamicCast_AsCharacter_Interface' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_DynamicCast_bSuccess_1) == 0x0004E0, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, CallFunc_GetCurrentMoveStateTag_self_CastInput) == 0x0004E8, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::CallFunc_GetCurrentMoveStateTag_self_CastInput' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, CallFunc_GetCurrentMoveStateTag_ReturnValue) == 0x0004F8, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::CallFunc_GetCurrentMoveStateTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1) == 0x000500, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::GameplayTagsK2Node_SwitchGameplayTag_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, CallFunc_PlayMontageAndWaitEvent_ReturnValue) == 0x000508, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::CallFunc_PlayMontageAndWaitEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_Event_bWasCancelled) == 0x000510, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_Event_bWasCancelled' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, CallFunc_IsValid_ReturnValue) == 0x000511, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1) == 0x000518, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::CallFunc_GetAvatarActorFromActorInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_DynamicCast_AsGPACharacter) == 0x000520, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_DynamicCast_AsGPACharacter' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_ExecuteUbergraph_GA_Dead, K2Node_DynamicCast_bSuccess_2) == 0x000528, "Member 'GA_Dead_C_ExecuteUbergraph_GA_Dead::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function GA_Dead.GA_Dead_C.K2_OnEndAbility
// 0x0001 (0x0001 - 0x0000)
struct GA_Dead_C_K2_OnEndAbility final
{
public:
	bool                                          bWasCancelled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GA_Dead_C_K2_OnEndAbility) == 0x000001, "Wrong alignment on GA_Dead_C_K2_OnEndAbility");
static_assert(sizeof(GA_Dead_C_K2_OnEndAbility) == 0x000001, "Wrong size on GA_Dead_C_K2_OnEndAbility");
static_assert(offsetof(GA_Dead_C_K2_OnEndAbility, bWasCancelled) == 0x000000, "Member 'GA_Dead_C_K2_OnEndAbility::bWasCancelled' has a wrong offset!");

// Function GA_Dead.GA_Dead_C.OnCompleted_BEEC864C432C9C295BF8629D19F9EC6E
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dead_C_OnCompleted_BEEC864C432C9C295BF8629D19F9EC6E final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dead_C_OnCompleted_BEEC864C432C9C295BF8629D19F9EC6E) == 0x000008, "Wrong alignment on GA_Dead_C_OnCompleted_BEEC864C432C9C295BF8629D19F9EC6E");
static_assert(sizeof(GA_Dead_C_OnCompleted_BEEC864C432C9C295BF8629D19F9EC6E) == 0x0000B8, "Wrong size on GA_Dead_C_OnCompleted_BEEC864C432C9C295BF8629D19F9EC6E");
static_assert(offsetof(GA_Dead_C_OnCompleted_BEEC864C432C9C295BF8629D19F9EC6E, EventTag) == 0x000000, "Member 'GA_Dead_C_OnCompleted_BEEC864C432C9C295BF8629D19F9EC6E::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_OnCompleted_BEEC864C432C9C295BF8629D19F9EC6E, EventData) == 0x000008, "Member 'GA_Dead_C_OnCompleted_BEEC864C432C9C295BF8629D19F9EC6E::EventData' has a wrong offset!");

// Function GA_Dead.GA_Dead_C.OnBlendOut_BEEC864C432C9C295BF8629D19F9EC6E
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dead_C_OnBlendOut_BEEC864C432C9C295BF8629D19F9EC6E final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dead_C_OnBlendOut_BEEC864C432C9C295BF8629D19F9EC6E) == 0x000008, "Wrong alignment on GA_Dead_C_OnBlendOut_BEEC864C432C9C295BF8629D19F9EC6E");
static_assert(sizeof(GA_Dead_C_OnBlendOut_BEEC864C432C9C295BF8629D19F9EC6E) == 0x0000B8, "Wrong size on GA_Dead_C_OnBlendOut_BEEC864C432C9C295BF8629D19F9EC6E");
static_assert(offsetof(GA_Dead_C_OnBlendOut_BEEC864C432C9C295BF8629D19F9EC6E, EventTag) == 0x000000, "Member 'GA_Dead_C_OnBlendOut_BEEC864C432C9C295BF8629D19F9EC6E::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_OnBlendOut_BEEC864C432C9C295BF8629D19F9EC6E, EventData) == 0x000008, "Member 'GA_Dead_C_OnBlendOut_BEEC864C432C9C295BF8629D19F9EC6E::EventData' has a wrong offset!");

// Function GA_Dead.GA_Dead_C.OnInterrupted_BEEC864C432C9C295BF8629D19F9EC6E
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dead_C_OnInterrupted_BEEC864C432C9C295BF8629D19F9EC6E final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dead_C_OnInterrupted_BEEC864C432C9C295BF8629D19F9EC6E) == 0x000008, "Wrong alignment on GA_Dead_C_OnInterrupted_BEEC864C432C9C295BF8629D19F9EC6E");
static_assert(sizeof(GA_Dead_C_OnInterrupted_BEEC864C432C9C295BF8629D19F9EC6E) == 0x0000B8, "Wrong size on GA_Dead_C_OnInterrupted_BEEC864C432C9C295BF8629D19F9EC6E");
static_assert(offsetof(GA_Dead_C_OnInterrupted_BEEC864C432C9C295BF8629D19F9EC6E, EventTag) == 0x000000, "Member 'GA_Dead_C_OnInterrupted_BEEC864C432C9C295BF8629D19F9EC6E::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_OnInterrupted_BEEC864C432C9C295BF8629D19F9EC6E, EventData) == 0x000008, "Member 'GA_Dead_C_OnInterrupted_BEEC864C432C9C295BF8629D19F9EC6E::EventData' has a wrong offset!");

// Function GA_Dead.GA_Dead_C.OnCancelled_BEEC864C432C9C295BF8629D19F9EC6E
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dead_C_OnCancelled_BEEC864C432C9C295BF8629D19F9EC6E final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dead_C_OnCancelled_BEEC864C432C9C295BF8629D19F9EC6E) == 0x000008, "Wrong alignment on GA_Dead_C_OnCancelled_BEEC864C432C9C295BF8629D19F9EC6E");
static_assert(sizeof(GA_Dead_C_OnCancelled_BEEC864C432C9C295BF8629D19F9EC6E) == 0x0000B8, "Wrong size on GA_Dead_C_OnCancelled_BEEC864C432C9C295BF8629D19F9EC6E");
static_assert(offsetof(GA_Dead_C_OnCancelled_BEEC864C432C9C295BF8629D19F9EC6E, EventTag) == 0x000000, "Member 'GA_Dead_C_OnCancelled_BEEC864C432C9C295BF8629D19F9EC6E::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_OnCancelled_BEEC864C432C9C295BF8629D19F9EC6E, EventData) == 0x000008, "Member 'GA_Dead_C_OnCancelled_BEEC864C432C9C295BF8629D19F9EC6E::EventData' has a wrong offset!");

// Function GA_Dead.GA_Dead_C.EventReceived_BEEC864C432C9C295BF8629D19F9EC6E
// 0x00B8 (0x00B8 - 0x0000)
struct GA_Dead_C_EventReceived_BEEC864C432C9C295BF8629D19F9EC6E final
{
public:
	struct FGameplayTag                           EventTag;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, HasGetValueTypeHash)
	struct FGameplayEventData                     EventData;                                         // 0x0008(0x00B0)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GA_Dead_C_EventReceived_BEEC864C432C9C295BF8629D19F9EC6E) == 0x000008, "Wrong alignment on GA_Dead_C_EventReceived_BEEC864C432C9C295BF8629D19F9EC6E");
static_assert(sizeof(GA_Dead_C_EventReceived_BEEC864C432C9C295BF8629D19F9EC6E) == 0x0000B8, "Wrong size on GA_Dead_C_EventReceived_BEEC864C432C9C295BF8629D19F9EC6E");
static_assert(offsetof(GA_Dead_C_EventReceived_BEEC864C432C9C295BF8629D19F9EC6E, EventTag) == 0x000000, "Member 'GA_Dead_C_EventReceived_BEEC864C432C9C295BF8629D19F9EC6E::EventTag' has a wrong offset!");
static_assert(offsetof(GA_Dead_C_EventReceived_BEEC864C432C9C295BF8629D19F9EC6E, EventData) == 0x000008, "Member 'GA_Dead_C_EventReceived_BEEC864C432C9C295BF8629D19F9EC6E::EventData' has a wrong offset!");

}

