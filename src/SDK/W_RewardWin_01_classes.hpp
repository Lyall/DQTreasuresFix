#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_RewardWin_01

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_RewardWin_01.W_RewardWin_01_C
// 0x00A0 (0x0540 - 0x04A0)
class UW_RewardWin_01_C final : public UUIRewardWin_01
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x04A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NewAnimation;                                      // 0x04A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x04B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BtnPic_A;                                          // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CoinIcon;                                          // 0x04C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CoinRankIcon_01;                                   // 0x04D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CoinRankIcon_02;                                   // 0x04D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CoinRankIcon_03;                                   // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CoinRankIcon_04;                                   // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 IconBase;                                          // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemIconBase;                                      // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ItemIconBase_1;                                    // 0x0500(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 line_3;                                            // 0x0508(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RankBase;                                          // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ResultBase;                                        // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TitleBase_01;                                      // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TreasureIcon;                                      // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TypeIcon;                                          // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_BG_Black_C*                          W_BG_Black;                                        // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_W_RewardWin_01(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_RewardWin_01_C">();
	}
	static class UW_RewardWin_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_RewardWin_01_C>();
	}
};
static_assert(alignof(UW_RewardWin_01_C) == 0x000008, "Wrong alignment on UW_RewardWin_01_C");
static_assert(sizeof(UW_RewardWin_01_C) == 0x000540, "Wrong size on UW_RewardWin_01_C");
static_assert(offsetof(UW_RewardWin_01_C, UberGraphFrame) == 0x0004A0, "Member 'UW_RewardWin_01_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, NewAnimation) == 0x0004A8, "Member 'UW_RewardWin_01_C::NewAnimation' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, Out) == 0x0004B0, "Member 'UW_RewardWin_01_C::Out' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, In) == 0x0004B8, "Member 'UW_RewardWin_01_C::In' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, BtnPic_A) == 0x0004C0, "Member 'UW_RewardWin_01_C::BtnPic_A' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, CoinIcon) == 0x0004C8, "Member 'UW_RewardWin_01_C::CoinIcon' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, CoinRankIcon_01) == 0x0004D0, "Member 'UW_RewardWin_01_C::CoinRankIcon_01' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, CoinRankIcon_02) == 0x0004D8, "Member 'UW_RewardWin_01_C::CoinRankIcon_02' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, CoinRankIcon_03) == 0x0004E0, "Member 'UW_RewardWin_01_C::CoinRankIcon_03' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, CoinRankIcon_04) == 0x0004E8, "Member 'UW_RewardWin_01_C::CoinRankIcon_04' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, IconBase) == 0x0004F0, "Member 'UW_RewardWin_01_C::IconBase' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, ItemIconBase) == 0x0004F8, "Member 'UW_RewardWin_01_C::ItemIconBase' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, ItemIconBase_1) == 0x000500, "Member 'UW_RewardWin_01_C::ItemIconBase_1' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, line_3) == 0x000508, "Member 'UW_RewardWin_01_C::line_3' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, RankBase) == 0x000510, "Member 'UW_RewardWin_01_C::RankBase' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, ResultBase) == 0x000518, "Member 'UW_RewardWin_01_C::ResultBase' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, TitleBase_01) == 0x000520, "Member 'UW_RewardWin_01_C::TitleBase_01' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, TreasureIcon) == 0x000528, "Member 'UW_RewardWin_01_C::TreasureIcon' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, TypeIcon) == 0x000530, "Member 'UW_RewardWin_01_C::TypeIcon' has a wrong offset!");
static_assert(offsetof(UW_RewardWin_01_C, W_BG_Black) == 0x000538, "Member 'UW_RewardWin_01_C::W_BG_Black' has a wrong offset!");

}

