#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Air_StartBeast

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DarwinGame_classes.hpp"
#include "GameplayTags_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Air_StartBeast.BP_Air_StartBeast_C
// 0x0020 (0x01C0 - 0x01A0)
class UBP_Air_StartBeast_C final : public UAirStateStartBeast
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x01A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FVector                                JumpVelocity;                                      // 0x01A8(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          MoveGateOpen;                                      // 0x01B4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Jumped;                                            // 0x01B5(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B6[0x2];                                      // 0x01B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           TagToChange;                                       // 0x01B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Enter();
	void ExecuteUbergraph_BP_Air_StartBeast(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Air_StartBeast_C">();
	}
	static class UBP_Air_StartBeast_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Air_StartBeast_C>();
	}
};
static_assert(alignof(UBP_Air_StartBeast_C) == 0x000008, "Wrong alignment on UBP_Air_StartBeast_C");
static_assert(sizeof(UBP_Air_StartBeast_C) == 0x0001C0, "Wrong size on UBP_Air_StartBeast_C");
static_assert(offsetof(UBP_Air_StartBeast_C, UberGraphFrame) == 0x0001A0, "Member 'UBP_Air_StartBeast_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Air_StartBeast_C, JumpVelocity) == 0x0001A8, "Member 'UBP_Air_StartBeast_C::JumpVelocity' has a wrong offset!");
static_assert(offsetof(UBP_Air_StartBeast_C, MoveGateOpen) == 0x0001B4, "Member 'UBP_Air_StartBeast_C::MoveGateOpen' has a wrong offset!");
static_assert(offsetof(UBP_Air_StartBeast_C, Jumped) == 0x0001B5, "Member 'UBP_Air_StartBeast_C::Jumped' has a wrong offset!");
static_assert(offsetof(UBP_Air_StartBeast_C, TagToChange) == 0x0001B8, "Member 'UBP_Air_StartBeast_C::TagToChange' has a wrong offset!");

}

