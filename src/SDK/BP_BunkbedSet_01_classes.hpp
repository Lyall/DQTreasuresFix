#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BunkbedSet_01

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_BunkbedSet_01.BP_BunkbedSet_01_C
// 0x0030 (0x0268 - 0x0238)
class ABP_BunkbedSet_01_C final : public AFieldObjectBasicBase
{
public:
	class UStaticMeshComponent*                   StaticMeshComponent1;                              // 0x0238(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent0;                              // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent4;                              // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent3;                              // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   StaticMeshComponent2;                              // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        SceneRoot;                                         // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_BunkbedSet_01_C">();
	}
	static class ABP_BunkbedSet_01_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_BunkbedSet_01_C>();
	}
};
static_assert(alignof(ABP_BunkbedSet_01_C) == 0x000008, "Wrong alignment on ABP_BunkbedSet_01_C");
static_assert(sizeof(ABP_BunkbedSet_01_C) == 0x000268, "Wrong size on ABP_BunkbedSet_01_C");
static_assert(offsetof(ABP_BunkbedSet_01_C, StaticMeshComponent1) == 0x000238, "Member 'ABP_BunkbedSet_01_C::StaticMeshComponent1' has a wrong offset!");
static_assert(offsetof(ABP_BunkbedSet_01_C, StaticMeshComponent0) == 0x000240, "Member 'ABP_BunkbedSet_01_C::StaticMeshComponent0' has a wrong offset!");
static_assert(offsetof(ABP_BunkbedSet_01_C, StaticMeshComponent4) == 0x000248, "Member 'ABP_BunkbedSet_01_C::StaticMeshComponent4' has a wrong offset!");
static_assert(offsetof(ABP_BunkbedSet_01_C, StaticMeshComponent3) == 0x000250, "Member 'ABP_BunkbedSet_01_C::StaticMeshComponent3' has a wrong offset!");
static_assert(offsetof(ABP_BunkbedSet_01_C, StaticMeshComponent2) == 0x000258, "Member 'ABP_BunkbedSet_01_C::StaticMeshComponent2' has a wrong offset!");
static_assert(offsetof(ABP_BunkbedSet_01_C, SceneRoot) == 0x000260, "Member 'ABP_BunkbedSet_01_C::SceneRoot' has a wrong offset!");

}

