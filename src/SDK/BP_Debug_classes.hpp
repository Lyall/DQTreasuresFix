#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Debug

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DarwinGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Debug.BP_Debug_C
// 0x0038 (0x01A8 - 0x0170)
class UBP_Debug_C final : public UMoveStateBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0170(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UW_DebugMoveMode_C*                     Ref_DebugMoveMenu;                                 // 0x0178(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DebugMoveSpeed;                                    // 0x0180(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaX;                                            // 0x0184(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaY;                                            // 0x0188(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaZ;                                            // 0x018C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MinSpeed;                                          // 0x0190(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxSpeed;                                          // 0x0194(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         deltaValue;                                        // 0x0198(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DebugMoveValue;                                    // 0x019C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	float ChangeDebugMoveSpeed(float ChangeValue);
	void Update(float DeltaTime);
	void Button_X(bool bRelease);
	void Button_Y(bool bRelease);
	void Button_B(bool bRelease);
	void Button_A(bool bRelease);
	void Button_L(bool bRelease);
	void Button_LT(bool bRelease);
	void Button_R(bool bRelease);
	void Move(const struct FVector& InputVector);
	void Exit();
	void Button_RT(bool bRelease);
	void Button_Up(bool bRelease);
	void Button_Down(bool bRelease);
	void Button_Left(bool bRelease);
	void Button_Right(bool bRelease);
	void Enter();
	void ExecuteUbergraph_BP_Debug(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Debug_C">();
	}
	static class UBP_Debug_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Debug_C>();
	}
};
static_assert(alignof(UBP_Debug_C) == 0x000008, "Wrong alignment on UBP_Debug_C");
static_assert(sizeof(UBP_Debug_C) == 0x0001A8, "Wrong size on UBP_Debug_C");
static_assert(offsetof(UBP_Debug_C, UberGraphFrame) == 0x000170, "Member 'UBP_Debug_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Debug_C, Ref_DebugMoveMenu) == 0x000178, "Member 'UBP_Debug_C::Ref_DebugMoveMenu' has a wrong offset!");
static_assert(offsetof(UBP_Debug_C, DebugMoveSpeed) == 0x000180, "Member 'UBP_Debug_C::DebugMoveSpeed' has a wrong offset!");
static_assert(offsetof(UBP_Debug_C, DeltaX) == 0x000184, "Member 'UBP_Debug_C::DeltaX' has a wrong offset!");
static_assert(offsetof(UBP_Debug_C, DeltaY) == 0x000188, "Member 'UBP_Debug_C::DeltaY' has a wrong offset!");
static_assert(offsetof(UBP_Debug_C, DeltaZ) == 0x00018C, "Member 'UBP_Debug_C::DeltaZ' has a wrong offset!");
static_assert(offsetof(UBP_Debug_C, MinSpeed) == 0x000190, "Member 'UBP_Debug_C::MinSpeed' has a wrong offset!");
static_assert(offsetof(UBP_Debug_C, MaxSpeed) == 0x000194, "Member 'UBP_Debug_C::MaxSpeed' has a wrong offset!");
static_assert(offsetof(UBP_Debug_C, deltaValue) == 0x000198, "Member 'UBP_Debug_C::deltaValue' has a wrong offset!");
static_assert(offsetof(UBP_Debug_C, DebugMoveValue) == 0x00019C, "Member 'UBP_Debug_C::DebugMoveValue' has a wrong offset!");

}

