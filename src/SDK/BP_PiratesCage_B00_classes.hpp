#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PiratesCage_B00

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DarwinGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_PiratesCage_B00.BP_PiratesCage_B00_C
// 0x0020 (0x02D0 - 0x02B0)
class ABP_PiratesCage_B00_C final : public AFieldObjectBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UToggleVisibilityComponent*             ToggleVisibility;                                  // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class FName                                   EventID;                                           // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_PiratesCage_B00(int32 EntryPoint);
	void DoEventEndSubBP(const class FName& ID);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_PiratesCage_B00_C">();
	}
	static class ABP_PiratesCage_B00_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_PiratesCage_B00_C>();
	}
};
static_assert(alignof(ABP_PiratesCage_B00_C) == 0x000008, "Wrong alignment on ABP_PiratesCage_B00_C");
static_assert(sizeof(ABP_PiratesCage_B00_C) == 0x0002D0, "Wrong size on ABP_PiratesCage_B00_C");
static_assert(offsetof(ABP_PiratesCage_B00_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_PiratesCage_B00_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_PiratesCage_B00_C, StaticMesh) == 0x0002B8, "Member 'ABP_PiratesCage_B00_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_PiratesCage_B00_C, ToggleVisibility) == 0x0002C0, "Member 'ABP_PiratesCage_B00_C::ToggleVisibility' has a wrong offset!");
static_assert(offsetof(ABP_PiratesCage_B00_C, EventID) == 0x0002C8, "Member 'ABP_PiratesCage_B00_C::EventID' has a wrong offset!");

}

