#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC

#include "Basic.hpp"

#include "BP_NPC_classes.hpp"
#include "BP_NPC_parameters.hpp"


namespace SDK
{

// Function BP_NPC.BP_NPC_C.ExecuteUbergraph_BP_NPC
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::ExecuteUbergraph_BP_NPC(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "ExecuteUbergraph_BP_NPC");

	Params::BP_NPC_C_ExecuteUbergraph_BP_NPC Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.SetTalkStartState
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::SetTalkStartState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "SetTalkStartState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.SetTalkEndState
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::SetTalkEndState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "SetTalkEndState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_NPC_C_BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.TalkEndTurn
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::TalkEndTurn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "TalkEndTurn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.EndOverlapEventTrigger
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::EndOverlapEventTrigger()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "EndOverlapEventTrigger");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_NPC_C::BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.SetFukidashiDrawCollisonRadious
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Radious                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::SetFukidashiDrawCollisonRadious(const float Radious)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "SetFukidashiDrawCollisonRadious");

	Params::BP_NPC_C_SetFukidashiDrawCollisonRadious Parms{};

	Parms.Radious = Radious;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.CallPlayEvent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           EventID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// EEventType                              EventType_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             QuestID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EQuestState                             QuestState_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_EventTalktBranchData         TextBranchData                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
// TArray<struct FST_TextGoto>             TextGotoData                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// class AActor*                           Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::CallPlayEvent(const class FString& EventID, EEventType EventType_0, class FName QuestID, EQuestState QuestState_0, const struct FST_EventTalktBranchData& TextBranchData, const TArray<struct FST_TextGoto>& TextGotoData, class AActor* Sender)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "CallPlayEvent");

	Params::BP_NPC_C_CallPlayEvent Parms{};

	Parms.EventID = std::move(EventID);
	Parms.EventType_0 = EventType_0;
	Parms.QuestID = QuestID;
	Parms.QuestState_0 = QuestState_0;
	Parms.TextBranchData = std::move(TextBranchData);
	Parms.TextGotoData = std::move(TextGotoData);
	Parms.Sender = Sender;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_NPC_C::BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.SendEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             EventID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  Sender                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DebugMode                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_C::SendEvent(class FName EventID, class UActorComponent* Sender, bool DebugMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "SendEvent");

	Params::BP_NPC_C_SendEvent Parms{};

	Parms.EventID = EventID;
	Parms.Sender = Sender;
	Parms.DebugMode = DebugMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.SetEventSendNpc
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_NPC_C*                        SendActor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::SetEventSendNpc(class ABP_NPC_C* SendActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "SetEventSendNpc");

	Params::BP_NPC_C_SetEventSendNpc Parms{};

	Parms.SendActor = SendActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.ResetTalkState
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::ResetTalkState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "ResetTalkState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.EnableMoveCapsule
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::EnableMoveCapsule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "EnableMoveCapsule");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.SendLiftEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_EventSender_C*                EventSender                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   LiftId                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             StarScarId                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::SendLiftEvent(class UBP_EventSender_C* EventSender, int32 LiftId, class FName StarScarId)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "SendLiftEvent");

	Params::BP_NPC_C_SendLiftEvent Parms{};

	Parms.EventSender = EventSender;
	Parms.LiftId = LiftId;
	Parms.StarScarId = StarScarId;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.DisableMoveCapsule
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::DisableMoveCapsule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "DisableMoveCapsule");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.OpenFukidashi
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EFukidashiEnum                          FukidashiType_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FString                           CharacterName                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FString                           FukidashiText                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    VisibleIcon                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    AutoClose                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FName                             TalkeID                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::OpenFukidashi(EFukidashiEnum FukidashiType_0, const class FString& CharacterName, const class FString& FukidashiText, const bool VisibleIcon, const bool AutoClose, const class FName TalkeID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "OpenFukidashi");

	Params::BP_NPC_C_OpenFukidashi Parms{};

	Parms.FukidashiType_0 = FukidashiType_0;
	Parms.CharacterName = std::move(CharacterName);
	Parms.FukidashiText = std::move(FukidashiText);
	Parms.VisibleIcon = VisibleIcon;
	Parms.AutoClose = AutoClose;
	Parms.TalkeID = TalkeID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.OnReceiveHit
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EObjectEffectionEnum                    Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Instigator_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::OnReceiveHit(EObjectEffectionEnum Type, class AActor* Instigator_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "OnReceiveHit");

	Params::BP_NPC_C_OnReceiveHit Parms{};

	Parms.Type = Type;
	Parms.Instigator_0 = Instigator_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.NPCOpenFukidasiUI
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IconVisibility                                         (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_C::NPCOpenFukidasiUI(const bool IconVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "NPCOpenFukidasiUI");

	Params::BP_NPC_C_NPCOpenFukidasiUI Parms{};

	Parms.IconVisibility = IconVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.NPCResumeMovement
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::NPCResumeMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "NPCResumeMovement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "ReceiveEndPlay");

	Params::BP_NPC_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_NPC_C::BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.SetAppearance
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::SetAppearance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "SetAppearance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "ReceiveTick");

	Params::BP_NPC_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.CloseFukidashi
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::CloseFukidashi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "CloseFukidashi");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.GenerateAttachObjects
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::GenerateAttachObjects()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "GenerateAttachObjects");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.AttachWeapon
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ObjectName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// class FName                             SocketName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::AttachWeapon(const class FString& ObjectName, class FName SocketName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "AttachWeapon");

	Params::BP_NPC_C_AttachWeapon Parms{};

	Parms.ObjectName = std::move(ObjectName);
	Parms.SocketName = SocketName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.EndPlayEvent
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsEventCancel                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_C::EndPlayEvent(bool IsEventCancel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "EndPlayEvent");

	Params::BP_NPC_C_EndPlayEvent Parms{};

	Parms.IsEventCancel = IsEventCancel;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_NPC_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.CloseEmoteEffect
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::CloseEmoteEffect()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "CloseEmoteEffect");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.CloseStamp
// (BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::CloseStamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "CloseStamp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.CloseNearUI
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::CloseNearUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "CloseNearUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.OpenNearUI
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::OpenNearUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "OpenNearUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.CloseFukidashiWithoutStamp
// (Event, Public, BlueprintEvent)

void ABP_NPC_C::CloseFukidashiWithoutStamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "CloseFukidashiWithoutStamp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.OpenEmoteEffect
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EEmotionEffectID                        EmoteEffectID                                          (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::OpenEmoteEffect(const EEmotionEffectID EmoteEffectID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "OpenEmoteEffect");

	Params::BP_NPC_C_OpenEmoteEffect Parms{};

	Parms.EmoteEffectID = EmoteEffectID;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.OpenStamp
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// EStampIconType                          StampType                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::OpenStamp(EStampIconType StampType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "OpenStamp");

	Params::BP_NPC_C_OpenStamp Parms{};

	Parms.StampType = StampType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.CloseIcon
// (Event, Protected, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::CloseIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "CloseIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.OpenIcon
// (Event, Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBalloonIconType                        IconType                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::OpenIcon(EBalloonIconType IconType, const struct FVector& Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "OpenIcon");

	Params::BP_NPC_C_OpenIcon Parms{};

	Parms.IconType = IconType;
	Parms.Offset = std::move(Offset);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.タイムライン_0__UpdateFunc
// (BlueprintEvent)

void ABP_NPC_C::m__________________0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "タイムライン_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.タイムライン_0__FinishedFunc
// (BlueprintEvent)

void ABP_NPC_C::m__________________0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "タイムライン_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.タイムライン_4__UpdateFunc
// (BlueprintEvent)

void ABP_NPC_C::m__________________4__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "タイムライン_4__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.タイムライン_4__FinishedFunc
// (BlueprintEvent)

void ABP_NPC_C::m__________________4__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "タイムライン_4__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.SetMeshAndMaterials
// (Protected, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsConstructionScript                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_C::SetMeshAndMaterials(bool IsConstructionScript)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "SetMeshAndMaterials");

	Params::BP_NPC_C_SetMeshAndMaterials Parms{};

	Parms.IsConstructionScript = IsConstructionScript;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.SetEventData
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::SetEventData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "SetEventData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.Look at Player
// (Protected, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   InterpSpeed                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::Look_at_Player(float InterpSpeed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "Look at Player");

	Params::BP_NPC_C_Look_at_Player Parms{};

	Parms.InterpSpeed = InterpSpeed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.UpdateEventData
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::UpdateEventData()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "UpdateEventData");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.OpenQuestIcon
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EBalloonIconType                        Type                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_NPC_C::OpenQuestIcon(EBalloonIconType Type)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "OpenQuestIcon");

	Params::BP_NPC_C_OpenQuestIcon Parms{};

	Parms.Type = Type;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.CloseQuestIcon
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::CloseQuestIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "CloseQuestIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.IsTalkNPC
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_NPC_C::IsTalkNPC()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "IsTalkNPC");

	Params::BP_NPC_C_IsTalkNPC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_NPC.BP_NPC_C.OpenFukidasiUI
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IconVisibility                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_C::OpenFukidasiUI(bool IconVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "OpenFukidasiUI");

	Params::BP_NPC_C_OpenFukidasiUI Parms{};

	Parms.IconVisibility = IconVisibility;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.CloseFukidashiUI
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::CloseFukidashiUI()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "CloseFukidashiUI");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.EntryDataTable
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::EntryDataTable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "EntryDataTable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.SetLookAtCollision
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::SetLookAtCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "SetLookAtCollision");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.Is Use Talk End Turn
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    UseEndTurn                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_C::Is_Use_Talk_End_Turn(bool* UseEndTurn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "Is Use Talk End Turn");

	Params::BP_NPC_C_Is_Use_Talk_End_Turn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (UseEndTurn != nullptr)
		*UseEndTurn = Parms.UseEndTurn;
}


// Function BP_NPC.BP_NPC_C.SetTurnAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Current                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_C::SetTurnAnim(const struct FRotator& Current, const struct FRotator& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "SetTurnAnim");

	Params::BP_NPC_C_SetTurnAnim Parms{};

	Parms.Current = std::move(Current);
	Parms.Target = std::move(Target);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.HitFukidashiCollision
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool ABP_NPC_C::HitFukidashiCollision()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "HitFukidashiCollision");

	Params::BP_NPC_C_HitFukidashiCollision Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_NPC.BP_NPC_C.Call Talk Look At Player
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::Call_Talk_Look_At_Player()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "Call Talk Look At Player");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.GetAppearanceData
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NpcID_0                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FST_NPCAppearance                DataInfo                                               (Parm, OutParm)

void ABP_NPC_C::GetAppearanceData(const class FName& NpcID_0, bool* Result, struct FST_NPCAppearance* DataInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "GetAppearanceData");

	Params::BP_NPC_C_GetAppearanceData Parms{};

	Parms.NpcID_0 = NpcID_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (DataInfo != nullptr)
		*DataInfo = std::move(Parms.DataInfo);
}


// Function BP_NPC.BP_NPC_C.DebugStatePrint
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Str                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_NPC_C::DebugStatePrint(const class FString& Str)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "DebugStatePrint");

	Params::BP_NPC_C_DebugStatePrint Parms{};

	Parms.Str = std::move(Str);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_NPC.BP_NPC_C.DebugDrawSpawnLocation
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::DebugDrawSpawnLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "DebugDrawSpawnLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.Get Fukidashi Text
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)

class FString ABP_NPC_C::Get_Fukidashi_Text()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "Get Fukidashi Text");

	Params::BP_NPC_C_Get_Fukidashi_Text Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_NPC.BP_NPC_C.GetNPCFukisahiOffset
// (Private, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector ABP_NPC_C::GetNPCFukisahiOffset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "GetNPCFukisahiOffset");

	Params::BP_NPC_C_GetNPCFukisahiOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_NPC.BP_NPC_C.TalkEndTurnFunction
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_NPC_C::TalkEndTurnFunction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "TalkEndTurnFunction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_NPC.BP_NPC_C.ProcTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         CurrentRotate                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         TargetRotate                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsSetRotation                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_C::ProcTurn(const struct FRotator& CurrentRotate, const struct FRotator& TargetRotate, bool* IsSetRotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "ProcTurn");

	Params::BP_NPC_C_ProcTurn Parms{};

	Parms.CurrentRotate = std::move(CurrentRotate);
	Parms.TargetRotate = std::move(TargetRotate);

	UObject::ProcessEvent(Func, &Parms);

	if (IsSetRotation != nullptr)
		*IsSetRotation = Parms.IsSetRotation;
}


// Function BP_NPC.BP_NPC_C.GetEaseTurnRotation
// (Event, Protected, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         Current                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FRotator                         Target                                                 (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Speed                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FRotator                         ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FRotator ABP_NPC_C::GetEaseTurnRotation(const struct FRotator& Current, const struct FRotator& Target, float Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "GetEaseTurnRotation");

	Params::BP_NPC_C_GetEaseTurnRotation Parms{};

	Parms.Current = std::move(Current);
	Parms.Target = std::move(Target);
	Parms.Speed = Speed;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_NPC.BP_NPC_C.SetUIHideByObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UUI3DBase*                        ThreeDUi                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    isForceEnable                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void ABP_NPC_C::SetUIHideByObject(class UUI3DBase* ThreeDUi, bool isForceEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_NPC_C", "SetUIHideByObject");

	Params::BP_NPC_C_SetUIHideByObject Parms{};

	Parms.ThreeDUi = ThreeDUi;
	Parms.isForceEnable = isForceEnable;

	UObject::ProcessEvent(Func, &Parms);
}

}

