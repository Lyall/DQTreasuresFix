#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PlayerTransformInfoForDebug

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_PlayerTransformInfoForDebug.W_PlayerTransformInfoForDebug_C.ExecuteUbergraph_W_PlayerTransformInfoForDebug
// 0x0040 (0x0040 - 0x0000)
struct W_PlayerTransformInfoForDebug_C_ExecuteUbergraph_W_PlayerTransformInfoForDebug final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerTransformInfoForDebug_C_ExecuteUbergraph_W_PlayerTransformInfoForDebug) == 0x000004, "Wrong alignment on W_PlayerTransformInfoForDebug_C_ExecuteUbergraph_W_PlayerTransformInfoForDebug");
static_assert(sizeof(W_PlayerTransformInfoForDebug_C_ExecuteUbergraph_W_PlayerTransformInfoForDebug) == 0x000040, "Wrong size on W_PlayerTransformInfoForDebug_C_ExecuteUbergraph_W_PlayerTransformInfoForDebug");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_ExecuteUbergraph_W_PlayerTransformInfoForDebug, EntryPoint) == 0x000000, "Member 'W_PlayerTransformInfoForDebug_C_ExecuteUbergraph_W_PlayerTransformInfoForDebug::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_ExecuteUbergraph_W_PlayerTransformInfoForDebug, K2Node_Event_MyGeometry) == 0x000004, "Member 'W_PlayerTransformInfoForDebug_C_ExecuteUbergraph_W_PlayerTransformInfoForDebug::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_ExecuteUbergraph_W_PlayerTransformInfoForDebug, K2Node_Event_InDeltaTime) == 0x00003C, "Member 'W_PlayerTransformInfoForDebug_C_ExecuteUbergraph_W_PlayerTransformInfoForDebug::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function W_PlayerTransformInfoForDebug.W_PlayerTransformInfoForDebug_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_PlayerTransformInfoForDebug_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_PlayerTransformInfoForDebug_C_Tick) == 0x000004, "Wrong alignment on W_PlayerTransformInfoForDebug_C_Tick");
static_assert(sizeof(W_PlayerTransformInfoForDebug_C_Tick) == 0x00003C, "Wrong size on W_PlayerTransformInfoForDebug_C_Tick");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_Tick, MyGeometry) == 0x000000, "Member 'W_PlayerTransformInfoForDebug_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_Tick, InDeltaTime) == 0x000038, "Member 'W_PlayerTransformInfoForDebug_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_PlayerTransformInfoForDebug.W_PlayerTransformInfoForDebug_C.UpdatePlayerPosition
// 0x0068 (0x0068 - 0x0000)
struct W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition final
{
public:
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0020(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0038(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0050(0x0018)()
};
static_assert(alignof(W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition) == 0x000008, "Wrong alignment on W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition");
static_assert(sizeof(W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition) == 0x000068, "Wrong size on W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000000, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition, CallFunc_BreakVector_X) == 0x000014, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition, CallFunc_BreakVector_Y) == 0x000018, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition, CallFunc_BreakVector_Z) == 0x00001C, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition, CallFunc_Conv_FloatToText_ReturnValue) == 0x000020, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000038, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000050, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerPosition::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");

// Function W_PlayerTransformInfoForDebug.W_PlayerTransformInfoForDebug_C.UpdatePlayerRotation
// 0x0068 (0x0068 - 0x0000)
struct W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation final
{
public:
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0020(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0038(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0050(0x0018)()
};
static_assert(alignof(W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation) == 0x000008, "Wrong alignment on W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation");
static_assert(sizeof(W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation) == 0x000068, "Wrong size on W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000000, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation, CallFunc_BreakRotator_Roll) == 0x000014, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation, CallFunc_BreakRotator_Pitch) == 0x000018, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation, CallFunc_BreakRotator_Yaw) == 0x00001C, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation, CallFunc_Conv_FloatToText_ReturnValue) == 0x000020, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000038, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000050, "Member 'W_PlayerTransformInfoForDebug_C_UpdatePlayerRotation::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");

// Function W_PlayerTransformInfoForDebug.W_PlayerTransformInfoForDebug_C.UpdateCameraRotation
// 0x0068 (0x0068 - 0x0000)
struct W_PlayerTransformInfoForDebug_C_UpdateCameraRotation final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0020(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_1;           // 0x0038(0x0018)()
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue_2;           // 0x0050(0x0018)()
};
static_assert(alignof(W_PlayerTransformInfoForDebug_C_UpdateCameraRotation) == 0x000008, "Wrong alignment on W_PlayerTransformInfoForDebug_C_UpdateCameraRotation");
static_assert(sizeof(W_PlayerTransformInfoForDebug_C_UpdateCameraRotation) == 0x000068, "Wrong size on W_PlayerTransformInfoForDebug_C_UpdateCameraRotation");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdateCameraRotation, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'W_PlayerTransformInfoForDebug_C_UpdateCameraRotation::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdateCameraRotation, CallFunc_GetCameraRotation_ReturnValue) == 0x000008, "Member 'W_PlayerTransformInfoForDebug_C_UpdateCameraRotation::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdateCameraRotation, CallFunc_BreakRotator_Roll) == 0x000014, "Member 'W_PlayerTransformInfoForDebug_C_UpdateCameraRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdateCameraRotation, CallFunc_BreakRotator_Pitch) == 0x000018, "Member 'W_PlayerTransformInfoForDebug_C_UpdateCameraRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdateCameraRotation, CallFunc_BreakRotator_Yaw) == 0x00001C, "Member 'W_PlayerTransformInfoForDebug_C_UpdateCameraRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdateCameraRotation, CallFunc_Conv_FloatToText_ReturnValue) == 0x000020, "Member 'W_PlayerTransformInfoForDebug_C_UpdateCameraRotation::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdateCameraRotation, CallFunc_Conv_FloatToText_ReturnValue_1) == 0x000038, "Member 'W_PlayerTransformInfoForDebug_C_UpdateCameraRotation::CallFunc_Conv_FloatToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_PlayerTransformInfoForDebug_C_UpdateCameraRotation, CallFunc_Conv_FloatToText_ReturnValue_2) == 0x000050, "Member 'W_PlayerTransformInfoForDebug_C_UpdateCameraRotation::CallFunc_Conv_FloatToText_ReturnValue_2' has a wrong offset!");

}

