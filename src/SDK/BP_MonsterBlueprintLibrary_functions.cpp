#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MonsterBlueprintLibrary

#include "Basic.hpp"

#include "BP_MonsterBlueprintLibrary_classes.hpp"
#include "BP_MonsterBlueprintLibrary_parameters.hpp"


namespace SDK
{

// Function BP_MonsterBlueprintLibrary.BP_MonsterBlueprintLibrary_C.Add_Monster_List
// (Static, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AMonster*                         Monster                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          m_WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MonsterBlueprintLibrary_C::Add_Monster_List(class AMonster* Monster, class UObject* m_WorldContext)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MonsterBlueprintLibrary_C", "Add_Monster_List");

	Params::BP_MonsterBlueprintLibrary_C_Add_Monster_List Parms{};

	Parms.Monster = Monster;
	Parms.m_WorldContext = m_WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);
}


// Function BP_MonsterBlueprintLibrary.BP_MonsterBlueprintLibrary_C.GetFriendMonster
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   partyIndex                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UObject*                          m_WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AGPACharacter*                    PartyMonster                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MonsterBlueprintLibrary_C::GetFriendMonster(int32 partyIndex, class UObject* m_WorldContext, class AGPACharacter** PartyMonster)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MonsterBlueprintLibrary_C", "GetFriendMonster");

	Params::BP_MonsterBlueprintLibrary_C_GetFriendMonster Parms{};

	Parms.partyIndex = partyIndex;
	Parms.m_WorldContext = m_WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (PartyMonster != nullptr)
		*PartyMonster = Parms.PartyMonster;
}


// Function BP_MonsterBlueprintLibrary.BP_MonsterBlueprintLibrary_C.GetMonsterManager
// (Static, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          m_WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UBP_MonsterManager_C*             MonsterManager                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UBP_MonsterBlueprintLibrary_C::GetMonsterManager(class UObject* m_WorldContext, class UBP_MonsterManager_C** MonsterManager)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MonsterBlueprintLibrary_C", "GetMonsterManager");

	Params::BP_MonsterBlueprintLibrary_C_GetMonsterManager Parms{};

	Parms.m_WorldContext = m_WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (MonsterManager != nullptr)
		*MonsterManager = Parms.MonsterManager;
}


// Function BP_MonsterBlueprintLibrary.BP_MonsterBlueprintLibrary_C.GetEnemyMonsterList
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          m_WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AGPACharacter*>            EnemyList                                              (Parm, OutParm, HasGetValueTypeHash)

void UBP_MonsterBlueprintLibrary_C::GetEnemyMonsterList(class UObject* m_WorldContext, TArray<class AGPACharacter*>* EnemyList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MonsterBlueprintLibrary_C", "GetEnemyMonsterList");

	Params::BP_MonsterBlueprintLibrary_C_GetEnemyMonsterList Parms{};

	Parms.m_WorldContext = m_WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (EnemyList != nullptr)
		*EnemyList = std::move(Parms.EnemyList);
}


// Function BP_MonsterBlueprintLibrary.BP_MonsterBlueprintLibrary_C.GetFriendMonsterList
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          m_WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AGPACharacter*>            EnemyList                                              (Parm, OutParm, HasGetValueTypeHash)

void UBP_MonsterBlueprintLibrary_C::GetFriendMonsterList(class UObject* m_WorldContext, TArray<class AGPACharacter*>* EnemyList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MonsterBlueprintLibrary_C", "GetFriendMonsterList");

	Params::BP_MonsterBlueprintLibrary_C_GetFriendMonsterList Parms{};

	Parms.m_WorldContext = m_WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (EnemyList != nullptr)
		*EnemyList = std::move(Parms.EnemyList);
}


// Function BP_MonsterBlueprintLibrary.BP_MonsterBlueprintLibrary_C.GetAllMonsterList
// (Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          m_WorldContext                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<class AGPACharacter*>            EnemyList                                              (Parm, OutParm, HasGetValueTypeHash)

void UBP_MonsterBlueprintLibrary_C::GetAllMonsterList(class UObject* m_WorldContext, TArray<class AGPACharacter*>* EnemyList)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("BP_MonsterBlueprintLibrary_C", "GetAllMonsterList");

	Params::BP_MonsterBlueprintLibrary_C_GetAllMonsterList Parms{};

	Parms.m_WorldContext = m_WorldContext;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	if (EnemyList != nullptr)
		*EnemyList = std::move(Parms.EnemyList);
}

}

