#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PM_Panel_00_Artifact_1

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PM_Panel_00_Artifact_1.W_PM_Panel_00_Artifact_1_C
// 0x0070 (0x05A0 - 0x0530)
class UW_PM_Panel_00_Artifact_1_C final : public UUIPartyMenu_PM_Panel_00_Artifact_1
{
public:
	class UWidgetAnimation*                       Drop;                                              // 0x0530(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Have;                                              // 0x0538(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Dead;                                              // 0x0540(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       LIVE;                                              // 0x0548(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       off;                                               // 0x0550(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Wait;                                              // 0x0558(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       on;                                                // 0x0560(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Cursor_Add;                                        // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Cursor_Base;                                       // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 HeadBase;                                          // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_42;                                          // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 line_1;                                            // 0x0588(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PM_Artifact_Icon_1;                                // 0x0590(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PM_Artifact_Icon_2;                                // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PM_Panel_00_Artifact_1_C">();
	}
	static class UW_PM_Panel_00_Artifact_1_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PM_Panel_00_Artifact_1_C>();
	}
};
static_assert(alignof(UW_PM_Panel_00_Artifact_1_C) == 0x000008, "Wrong alignment on UW_PM_Panel_00_Artifact_1_C");
static_assert(sizeof(UW_PM_Panel_00_Artifact_1_C) == 0x0005A0, "Wrong size on UW_PM_Panel_00_Artifact_1_C");
static_assert(offsetof(UW_PM_Panel_00_Artifact_1_C, Drop) == 0x000530, "Member 'UW_PM_Panel_00_Artifact_1_C::Drop' has a wrong offset!");
static_assert(offsetof(UW_PM_Panel_00_Artifact_1_C, Have) == 0x000538, "Member 'UW_PM_Panel_00_Artifact_1_C::Have' has a wrong offset!");
static_assert(offsetof(UW_PM_Panel_00_Artifact_1_C, Dead) == 0x000540, "Member 'UW_PM_Panel_00_Artifact_1_C::Dead' has a wrong offset!");
static_assert(offsetof(UW_PM_Panel_00_Artifact_1_C, LIVE) == 0x000548, "Member 'UW_PM_Panel_00_Artifact_1_C::LIVE' has a wrong offset!");
static_assert(offsetof(UW_PM_Panel_00_Artifact_1_C, off) == 0x000550, "Member 'UW_PM_Panel_00_Artifact_1_C::off' has a wrong offset!");
static_assert(offsetof(UW_PM_Panel_00_Artifact_1_C, Wait) == 0x000558, "Member 'UW_PM_Panel_00_Artifact_1_C::Wait' has a wrong offset!");
static_assert(offsetof(UW_PM_Panel_00_Artifact_1_C, on) == 0x000560, "Member 'UW_PM_Panel_00_Artifact_1_C::on' has a wrong offset!");
static_assert(offsetof(UW_PM_Panel_00_Artifact_1_C, Cursor_Add) == 0x000568, "Member 'UW_PM_Panel_00_Artifact_1_C::Cursor_Add' has a wrong offset!");
static_assert(offsetof(UW_PM_Panel_00_Artifact_1_C, Cursor_Base) == 0x000570, "Member 'UW_PM_Panel_00_Artifact_1_C::Cursor_Base' has a wrong offset!");
static_assert(offsetof(UW_PM_Panel_00_Artifact_1_C, HeadBase) == 0x000578, "Member 'UW_PM_Panel_00_Artifact_1_C::HeadBase' has a wrong offset!");
static_assert(offsetof(UW_PM_Panel_00_Artifact_1_C, Image_42) == 0x000580, "Member 'UW_PM_Panel_00_Artifact_1_C::Image_42' has a wrong offset!");
static_assert(offsetof(UW_PM_Panel_00_Artifact_1_C, line_1) == 0x000588, "Member 'UW_PM_Panel_00_Artifact_1_C::line_1' has a wrong offset!");
static_assert(offsetof(UW_PM_Panel_00_Artifact_1_C, PM_Artifact_Icon_1) == 0x000590, "Member 'UW_PM_Panel_00_Artifact_1_C::PM_Artifact_Icon_1' has a wrong offset!");
static_assert(offsetof(UW_PM_Panel_00_Artifact_1_C, PM_Artifact_Icon_2) == 0x000598, "Member 'UW_PM_Panel_00_Artifact_1_C::PM_Artifact_Icon_2' has a wrong offset!");

}

