#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WaterBlock

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DarwinGame_structs.hpp"
#include "DarwinGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_WaterBlock.BP_WaterBlock_C
// 0x0078 (0x03D0 - 0x0358)
class ABP_WaterBlock_C final : public ADesertGimmick
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0358(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   StaticMesh;                                        // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       Sphere;                                            // 0x0368(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x0370(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DirVec;                                            // 0x0374(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         OldZ;                                              // 0x037C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMonsterBoss*                           MonsterBoss;                                       // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Breaking;                                          // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          ground;                                            // 0x0389(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_38A[0x2];                                      // 0x038A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                InLocation;                                        // 0x038C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InRadius;                                          // 0x0398(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReviveDefault;                                     // 0x039C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReviveWait;                                        // 0x03A0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RelativeLocation;                                  // 0x03A4(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_VolcanoPillarSet_C*                 pillar;                                            // 0x03B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FlickeringTime;                                    // 0x03B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BC[0x4];                                      // 0x03BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            FlickeringCycle;                                   // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Material;                                          // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void GetRelativeLocation(struct FVector* RelativeLocation_0);
	void SetBoss(class AMonsterBoss* MonsterBoss_0);
	void IsBossBoost(bool* NewParam);
	void BreakEffect();
	bool HitCheck(const struct FVector& InLocation_0, float InRadius_0);
	void SetMove(float Speed_0, const struct FVector2D& DirVec_0);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void Initialize(class ABP_VolcanoPillarSet_C* PillarSet);
	void ExecuteUbergraph_BP_WaterBlock(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_WaterBlock_C">();
	}
	static class ABP_WaterBlock_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_WaterBlock_C>();
	}
};
static_assert(alignof(ABP_WaterBlock_C) == 0x000008, "Wrong alignment on ABP_WaterBlock_C");
static_assert(sizeof(ABP_WaterBlock_C) == 0x0003D0, "Wrong size on ABP_WaterBlock_C");
static_assert(offsetof(ABP_WaterBlock_C, UberGraphFrame) == 0x000358, "Member 'ABP_WaterBlock_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, StaticMesh) == 0x000360, "Member 'ABP_WaterBlock_C::StaticMesh' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, Sphere) == 0x000368, "Member 'ABP_WaterBlock_C::Sphere' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, Speed) == 0x000370, "Member 'ABP_WaterBlock_C::Speed' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, DirVec) == 0x000374, "Member 'ABP_WaterBlock_C::DirVec' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, OldZ) == 0x00037C, "Member 'ABP_WaterBlock_C::OldZ' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, MonsterBoss) == 0x000380, "Member 'ABP_WaterBlock_C::MonsterBoss' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, Breaking) == 0x000388, "Member 'ABP_WaterBlock_C::Breaking' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, ground) == 0x000389, "Member 'ABP_WaterBlock_C::ground' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, InLocation) == 0x00038C, "Member 'ABP_WaterBlock_C::InLocation' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, InRadius) == 0x000398, "Member 'ABP_WaterBlock_C::InRadius' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, ReviveDefault) == 0x00039C, "Member 'ABP_WaterBlock_C::ReviveDefault' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, ReviveWait) == 0x0003A0, "Member 'ABP_WaterBlock_C::ReviveWait' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, RelativeLocation) == 0x0003A4, "Member 'ABP_WaterBlock_C::RelativeLocation' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, pillar) == 0x0003B0, "Member 'ABP_WaterBlock_C::pillar' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, FlickeringTime) == 0x0003B8, "Member 'ABP_WaterBlock_C::FlickeringTime' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, FlickeringCycle) == 0x0003C0, "Member 'ABP_WaterBlock_C::FlickeringCycle' has a wrong offset!");
static_assert(offsetof(ABP_WaterBlock_C, Material) == 0x0003C8, "Member 'ABP_WaterBlock_C::Material' has a wrong offset!");

}

