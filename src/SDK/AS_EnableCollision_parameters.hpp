#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AS_EnableCollision

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function AS_EnableCollision.AS_EnableCollision_C.Received_NotifyBegin
// 0x0098 (0x0098 - 0x0000)
struct AS_EnableCollision_C_Received_NotifyBegin final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalDuration;                                     // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x007C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AS_EnableCollision_C_Received_NotifyBegin) == 0x000008, "Wrong alignment on AS_EnableCollision_C_Received_NotifyBegin");
static_assert(sizeof(AS_EnableCollision_C_Received_NotifyBegin) == 0x000098, "Wrong size on AS_EnableCollision_C_Received_NotifyBegin");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, MeshComp) == 0x000000, "Member 'AS_EnableCollision_C_Received_NotifyBegin::MeshComp' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, Animation) == 0x000008, "Member 'AS_EnableCollision_C_Received_NotifyBegin::Animation' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, TotalDuration) == 0x000010, "Member 'AS_EnableCollision_C_Received_NotifyBegin::TotalDuration' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, ReturnValue) == 0x000014, "Member 'AS_EnableCollision_C_Received_NotifyBegin::ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, CallFunc_GetSocketLocation_ReturnValue) == 0x000018, "Member 'AS_EnableCollision_C_Received_NotifyBegin::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'AS_EnableCollision_C_Received_NotifyBegin::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, CallFunc_GetOwner_ReturnValue) == 0x000028, "Member 'AS_EnableCollision_C_Received_NotifyBegin::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, CallFunc_MakeVector_ReturnValue) == 0x000030, "Member 'AS_EnableCollision_C_Received_NotifyBegin::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, CallFunc_GetDisplayName_ReturnValue) == 0x000040, "Member 'AS_EnableCollision_C_Received_NotifyBegin::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, CallFunc_Concat_StrStr_ReturnValue) == 0x000050, "Member 'AS_EnableCollision_C_Received_NotifyBegin::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, CallFunc_SelectFloat_ReturnValue) == 0x000060, "Member 'AS_EnableCollision_C_Received_NotifyBegin::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, CallFunc_BreakVector_X) == 0x000064, "Member 'AS_EnableCollision_C_Received_NotifyBegin::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, CallFunc_BreakVector_Y) == 0x000068, "Member 'AS_EnableCollision_C_Received_NotifyBegin::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, CallFunc_BreakVector_Z) == 0x00006C, "Member 'AS_EnableCollision_C_Received_NotifyBegin::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, CallFunc_MakeVector_ReturnValue_1) == 0x000070, "Member 'AS_EnableCollision_C_Received_NotifyBegin::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, CallFunc_Add_VectorVector_ReturnValue) == 0x00007C, "Member 'AS_EnableCollision_C_Received_NotifyBegin::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyBegin, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000088, "Member 'AS_EnableCollision_C_Received_NotifyBegin::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");

// Function AS_EnableCollision.AS_EnableCollision_C.Received_NotifyEnd
// 0x0040 (0x0040 - 0x0000)
struct AS_EnableCollision_C_Received_NotifyEnd final
{
public:
	class USkeletalMeshComponent*                 MeshComp;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimSequenceBase*                      Animation;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(AS_EnableCollision_C_Received_NotifyEnd) == 0x000008, "Wrong alignment on AS_EnableCollision_C_Received_NotifyEnd");
static_assert(sizeof(AS_EnableCollision_C_Received_NotifyEnd) == 0x000040, "Wrong size on AS_EnableCollision_C_Received_NotifyEnd");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyEnd, MeshComp) == 0x000000, "Member 'AS_EnableCollision_C_Received_NotifyEnd::MeshComp' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyEnd, Animation) == 0x000008, "Member 'AS_EnableCollision_C_Received_NotifyEnd::Animation' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyEnd, ReturnValue) == 0x000010, "Member 'AS_EnableCollision_C_Received_NotifyEnd::ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyEnd, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'AS_EnableCollision_C_Received_NotifyEnd::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyEnd, CallFunc_GetDisplayName_ReturnValue) == 0x000020, "Member 'AS_EnableCollision_C_Received_NotifyEnd::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_Received_NotifyEnd, CallFunc_Concat_StrStr_ReturnValue) == 0x000030, "Member 'AS_EnableCollision_C_Received_NotifyEnd::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function AS_EnableCollision.AS_EnableCollision_C.GetNotifyName
// 0x0010 (0x0010 - 0x0000)
struct AS_EnableCollision_C_GetNotifyName final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
};
static_assert(alignof(AS_EnableCollision_C_GetNotifyName) == 0x000008, "Wrong alignment on AS_EnableCollision_C_GetNotifyName");
static_assert(sizeof(AS_EnableCollision_C_GetNotifyName) == 0x000010, "Wrong size on AS_EnableCollision_C_GetNotifyName");
static_assert(offsetof(AS_EnableCollision_C_GetNotifyName, ReturnValue) == 0x000000, "Member 'AS_EnableCollision_C_GetNotifyName::ReturnValue' has a wrong offset!");

// Function AS_EnableCollision.AS_EnableCollision_C.SetNotifyIdToActor
// 0x0018 (0x0018 - 0x0000)
struct AS_EnableCollision_C_SetNotifyIdToActor final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGPACharacter*                          K2Node_DynamicCast_AsGPACharacter;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(AS_EnableCollision_C_SetNotifyIdToActor) == 0x000008, "Wrong alignment on AS_EnableCollision_C_SetNotifyIdToActor");
static_assert(sizeof(AS_EnableCollision_C_SetNotifyIdToActor) == 0x000018, "Wrong size on AS_EnableCollision_C_SetNotifyIdToActor");
static_assert(offsetof(AS_EnableCollision_C_SetNotifyIdToActor, Actor) == 0x000000, "Member 'AS_EnableCollision_C_SetNotifyIdToActor::Actor' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_SetNotifyIdToActor, K2Node_DynamicCast_AsGPACharacter) == 0x000008, "Member 'AS_EnableCollision_C_SetNotifyIdToActor::K2Node_DynamicCast_AsGPACharacter' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_SetNotifyIdToActor, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'AS_EnableCollision_C_SetNotifyIdToActor::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function AS_EnableCollision.AS_EnableCollision_C.SetTemporarilyActionDetailID
// 0x0030 (0x0030 - 0x0000)
struct AS_EnableCollision_C_SetTemporarilyActionDetailID final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGPACharacter*                          K2Node_DynamicCast_AsGPACharacter;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Temp_name_Variable;                                // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue_1;        // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_27[0x1];                                       // 0x0027(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(AS_EnableCollision_C_SetTemporarilyActionDetailID) == 0x000008, "Wrong alignment on AS_EnableCollision_C_SetTemporarilyActionDetailID");
static_assert(sizeof(AS_EnableCollision_C_SetTemporarilyActionDetailID) == 0x000030, "Wrong size on AS_EnableCollision_C_SetTemporarilyActionDetailID");
static_assert(offsetof(AS_EnableCollision_C_SetTemporarilyActionDetailID, Actor) == 0x000000, "Member 'AS_EnableCollision_C_SetTemporarilyActionDetailID::Actor' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_SetTemporarilyActionDetailID, Temp_bool_Variable) == 0x000008, "Member 'AS_EnableCollision_C_SetTemporarilyActionDetailID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_SetTemporarilyActionDetailID, K2Node_DynamicCast_AsGPACharacter) == 0x000010, "Member 'AS_EnableCollision_C_SetTemporarilyActionDetailID::K2Node_DynamicCast_AsGPACharacter' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_SetTemporarilyActionDetailID, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'AS_EnableCollision_C_SetTemporarilyActionDetailID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_SetTemporarilyActionDetailID, Temp_name_Variable) == 0x00001C, "Member 'AS_EnableCollision_C_SetTemporarilyActionDetailID::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_SetTemporarilyActionDetailID, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000024, "Member 'AS_EnableCollision_C_SetTemporarilyActionDetailID::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_SetTemporarilyActionDetailID, CallFunc_EqualEqual_NameName_ReturnValue_1) == 0x000025, "Member 'AS_EnableCollision_C_SetTemporarilyActionDetailID::CallFunc_EqualEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_SetTemporarilyActionDetailID, CallFunc_BooleanOR_ReturnValue) == 0x000026, "Member 'AS_EnableCollision_C_SetTemporarilyActionDetailID::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(AS_EnableCollision_C_SetTemporarilyActionDetailID, K2Node_Select_Default) == 0x000028, "Member 'AS_EnableCollision_C_SetTemporarilyActionDetailID::K2Node_Select_Default' has a wrong offset!");

}

