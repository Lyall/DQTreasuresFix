#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_PirateShipSea

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_PirateShipSea.BP_PirateShipSea_C.ExecuteUbergraph_BP_PirateShipSea
// 0x00DC (0x00DC - 0x0000)
struct BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_1;        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CalcDegree_Degree;                        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue_2;        // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x0050(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea) == 0x000004, "Wrong alignment on BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea");
static_assert(sizeof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea) == 0x0000DC, "Wrong size on BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, EntryPoint) == 0x000000, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000008, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_BreakVector_X) == 0x000014, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_BreakVector_Y) == 0x000018, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_BreakVector_Z) == 0x00001C, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000024, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000028, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_Multiply_FloatFloat_ReturnValue_1) == 0x000030, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_Multiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_CalcDegree_Degree) == 0x000034, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_CalcDegree_Degree' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_DegSin_ReturnValue) == 0x000038, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_Multiply_FloatFloat_ReturnValue_2) == 0x00003C, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_Multiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_Add_FloatFloat_ReturnValue) == 0x000040, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_MakeVector_ReturnValue) == 0x000044, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x000050, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0000D8, "Member 'BP_PirateShipSea_C_ExecuteUbergraph_BP_PirateShipSea::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");

// Function BP_PirateShipSea.BP_PirateShipSea_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_PirateShipSea_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PirateShipSea_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_PirateShipSea_C_ReceiveTick");
static_assert(sizeof(BP_PirateShipSea_C_ReceiveTick) == 0x000004, "Wrong size on BP_PirateShipSea_C_ReceiveTick");
static_assert(offsetof(BP_PirateShipSea_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_PirateShipSea_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_PirateShipSea.BP_PirateShipSea_C.CalcDegree
// 0x0010 (0x0010 - 0x0000)
struct BP_PirateShipSea_C_CalcDegree final
{
public:
	float                                         AddDegree;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Degree_0;                                          // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Percent_FloatFloat_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_PirateShipSea_C_CalcDegree) == 0x000004, "Wrong alignment on BP_PirateShipSea_C_CalcDegree");
static_assert(sizeof(BP_PirateShipSea_C_CalcDegree) == 0x000010, "Wrong size on BP_PirateShipSea_C_CalcDegree");
static_assert(offsetof(BP_PirateShipSea_C_CalcDegree, AddDegree) == 0x000000, "Member 'BP_PirateShipSea_C_CalcDegree::AddDegree' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_CalcDegree, Degree_0) == 0x000004, "Member 'BP_PirateShipSea_C_CalcDegree::Degree_0' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_CalcDegree, CallFunc_Add_FloatFloat_ReturnValue) == 0x000008, "Member 'BP_PirateShipSea_C_CalcDegree::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_PirateShipSea_C_CalcDegree, CallFunc_Percent_FloatFloat_ReturnValue) == 0x00000C, "Member 'BP_PirateShipSea_C_CalcDegree::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

}

