#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventManager

#include "Basic.hpp"

#include "DarwinGame_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BP_EventManager.BP_EventManager_C.ExecuteUbergraph_BP_EventManager
// 0x01F0 (0x01F0 - 0x0000)
struct BP_EventManager_C_ExecuteUbergraph_BP_EventManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_KindId;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_EventID;                              // 0x0008(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   K2Node_Event_QuestState;                           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTalkEventSystem*                       CallFunc_GetTalkEventSystem_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue_1;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTalkEventSystem*                       CallFunc_GetTalkEventSystem_ReturnValue_1;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EventMonsterIsReady_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelectCancel_ReturnValue;               // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue_2;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_NPC_C*                              K2Node_Event_SendActor;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTalkEventSystem*                       CallFunc_GetTalkEventSystem_ReturnValue_2;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_ItemFirstAdd;                         // 0x0058(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_EventId;                        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   K2Node_CustomEvent_QuestState;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FST_EventData                          CallFunc_GetEventData_EventData;                   // 0x0080(0x0018)(NoDestructor)
	bool                                          CallFunc_GetEventData_ReturnValue;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_EventID_1;                            // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EEventType                                    K2Node_Event_EventType;                            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_QuestID;                              // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   K2Node_Event_QuestState_1;                         // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5[0x3];                                       // 0x00C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EventTalktBranchData               K2Node_Event_TextBranchData;                       // 0x00C8(0x0020)(ConstParm)
	TArray<struct FST_TextGoto>                   K2Node_Event_TextGotoData;                         // 0x00E8(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Sender;                               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsEventCancel;                        // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_EventID_2;                            // 0x0104(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_Event_Sender_1;                             // 0x0110(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_DebugMode;                            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventSender_C*                      K2Node_Event_EventSender;                          // 0x0120(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_LiftId;                               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_StarScarId;                           // 0x012C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0138(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CancelQuestCheck;               // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_isSelectCancel;                 // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_IsSkipEvent;                    // 0x014A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14B[0x1];                                      // 0x014B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x014C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EventCondition                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0158(0x0058)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B1[0x3];                                      // 0x01B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x01B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x01C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager) == 0x000008, "Wrong alignment on BP_EventManager_C_ExecuteUbergraph_BP_EventManager");
static_assert(sizeof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager) == 0x0001F0, "Wrong size on BP_EventManager_C_ExecuteUbergraph_BP_EventManager");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, EntryPoint) == 0x000000, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_KindId) == 0x000004, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_KindId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_EventID) == 0x000008, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_EventID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_QuestState) == 0x000010, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_QuestState' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetInstance_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetTalkEventSystem_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetTalkEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetInstance_ReturnValue_1) == 0x000028, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetTalkEventSystem_ReturnValue_1) == 0x000030, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetTalkEventSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_EventMonsterIsReady_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_EventMonsterIsReady_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_IsSelectCancel_ReturnValue) == 0x000039, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_IsSelectCancel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_bool_True_if_break_was_hit_Variable) == 0x00003A, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Not_PreBool_ReturnValue) == 0x00003B, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetInstance_ReturnValue_2) == 0x000040, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_SendActor) == 0x000048, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_SendActor' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetTalkEventSystem_ReturnValue_2) == 0x000050, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetTalkEventSystem_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_ItemFirstAdd) == 0x000058, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_ItemFirstAdd' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_EventId) == 0x000060, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_EventId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_QuestState) == 0x000068, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_QuestState' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_NameToString_ReturnValue) == 0x000070, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetEventData_EventData) == 0x000080, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetEventData_EventData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetEventData_ReturnValue) == 0x000098, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetEventData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_AddUnique_ReturnValue) == 0x00009C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_EventID_1) == 0x0000A8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_EventID_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_EventType) == 0x0000B8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_EventType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_QuestID) == 0x0000BC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_QuestID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_QuestState_1) == 0x0000C4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_QuestState_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_TextBranchData) == 0x0000C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_TextBranchData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_TextGotoData) == 0x0000E8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_TextGotoData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_Sender) == 0x0000F8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_Sender' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_IsEventCancel) == 0x000100, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_IsEventCancel' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_EventID_2) == 0x000104, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_EventID_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_Sender_1) == 0x000110, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_Sender_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_DebugMode) == 0x000118, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_DebugMode' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_EventSender) == 0x000120, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_EventSender' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_LiftId) == 0x000128, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_LiftId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_Event_StarScarId) == 0x00012C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_Event_StarScarId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000138, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_CancelQuestCheck) == 0x000148, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_CancelQuestCheck' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_isSelectCancel) == 0x000149, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_isSelectCancel' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, K2Node_CustomEvent_IsSkipEvent) == 0x00014A, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::K2Node_CustomEvent_IsSkipEvent' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Get_Item) == 0x00014C, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetDataTableRowFromName_OutRow) == 0x000158, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0001B0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Array_Length_ReturnValue) == 0x0001B4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Conv_NameToString_ReturnValue_1) == 0x0001B8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Concat_StrStr_ReturnValue) == 0x0001C8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0001D8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_NotEqual_NameName_ReturnValue) == 0x0001D9, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, Temp_int_Loop_Counter_Variable) == 0x0001DC, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Less_IntInt_ReturnValue) == 0x0001E0, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_Add_IntInt_ReturnValue) == 0x0001E4, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ExecuteUbergraph_BP_EventManager, CallFunc_BooleanAND_ReturnValue) == 0x0001E8, "Member 'BP_EventManager_C_ExecuteUbergraph_BP_EventManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlayEventImpl
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_PlayEventImpl final
{
public:
	class FName                                   EventID_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   QuestState_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_PlayEventImpl) == 0x000004, "Wrong alignment on BP_EventManager_C_PlayEventImpl");
static_assert(sizeof(BP_EventManager_C_PlayEventImpl) == 0x00000C, "Wrong size on BP_EventManager_C_PlayEventImpl");
static_assert(offsetof(BP_EventManager_C_PlayEventImpl, EventID_0) == 0x000000, "Member 'BP_EventManager_C_PlayEventImpl::EventID_0' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayEventImpl, QuestState_0) == 0x000008, "Member 'BP_EventManager_C_PlayEventImpl::QuestState_0' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlayEventOfItemFirstAdd
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_PlayEventOfItemFirstAdd final
{
public:
	class FName                                   ItemFirstAdd;                                      // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_PlayEventOfItemFirstAdd) == 0x000004, "Wrong alignment on BP_EventManager_C_PlayEventOfItemFirstAdd");
static_assert(sizeof(BP_EventManager_C_PlayEventOfItemFirstAdd) == 0x000008, "Wrong size on BP_EventManager_C_PlayEventOfItemFirstAdd");
static_assert(offsetof(BP_EventManager_C_PlayEventOfItemFirstAdd, ItemFirstAdd) == 0x000000, "Member 'BP_EventManager_C_PlayEventOfItemFirstAdd::ItemFirstAdd' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.PlayEvent
// 0x000C (0x000C - 0x0000)
struct BP_EventManager_C_PlayEvent final
{
public:
	class FName                                   EventID_0;                                         // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   QuestState_0;                                      // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_PlayEvent) == 0x000004, "Wrong alignment on BP_EventManager_C_PlayEvent");
static_assert(sizeof(BP_EventManager_C_PlayEvent) == 0x00000C, "Wrong size on BP_EventManager_C_PlayEvent");
static_assert(offsetof(BP_EventManager_C_PlayEvent, EventID_0) == 0x000000, "Member 'BP_EventManager_C_PlayEvent::EventID_0' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_PlayEvent, QuestState_0) == 0x000008, "Member 'BP_EventManager_C_PlayEvent::QuestState_0' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.UpdateQuestTargetEnemyUI
// 0x0004 (0x0004 - 0x0000)
struct BP_EventManager_C_UpdateQuestTargetEnemyUI final
{
public:
	int32                                         KindId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_UpdateQuestTargetEnemyUI) == 0x000004, "Wrong alignment on BP_EventManager_C_UpdateQuestTargetEnemyUI");
static_assert(sizeof(BP_EventManager_C_UpdateQuestTargetEnemyUI) == 0x000004, "Wrong size on BP_EventManager_C_UpdateQuestTargetEnemyUI");
static_assert(offsetof(BP_EventManager_C_UpdateQuestTargetEnemyUI, KindId) == 0x000000, "Member 'BP_EventManager_C_UpdateQuestTargetEnemyUI::KindId' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetEventSendNpc
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_SetEventSendNpc final
{
public:
	class ABP_NPC_C*                              SendActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetEventSendNpc) == 0x000008, "Wrong alignment on BP_EventManager_C_SetEventSendNpc");
static_assert(sizeof(BP_EventManager_C_SetEventSendNpc) == 0x000008, "Wrong size on BP_EventManager_C_SetEventSendNpc");
static_assert(offsetof(BP_EventManager_C_SetEventSendNpc, SendActor) == 0x000000, "Member 'BP_EventManager_C_SetEventSendNpc::SendActor' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CallPlayEvent
// 0x0058 (0x0058 - 0x0000)
struct BP_EventManager_C_CallPlayEvent final
{
public:
	class FString                                 EventID_0;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EEventType                                    EventType;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   QuestID_0;                                         // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   QuestState_0;                                      // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EventTalktBranchData               TextBranchData;                                    // 0x0020(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<struct FST_TextGoto>                   TextGotoData;                                      // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 Sender_0;                                          // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_CallPlayEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_CallPlayEvent");
static_assert(sizeof(BP_EventManager_C_CallPlayEvent) == 0x000058, "Wrong size on BP_EventManager_C_CallPlayEvent");
static_assert(offsetof(BP_EventManager_C_CallPlayEvent, EventID_0) == 0x000000, "Member 'BP_EventManager_C_CallPlayEvent::EventID_0' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CallPlayEvent, EventType) == 0x000010, "Member 'BP_EventManager_C_CallPlayEvent::EventType' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CallPlayEvent, QuestID_0) == 0x000014, "Member 'BP_EventManager_C_CallPlayEvent::QuestID_0' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CallPlayEvent, QuestState_0) == 0x00001C, "Member 'BP_EventManager_C_CallPlayEvent::QuestState_0' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CallPlayEvent, TextBranchData) == 0x000020, "Member 'BP_EventManager_C_CallPlayEvent::TextBranchData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CallPlayEvent, TextGotoData) == 0x000040, "Member 'BP_EventManager_C_CallPlayEvent::TextGotoData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CallPlayEvent, Sender_0) == 0x000050, "Member 'BP_EventManager_C_CallPlayEvent::Sender_0' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EndPlayEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_EndPlayEvent final
{
public:
	bool                                          IsEventCancel;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_EndPlayEvent) == 0x000001, "Wrong alignment on BP_EventManager_C_EndPlayEvent");
static_assert(sizeof(BP_EventManager_C_EndPlayEvent) == 0x000001, "Wrong size on BP_EventManager_C_EndPlayEvent");
static_assert(offsetof(BP_EventManager_C_EndPlayEvent, IsEventCancel) == 0x000000, "Member 'BP_EventManager_C_EndPlayEvent::IsEventCancel' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SendEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_SendEvent final
{
public:
	class FName                                   EventID_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        Sender_0;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugMode;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SendEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_SendEvent");
static_assert(sizeof(BP_EventManager_C_SendEvent) == 0x000018, "Wrong size on BP_EventManager_C_SendEvent");
static_assert(offsetof(BP_EventManager_C_SendEvent, EventID_0) == 0x000000, "Member 'BP_EventManager_C_SendEvent::EventID_0' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SendEvent, Sender_0) == 0x000008, "Member 'BP_EventManager_C_SendEvent::Sender_0' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SendEvent, DebugMode) == 0x000010, "Member 'BP_EventManager_C_SendEvent::DebugMode' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SendLiftEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_SendLiftEvent final
{
public:
	class UBP_EventSender_C*                      EventSender_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LiftId;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StarScarId;                                        // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SendLiftEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_SendLiftEvent");
static_assert(sizeof(BP_EventManager_C_SendLiftEvent) == 0x000018, "Wrong size on BP_EventManager_C_SendLiftEvent");
static_assert(offsetof(BP_EventManager_C_SendLiftEvent, EventSender_0) == 0x000000, "Member 'BP_EventManager_C_SendLiftEvent::EventSender_0' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SendLiftEvent, LiftId) == 0x000008, "Member 'BP_EventManager_C_SendLiftEvent::LiftId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SendLiftEvent, StarScarId) == 0x00000C, "Member 'BP_EventManager_C_SendLiftEvent::StarScarId' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EndEvent
// 0x0003 (0x0003 - 0x0000)
struct BP_EventManager_C_EndEvent final
{
public:
	bool                                          CancelQuestCheck;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSelectCancel;                                    // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSkipEvent;                                       // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_EndEvent) == 0x000001, "Wrong alignment on BP_EventManager_C_EndEvent");
static_assert(sizeof(BP_EventManager_C_EndEvent) == 0x000003, "Wrong size on BP_EventManager_C_EndEvent");
static_assert(offsetof(BP_EventManager_C_EndEvent, CancelQuestCheck) == 0x000000, "Member 'BP_EventManager_C_EndEvent::CancelQuestCheck' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndEvent, IsSelectCancel) == 0x000001, "Member 'BP_EventManager_C_EndEvent::IsSelectCancel' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EndEvent, IsSkipEvent) == 0x000002, "Member 'BP_EventManager_C_EndEvent::IsSkipEvent' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EventFin
// 0x0090 (0x0090 - 0x0000)
struct BP_EventManager_C_EventFin final
{
public:
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetResistedEventIDLast_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_EventTrigger_C>    K2Node_DynamicCast_AsBI_Event_Trigger;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBI_EventTrigger_C>    K2Node_DynamicCast_AsBI_Event_Trigger_1;           // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue_1;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTalkEventSystem*                       CallFunc_GetTalkEventSystem_ReturnValue;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTalkEventSystem*                       CallFunc_GetTalkEventSystem_ReturnValue_1;         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSelectCancel_ReturnValue;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSelectCancel_ReturnValue_1;             // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue_2;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTalkEventSystem*                       CallFunc_GetTalkEventSystem_ReturnValue_2;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_EventFin) == 0x000008, "Wrong alignment on BP_EventManager_C_EventFin");
static_assert(sizeof(BP_EventManager_C_EventFin) == 0x000090, "Wrong size on BP_EventManager_C_EventFin");
static_assert(offsetof(BP_EventManager_C_EventFin, CallFunc_Conv_StringToName_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_EventFin::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, CallFunc_GetResistedEventIDLast_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_EventFin::CallFunc_GetResistedEventIDLast_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_EventFin::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, CallFunc_Array_RemoveItem_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_EventFin::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, K2Node_DynamicCast_AsBI_Event_Trigger) == 0x000028, "Member 'BP_EventManager_C_EventFin::K2Node_DynamicCast_AsBI_Event_Trigger' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BP_EventManager_C_EventFin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, K2Node_DynamicCast_AsBI_Event_Trigger_1) == 0x000040, "Member 'BP_EventManager_C_EventFin::K2Node_DynamicCast_AsBI_Event_Trigger_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'BP_EventManager_C_EventFin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'BP_EventManager_C_EventFin::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, CallFunc_IsValid_ReturnValue_1) == 0x000052, "Member 'BP_EventManager_C_EventFin::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, CallFunc_GetInstance_ReturnValue) == 0x000058, "Member 'BP_EventManager_C_EventFin::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, CallFunc_GetInstance_ReturnValue_1) == 0x000060, "Member 'BP_EventManager_C_EventFin::CallFunc_GetInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, CallFunc_GetTalkEventSystem_ReturnValue) == 0x000068, "Member 'BP_EventManager_C_EventFin::CallFunc_GetTalkEventSystem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, CallFunc_GetTalkEventSystem_ReturnValue_1) == 0x000070, "Member 'BP_EventManager_C_EventFin::CallFunc_GetTalkEventSystem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, CallFunc_IsSelectCancel_ReturnValue) == 0x000078, "Member 'BP_EventManager_C_EventFin::CallFunc_IsSelectCancel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, CallFunc_IsSelectCancel_ReturnValue_1) == 0x000079, "Member 'BP_EventManager_C_EventFin::CallFunc_IsSelectCancel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, CallFunc_GetInstance_ReturnValue_2) == 0x000080, "Member 'BP_EventManager_C_EventFin::CallFunc_GetInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventFin, CallFunc_GetTalkEventSystem_ReturnValue_2) == 0x000088, "Member 'BP_EventManager_C_EventFin::CallFunc_GetTalkEventSystem_ReturnValue_2' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.Init
// 0x0030 (0x0030 - 0x0000)
struct BP_EventManager_C_Init final
{
public:
	class UBP_EventExecter_C*                     BP_EventExector;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 DefaultFastTravel;                                 // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABPC_Darwin_C*                          K2Node_DynamicCast_AsBPC_Darwin;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_Init) == 0x000008, "Wrong alignment on BP_EventManager_C_Init");
static_assert(sizeof(BP_EventManager_C_Init) == 0x000030, "Wrong size on BP_EventManager_C_Init");
static_assert(offsetof(BP_EventManager_C_Init, BP_EventExector) == 0x000000, "Member 'BP_EventManager_C_Init::BP_EventExector' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Init, DefaultFastTravel) == 0x000008, "Member 'BP_EventManager_C_Init::DefaultFastTravel' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Init, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_Init::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Init, K2Node_DynamicCast_AsBPC_Darwin) == 0x000020, "Member 'BP_EventManager_C_Init::K2Node_DynamicCast_AsBPC_Darwin' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_Init, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_EventManager_C_Init::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ClearEvent
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_ClearEvent final
{
public:
	TArray<class FName>                           ClearFlagArray;                                    // 0x0000(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_ClearEvent) == 0x000008, "Wrong alignment on BP_EventManager_C_ClearEvent");
static_assert(sizeof(BP_EventManager_C_ClearEvent) == 0x000010, "Wrong size on BP_EventManager_C_ClearEvent");
static_assert(offsetof(BP_EventManager_C_ClearEvent, ClearFlagArray) == 0x000000, "Member 'BP_EventManager_C_ClearEvent::ClearFlagArray' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EventInput
// 0x0198 (0x0198 - 0x0000)
struct BP_EventManager_C_EventInput final
{
public:
	float                                         DelataTime;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GamePaused;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyInput                              KeyInput;                                          // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKeyInput                              OutKeyInput;                                       // 0x0018(0x0010)(Parm, OutParm)
	struct FEventReply                            Reply;                                             // 0x0028(0x00B8)(Parm, OutParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x00E0(0x00B8)()
};
static_assert(alignof(BP_EventManager_C_EventInput) == 0x000008, "Wrong alignment on BP_EventManager_C_EventInput");
static_assert(sizeof(BP_EventManager_C_EventInput) == 0x000198, "Wrong size on BP_EventManager_C_EventInput");
static_assert(offsetof(BP_EventManager_C_EventInput, DelataTime) == 0x000000, "Member 'BP_EventManager_C_EventInput::DelataTime' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventInput, GamePaused) == 0x000004, "Member 'BP_EventManager_C_EventInput::GamePaused' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventInput, KeyInput) == 0x000008, "Member 'BP_EventManager_C_EventInput::KeyInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventInput, OutKeyInput) == 0x000018, "Member 'BP_EventManager_C_EventInput::OutKeyInput' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventInput, Reply) == 0x000028, "Member 'BP_EventManager_C_EventInput::Reply' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventInput, CallFunc_Handled_ReturnValue) == 0x0000E0, "Member 'BP_EventManager_C_EventInput::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EventDisableInput
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_EventDisableInput final
{
public:
	TDelegate<void(float DeltaTime, bool bGamePaused, const struct FKeyInput& InKeyInput, struct FKeyInput* OutKeyInput, struct FEventReply* Output)> K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UAppInputComponent*                     CallFunc_GetAppInputComponent_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetInputPriority_EVENT_ReturnValue;       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_EventDisableInput) == 0x000008, "Wrong alignment on BP_EventManager_C_EventDisableInput");
static_assert(sizeof(BP_EventManager_C_EventDisableInput) == 0x000020, "Wrong size on BP_EventManager_C_EventDisableInput");
static_assert(offsetof(BP_EventManager_C_EventDisableInput, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_EventManager_C_EventDisableInput::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventDisableInput, CallFunc_GetAppInputComponent_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_EventDisableInput::CallFunc_GetAppInputComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_EventDisableInput, CallFunc_GetInputPriority_EVENT_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_EventDisableInput::CallFunc_GetInputPriority_EVENT_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.EventEnableInput
// 0x0008 (0x0008 - 0x0000)
struct BP_EventManager_C_EventEnableInput final
{
public:
	class UAppInputComponent*                     CallFunc_GetAppInputComponent_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_EventEnableInput) == 0x000008, "Wrong alignment on BP_EventManager_C_EventEnableInput");
static_assert(sizeof(BP_EventManager_C_EventEnableInput) == 0x000008, "Wrong size on BP_EventManager_C_EventEnableInput");
static_assert(offsetof(BP_EventManager_C_EventEnableInput, CallFunc_GetAppInputComponent_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_EventEnableInput::CallFunc_GetAppInputComponent_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ChangeInput
// 0x0001 (0x0001 - 0x0000)
struct BP_EventManager_C_ChangeInput final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ChangeInput) == 0x000001, "Wrong alignment on BP_EventManager_C_ChangeInput");
static_assert(sizeof(BP_EventManager_C_ChangeInput) == 0x000001, "Wrong size on BP_EventManager_C_ChangeInput");
static_assert(offsetof(BP_EventManager_C_ChangeInput, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_EventManager_C_ChangeInput::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GrantEXP
// 0x0020 (0x0020 - 0x0000)
struct BP_EventManager_C_GrantEXP final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_PlayerState_C>     K2Node_DynamicCast_AsBI_Player_State;              // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GrantEXP) == 0x000008, "Wrong alignment on BP_EventManager_C_GrantEXP");
static_assert(sizeof(BP_EventManager_C_GrantEXP) == 0x000020, "Wrong size on BP_EventManager_C_GrantEXP");
static_assert(offsetof(BP_EventManager_C_GrantEXP, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_GrantEXP::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GrantEXP, K2Node_DynamicCast_AsBI_Player_State) == 0x000008, "Member 'BP_EventManager_C_GrantEXP::K2Node_DynamicCast_AsBI_Player_State' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GrantEXP, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_EventManager_C_GrantEXP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GrantEXP, CallFunc_Greater_IntInt_ReturnValue) == 0x000019, "Member 'BP_EventManager_C_GrantEXP::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetEventFlag
// 0x0048 (0x0048 - 0x0000)
struct BP_EventManager_C_SetEventFlag final
{
public:
	class UGameDataFlag*                          GameDataEventFlag;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameDataFlag*                          CallFunc_GetGameDataFlag_GameDataFlag;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_1;                         // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetEventFlag) == 0x000008, "Wrong alignment on BP_EventManager_C_SetEventFlag");
static_assert(sizeof(BP_EventManager_C_SetEventFlag) == 0x000048, "Wrong size on BP_EventManager_C_SetEventFlag");
static_assert(offsetof(BP_EventManager_C_SetEventFlag, GameDataEventFlag) == 0x000000, "Member 'BP_EventManager_C_SetEventFlag::GameDataEventFlag' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventFlag, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_EventManager_C_SetEventFlag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventFlag, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_EventManager_C_SetEventFlag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventFlag, Temp_int_Array_Index_Variable) == 0x000010, "Member 'BP_EventManager_C_SetEventFlag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventFlag, Temp_int_Array_Index_Variable_1) == 0x000014, "Member 'BP_EventManager_C_SetEventFlag::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventFlag, Temp_int_Loop_Counter_Variable_1) == 0x000018, "Member 'BP_EventManager_C_SetEventFlag::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventFlag, CallFunc_Add_IntInt_ReturnValue_1) == 0x00001C, "Member 'BP_EventManager_C_SetEventFlag::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventFlag, CallFunc_Array_Get_Item) == 0x000020, "Member 'BP_EventManager_C_SetEventFlag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventFlag, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_SetEventFlag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventFlag, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'BP_EventManager_C_SetEventFlag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventFlag, CallFunc_GetGameDataFlag_GameDataFlag) == 0x000030, "Member 'BP_EventManager_C_SetEventFlag::CallFunc_GetGameDataFlag_GameDataFlag' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventFlag, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'BP_EventManager_C_SetEventFlag::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventFlag, CallFunc_Array_Get_Item_1) == 0x00003C, "Member 'BP_EventManager_C_SetEventFlag::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventFlag, CallFunc_Less_IntInt_ReturnValue_1) == 0x000044, "Member 'BP_EventManager_C_SetEventFlag::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetEventClearData
// 0x0210 (0x0210 - 0x0000)
struct BP_EventManager_C_SetEventClearData final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_EventClearTableInfo                CallFunc_GetEventClearData_EventClearData;         // 0x0008(0x0200)()
	bool                                          CallFunc_GetEventClearData_ReturnValue;            // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetEventClearData) == 0x000008, "Wrong alignment on BP_EventManager_C_SetEventClearData");
static_assert(sizeof(BP_EventManager_C_SetEventClearData) == 0x000210, "Wrong size on BP_EventManager_C_SetEventClearData");
static_assert(offsetof(BP_EventManager_C_SetEventClearData, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'BP_EventManager_C_SetEventClearData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventClearData, CallFunc_Array_AddUnique_ReturnValue) == 0x000004, "Member 'BP_EventManager_C_SetEventClearData::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventClearData, CallFunc_GetEventClearData_EventClearData) == 0x000008, "Member 'BP_EventManager_C_SetEventClearData::CallFunc_GetEventClearData_EventClearData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventClearData, CallFunc_GetEventClearData_ReturnValue) == 0x000208, "Member 'BP_EventManager_C_SetEventClearData::CallFunc_GetEventClearData_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetEventData
// 0x0038 (0x0038 - 0x0000)
struct BP_EventManager_C_SetEventData final
{
public:
	struct FST_EventData                          EventData;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UQuestManager*                          CallFunc_GetInstance_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   CallFunc_GetQuestState_ReturnValue;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetEventData) == 0x000008, "Wrong alignment on BP_EventManager_C_SetEventData");
static_assert(sizeof(BP_EventManager_C_SetEventData) == 0x000038, "Wrong size on BP_EventManager_C_SetEventData");
static_assert(offsetof(BP_EventManager_C_SetEventData, EventData) == 0x000000, "Member 'BP_EventManager_C_SetEventData::EventData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventData, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'BP_EventManager_C_SetEventData::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventData, CallFunc_GetInstance_ReturnValue) == 0x000028, "Member 'BP_EventManager_C_SetEventData::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetEventData, CallFunc_GetQuestState_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_SetEventData::CallFunc_GetQuestState_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.CheckEventData
// 0x0040 (0x0040 - 0x0000)
struct BP_EventManager_C_CheckEventData final
{
public:
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AdjustIEQuestTalkID_NewTalkId;            // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FST_EventData                          CallFunc_GetEventData_EventData;                   // 0x0018(0x0018)(NoDestructor)
	bool                                          CallFunc_GetEventData_ReturnValue;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetReleaseStigmataNum_ReturnValue;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_CheckEventData) == 0x000008, "Wrong alignment on BP_EventManager_C_CheckEventData");
static_assert(sizeof(BP_EventManager_C_CheckEventData) == 0x000040, "Wrong size on BP_EventManager_C_CheckEventData");
static_assert(offsetof(BP_EventManager_C_CheckEventData, CallFunc_NotEqual_NameName_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_CheckEventData::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventData, CallFunc_AdjustIEQuestTalkID_NewTalkId) == 0x000008, "Member 'BP_EventManager_C_CheckEventData::CallFunc_AdjustIEQuestTalkID_NewTalkId' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventData, CallFunc_GetEventData_EventData) == 0x000018, "Member 'BP_EventManager_C_CheckEventData::CallFunc_GetEventData_EventData' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventData, CallFunc_GetEventData_ReturnValue) == 0x000030, "Member 'BP_EventManager_C_CheckEventData::CallFunc_GetEventData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventData, CallFunc_GetReleaseStigmataNum_ReturnValue) == 0x000034, "Member 'BP_EventManager_C_CheckEventData::CallFunc_GetReleaseStigmataNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventData, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000038, "Member 'BP_EventManager_C_CheckEventData::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_CheckEventData, K2Node_SwitchEnum_CmpSuccess) == 0x000039, "Member 'BP_EventManager_C_CheckEventData::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.AdjustIEMessageTime
// 0x0028 (0x0028 - 0x0000)
struct BP_EventManager_C_AdjustIEMessageTime final
{
public:
	class UBP_WorldTimeManager_C*                 CallFunc_GetWorldTimeManager_WorldTimeManager;     // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameTime_Hour;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameTime_Minute;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_adjustIEMessageId_Time_NextID;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_adjustIEMessageId_Time_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_AdjustIEMessageTime) == 0x000008, "Wrong alignment on BP_EventManager_C_AdjustIEMessageTime");
static_assert(sizeof(BP_EventManager_C_AdjustIEMessageTime) == 0x000028, "Wrong size on BP_EventManager_C_AdjustIEMessageTime");
static_assert(offsetof(BP_EventManager_C_AdjustIEMessageTime, CallFunc_GetWorldTimeManager_WorldTimeManager) == 0x000000, "Member 'BP_EventManager_C_AdjustIEMessageTime::CallFunc_GetWorldTimeManager_WorldTimeManager' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AdjustIEMessageTime, CallFunc_GetGameTime_Hour) == 0x000008, "Member 'BP_EventManager_C_AdjustIEMessageTime::CallFunc_GetGameTime_Hour' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AdjustIEMessageTime, CallFunc_GetGameTime_Minute) == 0x00000C, "Member 'BP_EventManager_C_AdjustIEMessageTime::CallFunc_GetGameTime_Minute' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AdjustIEMessageTime, CallFunc_adjustIEMessageId_Time_NextID) == 0x000010, "Member 'BP_EventManager_C_AdjustIEMessageTime::CallFunc_adjustIEMessageId_Time_NextID' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_AdjustIEMessageTime, CallFunc_adjustIEMessageId_Time_ReturnValue) == 0x000020, "Member 'BP_EventManager_C_AdjustIEMessageTime::CallFunc_adjustIEMessageId_Time_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetSender
// 0x0010 (0x0010 - 0x0000)
struct BP_EventManager_C_SetSender final
{
public:
	class UEventSender*                           Sender_0;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_SetSender) == 0x000008, "Wrong alignment on BP_EventManager_C_SetSender");
static_assert(sizeof(BP_EventManager_C_SetSender) == 0x000010, "Wrong size on BP_EventManager_C_SetSender");
static_assert(offsetof(BP_EventManager_C_SetSender, Sender_0) == 0x000000, "Member 'BP_EventManager_C_SetSender::Sender_0' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetSender, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_SetSender::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ChangeStateEventStart
// 0x0060 (0x0060 - 0x0000)
struct BP_EventManager_C_ChangeStateEventStart final
{
public:
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface;          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface_1;        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetEventActor_ReturnValue;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIManager*                             CallFunc_GetInstance_ReturnValue_1;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ChangeStateEventStart) == 0x000008, "Wrong alignment on BP_EventManager_C_ChangeStateEventStart");
static_assert(sizeof(BP_EventManager_C_ChangeStateEventStart) == 0x000060, "Wrong size on BP_EventManager_C_ChangeStateEventStart");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventStart, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_ChangeStateEventStart::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventStart, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000008, "Member 'BP_EventManager_C_ChangeStateEventStart::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventStart, K2Node_DynamicCast_AsCharacter_Interface) == 0x000010, "Member 'BP_EventManager_C_ChangeStateEventStart::K2Node_DynamicCast_AsCharacter_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventStart, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EventManager_C_ChangeStateEventStart::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventStart, K2Node_DynamicCast_AsCharacter_Interface_1) == 0x000028, "Member 'BP_EventManager_C_ChangeStateEventStart::K2Node_DynamicCast_AsCharacter_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventStart, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_EventManager_C_ChangeStateEventStart::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventStart, CallFunc_GetEventActor_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_ChangeStateEventStart::CallFunc_GetEventActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventStart, CallFunc_GetInstance_ReturnValue) == 0x000048, "Member 'BP_EventManager_C_ChangeStateEventStart::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventStart, CallFunc_GetInstance_ReturnValue_1) == 0x000050, "Member 'BP_EventManager_C_ChangeStateEventStart::CallFunc_GetInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventStart, K2Node_SwitchEnum_CmpSuccess) == 0x000058, "Member 'BP_EventManager_C_ChangeStateEventStart::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.ChangeStateEventEnd
// 0x0058 (0x0058 - 0x0000)
struct BP_EventManager_C_ChangeStateEventEnd final
{
public:
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface;          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface_1;        // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIManager*                             CallFunc_GetInstance_ReturnValue_1;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_ChangeStateEventEnd) == 0x000008, "Wrong alignment on BP_EventManager_C_ChangeStateEventEnd");
static_assert(sizeof(BP_EventManager_C_ChangeStateEventEnd) == 0x000058, "Wrong size on BP_EventManager_C_ChangeStateEventEnd");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventEnd, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000000, "Member 'BP_EventManager_C_ChangeStateEventEnd::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventEnd, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000008, "Member 'BP_EventManager_C_ChangeStateEventEnd::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventEnd, K2Node_DynamicCast_AsCharacter_Interface) == 0x000010, "Member 'BP_EventManager_C_ChangeStateEventEnd::K2Node_DynamicCast_AsCharacter_Interface' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventEnd, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_EventManager_C_ChangeStateEventEnd::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventEnd, K2Node_DynamicCast_AsCharacter_Interface_1) == 0x000028, "Member 'BP_EventManager_C_ChangeStateEventEnd::K2Node_DynamicCast_AsCharacter_Interface_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventEnd, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'BP_EventManager_C_ChangeStateEventEnd::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventEnd, CallFunc_GetInstance_ReturnValue) == 0x000040, "Member 'BP_EventManager_C_ChangeStateEventEnd::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventEnd, CallFunc_GetInstance_ReturnValue_1) == 0x000048, "Member 'BP_EventManager_C_ChangeStateEventEnd::CallFunc_GetInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_ChangeStateEventEnd, K2Node_SwitchEnum_CmpSuccess) == 0x000050, "Member 'BP_EventManager_C_ChangeStateEventEnd::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.IsPlayingEvent
// 0x0003 (0x0003 - 0x0000)
struct BP_EventManager_C_IsPlayingEvent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          ret;                                               // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_IsPlayingEvent) == 0x000001, "Wrong alignment on BP_EventManager_C_IsPlayingEvent");
static_assert(sizeof(BP_EventManager_C_IsPlayingEvent) == 0x000003, "Wrong size on BP_EventManager_C_IsPlayingEvent");
static_assert(offsetof(BP_EventManager_C_IsPlayingEvent, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_IsPlayingEvent::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayingEvent, ret) == 0x000001, "Member 'BP_EventManager_C_IsPlayingEvent::ret' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_IsPlayingEvent, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'BP_EventManager_C_IsPlayingEvent::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.GetEventActor
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_GetEventActor final
{
public:
	class AActor*                                 ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventManager_C_GetEventActor) == 0x000008, "Wrong alignment on BP_EventManager_C_GetEventActor");
static_assert(sizeof(BP_EventManager_C_GetEventActor) == 0x000018, "Wrong size on BP_EventManager_C_GetEventActor");
static_assert(offsetof(BP_EventManager_C_GetEventActor, ReturnValue) == 0x000000, "Member 'BP_EventManager_C_GetEventActor::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetEventActor, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_GetEventActor::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_GetEventActor, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_GetEventActor::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_EventManager.BP_EventManager_C.SetSpawnEnemy
// 0x0018 (0x0018 - 0x0000)
struct BP_EventManager_C_SetSpawnEnemy final
{
public:
	bool                                          IsSpawn;                                           // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFieldManager*                          CallFunc_GetInstance_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEnemySpawnManager*                     CallFunc_GetEnemySpawnManager_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventManager_C_SetSpawnEnemy) == 0x000008, "Wrong alignment on BP_EventManager_C_SetSpawnEnemy");
static_assert(sizeof(BP_EventManager_C_SetSpawnEnemy) == 0x000018, "Wrong size on BP_EventManager_C_SetSpawnEnemy");
static_assert(offsetof(BP_EventManager_C_SetSpawnEnemy, IsSpawn) == 0x000000, "Member 'BP_EventManager_C_SetSpawnEnemy::IsSpawn' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetSpawnEnemy, CallFunc_GetInstance_ReturnValue) == 0x000008, "Member 'BP_EventManager_C_SetSpawnEnemy::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventManager_C_SetSpawnEnemy, CallFunc_GetEnemySpawnManager_ReturnValue) == 0x000010, "Member 'BP_EventManager_C_SetSpawnEnemy::CallFunc_GetEnemySpawnManager_ReturnValue' has a wrong offset!");

}

