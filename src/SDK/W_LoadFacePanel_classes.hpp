#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_LoadFacePanel

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_LoadFacePanel.W_LoadFacePanel_C
// 0x0030 (0x0578 - 0x0548)
class UW_LoadFacePanel_C final : public UUILoadFacePanel
{
public:
	class UWidgetAnimation*                       Monster;                                           // 0x0548(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Character;                                         // 0x0550(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Col_1;                                             // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Col_2;                                             // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Col_3;                                             // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Face_Icon;                                         // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_LoadFacePanel_C">();
	}
	static class UW_LoadFacePanel_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_LoadFacePanel_C>();
	}
};
static_assert(alignof(UW_LoadFacePanel_C) == 0x000008, "Wrong alignment on UW_LoadFacePanel_C");
static_assert(sizeof(UW_LoadFacePanel_C) == 0x000578, "Wrong size on UW_LoadFacePanel_C");
static_assert(offsetof(UW_LoadFacePanel_C, Monster) == 0x000548, "Member 'UW_LoadFacePanel_C::Monster' has a wrong offset!");
static_assert(offsetof(UW_LoadFacePanel_C, Character) == 0x000550, "Member 'UW_LoadFacePanel_C::Character' has a wrong offset!");
static_assert(offsetof(UW_LoadFacePanel_C, Col_1) == 0x000558, "Member 'UW_LoadFacePanel_C::Col_1' has a wrong offset!");
static_assert(offsetof(UW_LoadFacePanel_C, Col_2) == 0x000560, "Member 'UW_LoadFacePanel_C::Col_2' has a wrong offset!");
static_assert(offsetof(UW_LoadFacePanel_C, Col_3) == 0x000568, "Member 'UW_LoadFacePanel_C::Col_3' has a wrong offset!");
static_assert(offsetof(UW_LoadFacePanel_C, Face_Icon) == 0x000570, "Member 'UW_LoadFacePanel_C::Face_Icon' has a wrong offset!");

}

