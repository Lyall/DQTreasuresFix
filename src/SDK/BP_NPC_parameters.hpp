#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_NPC

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DarwinGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_NPC.BP_NPC_C.ExecuteUbergraph_BP_NPC
// 0x0960 (0x0960 - 0x0000)
struct BP_NPC_C_ExecuteUbergraph_BP_NPC final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpenFukidashi_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayEvent_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFukidashiEnum                                CallFunc_GetOpenFukidashiType_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Get_Fukidashi_Text_ReturnValue;           // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetNPCFukisahiOffset_ReturnValue;         // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsOpenNetworkTravelerFukidashi_ReturnValue; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSocketName_ReturnValue;                // 0x003C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpenNewHubReception_ReturnValue;        // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpenNewDispatch_ReturnValue;            // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Get_Fukidashi_Text_ReturnValue_1;         // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckEmotionEffectTag_IsemotionEffect;    // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEmotionEffectID                              CallFunc_CheckEmotionEffectTag_EmotionEffectID;    // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EStampIconType                                CallFunc_CheckFukidashiStamp_StampType;            // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFukidashiStamp_ReturnValue;          // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpenLocalizeStamp_ReturnValue;          // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetNPCFukisahiOffset_ReturnValue_1;       // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetNPCListID_ReturnValue;                 // 0x006C(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtomComponent*                         CallFunc_PlayFukidashiVoice_ReturnValue;           // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetNPCListID_ReturnValue_1;               // 0x0090(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckFlagDefinition_ReturnValue;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAtomComponent*                         CallFunc_PlayFukidashiVoice_ReturnValue_1;         // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsEventCancel;                        // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_ObjectName;                     // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_SocketName;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   CallFunc_Map_Find_Value;                           // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UChildActorComponent*>           CallFunc_Map_Values_Values;                        // 0x00E0(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_Fukidashi_C*                    CallFunc_GetWidgetFromClass_OutWidget;             // 0x00F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsTalkNPC_ReturnValue;                    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsTalkNPC_ReturnValue_1;                  // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAfterSearchEventStruct                K2Node_MakeStruct_AfterSearchEventStruct;          // 0x0110(0x0010)(NoDestructor)
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface;          // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EEmotionEffectID                              K2Node_CustomEvent_EmoteEffectID;                  // 0x0131(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue_1;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayEvent_ReturnValue_1;                // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EStampIconType                                K2Node_CustomEvent_StampType;                      // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x6];                                      // 0x014A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_6;  // 0x0150(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_6;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_6;            // 0x0160(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_6;       // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_2;           // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_2;          // 0x0170(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class ANPCBase*                               K2Node_DynamicCast_AsNPCBase;                      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_5;  // 0x0208(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_5;           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_5;            // 0x0218(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_5;       // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0224(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_225[0x3];                                      // 0x0225(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue_2;                // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayEvent_ReturnValue_2;                // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_232[0x2];                                      // 0x0232(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidNPCData_ReturnValue;               // 0x023A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23B[0x1];                                      // 0x023B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_242[0x6];                                      // 0x0242(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Sign_IconQuest_C*                    CallFunc_GetFieldIconQuest_Result;                 // 0x0248(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IconVisibility;                       // 0x0252(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_253[0x1];                                      // 0x0253(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetUnusedWidgetFromClass_OutIndex;        // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_Fukidashi_C*                    CallFunc_GetUnusedWidgetFromClass_OutWidget;       // 0x0258(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsVisible_ReturnValue_1;                  // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EObjectEffectionEnum                          K2Node_Event_Type;                                 // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_263[0x5];                                      // 0x0263(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_Event_Instigator;                           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENPCAiType                                    CallFunc_GetNPCAiType_ReturnValue;                 // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_271[0x7];                                      // 0x0271(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IObjectCommunicationInterface> K2Node_DynamicCast_AsObject_Communication_Interface; // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFukidashiEnum                                K2Node_Event_FukidashiType;                        // 0x028B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_CharacterName;                        // 0x0290(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_FukidashiText;                        // 0x02A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_VisibleIcon;                          // 0x02B0(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_AutoClose;                            // 0x02B1(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B2[0x2];                                      // 0x02B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_TalkeID;                              // 0x02B4(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_ShapeFukidashiText_ReturnValue;           // 0x02C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckSoundTag_IsSound;                    // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAtomCueSheetCategory                         CallFunc_CheckSoundTag_SoundType;                  // 0x02D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D2[0x2];                                      // 0x02D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_CheckSoundTag_SoundNo;                    // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENPCAiType                                    CallFunc_GetNPCAiType_ReturnValue_1;               // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x02DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2DB[0x5];                                      // 0x02DB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventSender_C*                      K2Node_Event_EventSender;                          // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_LiftId;                               // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_StarScarId;                           // 0x02EC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_C*                              K2Node_Event_SendActor;                            // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasQuest_ReturnValue;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidNPCData_ReturnValue_1;             // 0x0301(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_302[0x2];                                      // 0x0302(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_EventID_1;                            // 0x0304(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UActorComponent*                        K2Node_Event_Sender_1;                             // 0x0310(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_DebugMode;                            // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpenFukidashi_ReturnValue_1;            // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsQuestClearAll_ReturnValue;              // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_PlayQuestEvent_ReturnValue;               // 0x031B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_4;  // 0x0320(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_4;           // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_4;            // 0x0330(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_4;       // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_33D[0x3];                                      // 0x033D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0340(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_3;  // 0x03C8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_3;           // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_3;            // 0x03D8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_3;       // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorIsPlayer_ReturnValue;                // 0x03E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ActorIsPlayer_ReturnValue_1;              // 0x03E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidNPCData_ReturnValue_2;             // 0x03E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x03E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidNPCData_ReturnValue_3;             // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue_3;                // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconQuest_C*                    CallFunc_GetUnusedFieldIconQuest_Result;           // 0x03F8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUnusedFieldIconQuest_Index;            // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayEvent_ReturnValue_3;                // 0x0404(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_405[0x3];                                      // 0x0405(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_EventID;                              // 0x0408(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EEventType                                    K2Node_Event_EventType;                            // 0x0418(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_419[0x3];                                      // 0x0419(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_QuestID;                              // 0x041C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   K2Node_Event_QuestState;                           // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_425[0x3];                                      // 0x0425(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EventTalktBranchData               K2Node_Event_TextBranchData;                       // 0x0428(0x0020)(ConstParm)
	TArray<struct FST_TextGoto>                   K2Node_Event_TextGotoData;                         // 0x0448(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Sender;                               // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Radious;                              // 0x0460(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_464[0x4];                                      // 0x0464(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_2;  // 0x0468(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_2;           // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_2;            // 0x0478(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_2;       // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0488(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0498(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x04A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A5[0x3];                                      // 0x04A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x04A8(0x0088)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	ENPCAiType                                    CallFunc_GetNPCAiType_ReturnValue_2;               // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x3];                                      // 0x0531(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EventNPCLookAt                     CallFunc_GetLookAtParams_ReturnValue;              // 0x0534(0x0028)(NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x055C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55D[0x3];                                      // 0x055D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EventNPCLookAt                     CallFunc_GetLookAtParams_ReturnValue_1;            // 0x0560(0x0028)(NoDestructor)
	struct FST_EventNPCLookAt                     CallFunc_GetLookAtParams_ReturnValue_2;            // 0x0588(0x0028)(NoDestructor)
	ENPCAiType                                    CallFunc_GetNPCAiType_ReturnValue_3;               // 0x05B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x05B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENPCAiType                                    CallFunc_GetNPCAiType_ReturnValue_4;               // 0x05B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x05B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENPCAiType                                    CallFunc_GetNPCAiType_ReturnValue_5;               // 0x05B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x05B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EBalloonIconType                              K2Node_Event_IconType;                             // 0x05B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Offset;                               // 0x05B8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x05C4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x05D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x05D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x05DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x05E8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetOriginRotat_ReturnValue;               // 0x05F4(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProcTurn_IsSetRotation;                   // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_602[0x2];                                      // 0x0602(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetOriginRotat_ReturnValue_1;             // 0x0604(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0610(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x061C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetOriginRotat_ReturnValue_2;             // 0x0628(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_634[0x4];                                      // 0x0634(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0638(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0648(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Player_C*                           K2Node_DynamicCast_AsBP_Player;                    // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Is_Use_Talk_End_Turn_UseEndTurn;          // 0x0661(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsUpdateCollision_ReturnValue;            // 0x0662(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EQuestState                                   CallFunc_GetQuestStateNPC_ReturnValue;             // 0x0663(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x0664(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_665[0x3];                                      // 0x0665(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0670(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x067C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0688(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_695[0x3];                                      // 0x0695(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue_4;                // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEventManager*                          CallFunc_GetEventManager_ReturnValue;              // 0x06A0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_EventTrigger_C>    K2Node_DynamicCast_AsBI_Event_Trigger;             // 0x06A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x06B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOverWriteSpawn_ReturnValue;             // 0x06BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6BB[0x5];                                      // 0x06BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue_5;                // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x06C8(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsPlayEvent_ReturnValue_4;                // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x06E0(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue_1;        // 0x06E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_1;      // 0x06F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F2[0x6];                                      // 0x06F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue_6;                // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayEvent_ReturnValue_5;                // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue_2;      // 0x0701(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsTalking_ReturnValue;                 // 0x0702(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_703[0x1];                                      // 0x0703(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x0704(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x0710(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x071C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTalkStartTurn_ReturnValue;             // 0x0720(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_721[0x3];                                      // 0x0721(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegAcos_ReturnValue;                      // 0x0724(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_1;         // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetTalkEndTurnBack_ReturnValue;           // 0x0729(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_72A[0x2];                                      // 0x072A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EventNPCLookAt                     CallFunc_GetLookAtBodyParams_ReturnValue;          // 0x072C(0x0028)(NoDestructor)
	ENPCAiType                                    CallFunc_GetNPCAiType_ReturnValue_6;               // 0x0754(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x0755(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_756[0x2];                                      // 0x0756(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetScaledCapsuleSize_OutRadius;           // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleSize_OutHalfHeight;       // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0760(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76C[0x4];                                      // 0x076C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0778(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0784(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0790(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x079C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x07A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x07A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VSize_ReturnValue;                        // 0x07A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x07AC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B9[0x3];                                      // 0x07B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x07BC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetIdleEmoteListNum_ReturnValue;          // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CC[0x4];                                      // 0x07CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_2;         // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7D9[0x3];                                      // 0x07D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_4;        // 0x07DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x07E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x07EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x07F4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x0800(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_2;       // 0x080C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          CallFunc_GetAIController_ReturnValue;              // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x0820(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_821[0x7];                                      // 0x0821(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_3;         // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_3;        // 0x0830(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_5;        // 0x083C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_4;                          // 0x0848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_4;                          // 0x084C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_4;                          // 0x0850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_854[0x4];                                      // 0x0854(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          Temp_object_Variable;                              // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0860(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86C[0x4];                                      // 0x086C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterStateInterfaceForABP> K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP; // 0x0870(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_881[0x7];                                      // 0x0881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterStateInterfaceForABP> K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP_1; // 0x0888(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_899[0x3];                                      // 0x0899(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x089C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A4[0x4];                                      // 0x08A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UChildActorComponent*                   CallFunc_Array_Get_Item;                           // 0x08A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EQuestState                                   CallFunc_GetQuestStateNPC_ReturnValue_1;           // 0x08B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B2[0x2];                                      // 0x08B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_4;        // 0x08B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EQuestState                                   CallFunc_GetQuestStateNPC_ReturnValue_2;           // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsExtraTalk_ReturnValue;                  // 0x08C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EQuestState                                   CallFunc_GetQuestStateNPC_ReturnValue_3;           // 0x08C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C3[0x1];                                      // 0x08C3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetCurrentEventId_ReturnValue;            // 0x08C4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetTalkStartTurn_ReturnValue_1;           // 0x08CC(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8CD[0x3];                                      // 0x08CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_5;        // 0x08D0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_3;       // 0x08DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_DegAcos_ReturnValue_1;                    // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue_2;         // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8F1[0x7];                                      // 0x08F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_WorldTimeManager_C*                 CallFunc_GetWorldTimeManager_WorldTimeManager;     // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameTime_Hour;                         // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetGameTime_Minute;                       // 0x0904(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_AdjustIEQuestTalkID_NewTalkId;            // 0x0908(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_adjustIEMessageId_Time_NextID;            // 0x0918(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_adjustIEMessageId_Time_ReturnValue;       // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_929[0x3];                                      // 0x0929(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_6;        // 0x092C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_5;                          // 0x0938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_5;                          // 0x093C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_5;                          // 0x0940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_5;                 // 0x0944(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_2;         // 0x0950(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ProcTurn_IsSetRotation_1;                 // 0x095C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_ExecuteUbergraph_BP_NPC) == 0x000008, "Wrong alignment on BP_NPC_C_ExecuteUbergraph_BP_NPC");
static_assert(sizeof(BP_NPC_C_ExecuteUbergraph_BP_NPC) == 0x000960, "Wrong size on BP_NPC_C_ExecuteUbergraph_BP_NPC");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, EntryPoint) == 0x000000, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsOpenFukidashi_ReturnValue) == 0x000004, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsOpenFukidashi_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetInstance_ReturnValue) == 0x000008, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsPlayEvent_ReturnValue) == 0x000010, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsPlayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetOpenFukidashiType_ReturnValue) == 0x000011, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetOpenFukidashiType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000012, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_SwitchEnum_CmpSuccess) == 0x000013, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Get_Fukidashi_Text_ReturnValue) == 0x000018, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Get_Fukidashi_Text_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000028, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetNPCFukisahiOffset_ReturnValue) == 0x00002C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetNPCFukisahiOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsOpenNetworkTravelerFukidashi_ReturnValue) == 0x000038, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsOpenNetworkTravelerFukidashi_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000039, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetSocketName_ReturnValue) == 0x00003C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetSocketName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000044, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000045, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsOpenNewHubReception_ReturnValue) == 0x000046, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsOpenNewHubReception_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsOpenNewDispatch_ReturnValue) == 0x000047, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsOpenNewDispatch_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Get_Fukidashi_Text_ReturnValue_1) == 0x000048, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Get_Fukidashi_Text_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_CheckEmotionEffectTag_IsemotionEffect) == 0x000058, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_CheckEmotionEffectTag_IsemotionEffect' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_CheckEmotionEffectTag_EmotionEffectID) == 0x000059, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_CheckEmotionEffectTag_EmotionEffectID' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_CheckFukidashiStamp_StampType) == 0x00005A, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_CheckFukidashiStamp_StampType' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_CheckFukidashiStamp_ReturnValue) == 0x00005B, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_CheckFukidashiStamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsOpenLocalizeStamp_ReturnValue) == 0x00005C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsOpenLocalizeStamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00005D, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetNPCFukisahiOffset_ReturnValue_1) == 0x000060, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetNPCFukisahiOffset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetNPCListID_ReturnValue) == 0x00006C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetNPCListID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsVisible_ReturnValue) == 0x000074, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Conv_StringToName_ReturnValue) == 0x000078, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_PlayFukidashiVoice_ReturnValue) == 0x000080, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_PlayFukidashiVoice_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_MakeLiteralName_ReturnValue) == 0x000088, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetNPCListID_ReturnValue_1) == 0x000090, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetNPCListID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_CheckFlagDefinition_ReturnValue) == 0x000098, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_CheckFlagDefinition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Conv_StringToName_ReturnValue_1) == 0x00009C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_PlayFukidashiVoice_ReturnValue_1) == 0x0000A8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_PlayFukidashiVoice_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000B0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_IsEventCancel) == 0x0000B1, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_IsEventCancel' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_ObjectName) == 0x0000B8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_ObjectName' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_SocketName) == 0x0000C8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_SocketName' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Map_Find_Value) == 0x0000D0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Map_Find_ReturnValue) == 0x0000D8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Map_Values_Values) == 0x0000E0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0000F0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Array_Length_ReturnValue) == 0x0000F4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetWidgetFromClass_OutWidget) == 0x0000F8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetWidgetFromClass_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000100, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsValid_ReturnValue) == 0x000101, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_DeltaSeconds) == 0x000104, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsTalkNPC_ReturnValue) == 0x000108, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsTalkNPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsTalkNPC_ReturnValue_1) == 0x000109, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsTalkNPC_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_MakeStruct_AfterSearchEventStruct) == 0x000110, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_MakeStruct_AfterSearchEventStruct' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsCharacter_Interface) == 0x000120, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsCharacter_Interface' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess) == 0x000130, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_EmoteEffectID) == 0x000131, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_EmoteEffectID' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetAnimInstance_ReturnValue) == 0x000138, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetInstance_ReturnValue_1) == 0x000140, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsPlayEvent_ReturnValue_1) == 0x000148, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsPlayEvent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CustomEvent_StampType) == 0x000149, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CustomEvent_StampType' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OverlappedComponent_6) == 0x000150, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OverlappedComponent_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherActor_6) == 0x000158, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherActor_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherComp_6) == 0x000160, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherComp_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherBodyIndex_6) == 0x000168, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherBodyIndex_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_bFromSweep_2) == 0x00016C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_bFromSweep_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_SweepResult_2) == 0x000170, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_SweepResult_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsNPCBase) == 0x0001F8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsNPCBase' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess_1) == 0x000200, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OverlappedComponent_5) == 0x000208, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OverlappedComponent_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherActor_5) == 0x000210, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherActor_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherComp_5) == 0x000218, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherComp_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherBodyIndex_5) == 0x000220, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherBodyIndex_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_EndPlayReason) == 0x000224, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetInstance_ReturnValue_2) == 0x000228, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsPlayEvent_ReturnValue_2) == 0x000230, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsPlayEvent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Array_Contains_ReturnValue) == 0x000231, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Array_Add_ReturnValue) == 0x000234, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Array_Contains_ReturnValue_1) == 0x000238, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Array_RemoveItem_ReturnValue) == 0x000239, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsValidNPCData_ReturnValue) == 0x00023A, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsValidNPCData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Array_Length_ReturnValue_1) == 0x00023C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000240, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsValid_ReturnValue_1) == 0x000241, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetFieldIconQuest_Result) == 0x000248, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetFieldIconQuest_Result' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000250, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsValid_ReturnValue_2) == 0x000251, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_IconVisibility) == 0x000252, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_IconVisibility' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetUnusedWidgetFromClass_OutIndex) == 0x000254, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetUnusedWidgetFromClass_OutIndex' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetUnusedWidgetFromClass_OutWidget) == 0x000258, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetUnusedWidgetFromClass_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsVisible_ReturnValue_1) == 0x000260, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsVisible_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsValid_ReturnValue_3) == 0x000261, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_Type) == 0x000262, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_Type' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_Instigator) == 0x000268, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_Instigator' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetNPCAiType_ReturnValue) == 0x000270, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetNPCAiType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsObject_Communication_Interface) == 0x000278, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsObject_Communication_Interface' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess_2) == 0x000288, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000289, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_SwitchEnum_CmpSuccess_2) == 0x00028A, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_FukidashiType) == 0x00028B, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_FukidashiType' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_CharacterName) == 0x000290, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_CharacterName' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_FukidashiText) == 0x0002A0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_FukidashiText' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_VisibleIcon) == 0x0002B0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_VisibleIcon' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_AutoClose) == 0x0002B1, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_AutoClose' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_TalkeID) == 0x0002B4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_TalkeID' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_ShapeFukidashiText_ReturnValue) == 0x0002C0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_ShapeFukidashiText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_CheckSoundTag_IsSound) == 0x0002D0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_CheckSoundTag_IsSound' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_CheckSoundTag_SoundType) == 0x0002D1, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_CheckSoundTag_SoundType' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_CheckSoundTag_SoundNo) == 0x0002D4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_CheckSoundTag_SoundNo' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0002D8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetNPCAiType_ReturnValue_1) == 0x0002D9, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetNPCAiType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0002DA, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_EventSender) == 0x0002E0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_EventSender' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_LiftId) == 0x0002E8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_LiftId' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_StarScarId) == 0x0002EC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_StarScarId' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_SendActor) == 0x0002F8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_SendActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_HasQuest_ReturnValue) == 0x000300, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_HasQuest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsValidNPCData_ReturnValue_1) == 0x000301, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsValidNPCData_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_EventID_1) == 0x000304, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_EventID_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_Sender_1) == 0x000310, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_Sender_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_DebugMode) == 0x000318, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_DebugMode' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsOpenFukidashi_ReturnValue_1) == 0x000319, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsOpenFukidashi_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsQuestClearAll_ReturnValue) == 0x00031A, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsQuestClearAll_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_PlayQuestEvent_ReturnValue) == 0x00031B, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_PlayQuestEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OverlappedComponent_4) == 0x000320, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OverlappedComponent_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherActor_4) == 0x000328, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherActor_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherComp_4) == 0x000330, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherComp_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherBodyIndex_4) == 0x000338, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherBodyIndex_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x00033C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000340, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OverlappedComponent_3) == 0x0003C8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OverlappedComponent_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherActor_3) == 0x0003D0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherActor_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherComp_3) == 0x0003D8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherComp_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherBodyIndex_3) == 0x0003E0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherBodyIndex_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_ActorIsPlayer_ReturnValue) == 0x0003E4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_ActorIsPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_ActorIsPlayer_ReturnValue_1) == 0x0003E5, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_ActorIsPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsValidNPCData_ReturnValue_2) == 0x0003E6, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsValidNPCData_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0003E7, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsValidNPCData_ReturnValue_3) == 0x0003E8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsValidNPCData_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetInstance_ReturnValue_3) == 0x0003F0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetUnusedFieldIconQuest_Result) == 0x0003F8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetUnusedFieldIconQuest_Result' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetUnusedFieldIconQuest_Index) == 0x000400, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetUnusedFieldIconQuest_Index' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsPlayEvent_ReturnValue_3) == 0x000404, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsPlayEvent_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_EventID) == 0x000408, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_EventID' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_EventType) == 0x000418, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_EventType' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_QuestID) == 0x00041C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_QuestID' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_QuestState) == 0x000424, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_QuestState' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_TextBranchData) == 0x000428, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_TextBranchData' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_TextGotoData) == 0x000448, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_TextGotoData' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_Sender) == 0x000458, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_Sender' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_Radious) == 0x000460, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_Radious' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OverlappedComponent_2) == 0x000468, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OverlappedComponent_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherActor_2) == 0x000470, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherActor_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherComp_2) == 0x000478, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherComp_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherBodyIndex_2) == 0x000480, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherBodyIndex_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000488, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000490, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000498, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x0004A0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_bFromSweep) == 0x0004A4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_SweepResult) == 0x0004A8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetNPCAiType_ReturnValue_2) == 0x000530, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetNPCAiType_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetLookAtParams_ReturnValue) == 0x000534, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetLookAtParams_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_SwitchEnum_CmpSuccess_3) == 0x00055C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetLookAtParams_ReturnValue_1) == 0x000560, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetLookAtParams_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetLookAtParams_ReturnValue_2) == 0x000588, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetLookAtParams_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetNPCAiType_ReturnValue_3) == 0x0005B0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetNPCAiType_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0005B1, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetNPCAiType_ReturnValue_4) == 0x0005B2, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetNPCAiType_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x0005B3, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0005B4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetNPCAiType_ReturnValue_5) == 0x0005B5, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetNPCAiType_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_SwitchEnum_CmpSuccess_4) == 0x0005B6, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_IconType) == 0x0005B7, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_IconType' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_Event_Offset) == 0x0005B8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_Event_Offset' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0005C4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_X) == 0x0005D0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_Y) == 0x0005D4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_Z) == 0x0005D8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_MakeVector_ReturnValue) == 0x0005DC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0005E8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetOriginRotat_ReturnValue) == 0x0005F4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetOriginRotat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000600, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_ProcTurn_IsSetRotation) == 0x000601, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_ProcTurn_IsSetRotation' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetOriginRotat_ReturnValue_1) == 0x000604, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetOriginRotat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000610, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x00061C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetOriginRotat_ReturnValue_2) == 0x000628, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetOriginRotat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000638, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherActor) == 0x000640, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherComp) == 0x000648, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000650, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsBP_Player) == 0x000658, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsBP_Player' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess_3) == 0x000660, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Is_Use_Talk_End_Turn_UseEndTurn) == 0x000661, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Is_Use_Talk_End_Turn_UseEndTurn' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsUpdateCollision_ReturnValue) == 0x000662, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsUpdateCollision_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetQuestStateNPC_ReturnValue) == 0x000663, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetQuestStateNPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x000664, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000668, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000670, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_X_1) == 0x00067C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_Y_1) == 0x000680, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_Z_1) == 0x000684, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_MakeVector_ReturnValue_1) == 0x000688, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000694, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetInstance_ReturnValue_4) == 0x000698, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetEventManager_ReturnValue) == 0x0006A0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetEventManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsBI_Event_Trigger) == 0x0006A8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsBI_Event_Trigger' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess_4) == 0x0006B8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsValid_ReturnValue_4) == 0x0006B9, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsOverWriteSpawn_ReturnValue) == 0x0006BA, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsOverWriteSpawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetInstance_ReturnValue_5) == 0x0006C0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_CreateDelegate_OutputDelegate) == 0x0006C8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsPlayEvent_ReturnValue_4) == 0x0006D8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsPlayEvent_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0006E0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_SetTimerDelegate_ReturnValue_1) == 0x0006E8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_SetTimerDelegate_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0006F0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_IsValidTimerHandle_ReturnValue_1) == 0x0006F1, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_IsValidTimerHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetInstance_ReturnValue_6) == 0x0006F8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsPlayEvent_ReturnValue_5) == 0x000700, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsPlayEvent_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_IsValidTimerHandle_ReturnValue_2) == 0x000701, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_IsValidTimerHandle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetIsTalking_ReturnValue) == 0x000702, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetIsTalking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x000704, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x000710, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Dot_VectorVector_ReturnValue) == 0x00071C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetTalkStartTurn_ReturnValue) == 0x000720, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetTalkStartTurn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_DegAcos_ReturnValue) == 0x000724, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Greater_FloatFloat_ReturnValue_1) == 0x000728, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Greater_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetTalkEndTurnBack_ReturnValue) == 0x000729, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetTalkEndTurnBack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetLookAtBodyParams_ReturnValue) == 0x00072C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetLookAtBodyParams_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetNPCAiType_ReturnValue_6) == 0x000754, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetNPCAiType_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_SwitchEnum_CmpSuccess_5) == 0x000755, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetScaledCapsuleSize_OutRadius) == 0x000758, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetScaledCapsuleSize_OutRadius' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetScaledCapsuleSize_OutHalfHeight) == 0x00075C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetScaledCapsuleSize_OutHalfHeight' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000760, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000770, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000778, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000784, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000790, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_X_2) == 0x00079C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_Y_2) == 0x0007A0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_Z_2) == 0x0007A4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_VSize_ReturnValue) == 0x0007A8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_MakeVector_ReturnValue_2) == 0x0007AC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x0007B8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_FindLookAtRotation_ReturnValue) == 0x0007BC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetIdleEmoteListNum_ReturnValue) == 0x0007C8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetIdleEmoteListNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerCharacter_ReturnValue_2) == 0x0007D0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerCharacter_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Greater_IntInt_ReturnValue) == 0x0007D8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetActorLocation_ReturnValue_4) == 0x0007DC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetActorLocation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_X_3) == 0x0007E8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_Y_3) == 0x0007EC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_Z_3) == 0x0007F0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_MakeVector_ReturnValue_3) == 0x0007F4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x000800, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Conv_RotatorToVector_ReturnValue_2) == 0x00080C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Conv_RotatorToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetAIController_ReturnValue) == 0x000818, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetAIController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x000820, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetPlayerCharacter_ReturnValue_3) == 0x000828, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetPlayerCharacter_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetActorRotation_ReturnValue_3) == 0x000830, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetActorRotation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetActorLocation_ReturnValue_5) == 0x00083C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetActorLocation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_X_4) == 0x000848, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_Y_4) == 0x00084C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_Z_4) == 0x000850, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_object_Variable) == 0x000858, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_MakeVector_ReturnValue_4) == 0x000860, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP) == 0x000870, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess_5) == 0x000880, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP_1) == 0x000888, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, K2Node_DynamicCast_bSuccess_6) == 0x000898, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, Temp_int_Variable) == 0x00089C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Add_IntInt_ReturnValue) == 0x0008A0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Array_Get_Item) == 0x0008A8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Less_IntInt_ReturnValue) == 0x0008B0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetQuestStateNPC_ReturnValue_1) == 0x0008B1, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetQuestStateNPC_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetActorRotation_ReturnValue_4) == 0x0008B4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetActorRotation_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetQuestStateNPC_ReturnValue_2) == 0x0008C0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetQuestStateNPC_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_IsExtraTalk_ReturnValue) == 0x0008C1, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_IsExtraTalk_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetQuestStateNPC_ReturnValue_3) == 0x0008C2, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetQuestStateNPC_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetCurrentEventId_ReturnValue) == 0x0008C4, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetCurrentEventId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetTalkStartTurn_ReturnValue_1) == 0x0008CC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetTalkStartTurn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetActorRotation_ReturnValue_5) == 0x0008D0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetActorRotation_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Conv_RotatorToVector_ReturnValue_3) == 0x0008DC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Conv_RotatorToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x0008E8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_DegAcos_ReturnValue_1) == 0x0008EC, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_DegAcos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_Greater_FloatFloat_ReturnValue_2) == 0x0008F0, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_Greater_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetWorldTimeManager_WorldTimeManager) == 0x0008F8, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetWorldTimeManager_WorldTimeManager' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetGameTime_Hour) == 0x000900, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetGameTime_Hour' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_GetGameTime_Minute) == 0x000904, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_GetGameTime_Minute' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_AdjustIEQuestTalkID_NewTalkId) == 0x000908, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_AdjustIEQuestTalkID_NewTalkId' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_adjustIEMessageId_Time_NextID) == 0x000918, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_adjustIEMessageId_Time_NextID' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_adjustIEMessageId_Time_ReturnValue) == 0x000928, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_adjustIEMessageId_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_K2_GetActorLocation_ReturnValue_6) == 0x00092C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_K2_GetActorLocation_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_X_5) == 0x000938, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_Y_5) == 0x00093C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_BreakVector_Z_5) == 0x000940, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_MakeVector_ReturnValue_5) == 0x000944, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_MakeVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_FindLookAtRotation_ReturnValue_2) == 0x000950, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_FindLookAtRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ExecuteUbergraph_BP_NPC, CallFunc_ProcTurn_IsSetRotation_1) == 0x00095C, "Member 'BP_NPC_C_ExecuteUbergraph_BP_NPC::CallFunc_ProcTurn_IsSetRotation_1' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_C_BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_NPC_C_BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NPC_C_BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NPC_C_BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NPC_C_BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NPC_C_BndEvt__TalkEndCollision_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_8_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NPC_C_BndEvt__LookAtCollision_K2Node_ComponentBoundEvent_6_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.SetFukidashiDrawCollisonRadious
// 0x0004 (0x0004 - 0x0000)
struct BP_NPC_C_SetFukidashiDrawCollisonRadious final
{
public:
	float                                         Radious;                                           // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_SetFukidashiDrawCollisonRadious) == 0x000004, "Wrong alignment on BP_NPC_C_SetFukidashiDrawCollisonRadious");
static_assert(sizeof(BP_NPC_C_SetFukidashiDrawCollisonRadious) == 0x000004, "Wrong size on BP_NPC_C_SetFukidashiDrawCollisonRadious");
static_assert(offsetof(BP_NPC_C_SetFukidashiDrawCollisonRadious, Radious) == 0x000000, "Member 'BP_NPC_C_SetFukidashiDrawCollisonRadious::Radious' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.CallPlayEvent
// 0x0058 (0x0058 - 0x0000)
struct BP_NPC_C_CallPlayEvent final
{
public:
	class FString                                 EventID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EEventType                                    EventType_0;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   QuestID;                                           // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   QuestState_0;                                      // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EventTalktBranchData               TextBranchData;                                    // 0x0020(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<struct FST_TextGoto>                   TextGotoData;                                      // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 Sender;                                            // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_CallPlayEvent) == 0x000008, "Wrong alignment on BP_NPC_C_CallPlayEvent");
static_assert(sizeof(BP_NPC_C_CallPlayEvent) == 0x000058, "Wrong size on BP_NPC_C_CallPlayEvent");
static_assert(offsetof(BP_NPC_C_CallPlayEvent, EventID) == 0x000000, "Member 'BP_NPC_C_CallPlayEvent::EventID' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CallPlayEvent, EventType_0) == 0x000010, "Member 'BP_NPC_C_CallPlayEvent::EventType_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CallPlayEvent, QuestID) == 0x000014, "Member 'BP_NPC_C_CallPlayEvent::QuestID' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CallPlayEvent, QuestState_0) == 0x00001C, "Member 'BP_NPC_C_CallPlayEvent::QuestState_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CallPlayEvent, TextBranchData) == 0x000020, "Member 'BP_NPC_C_CallPlayEvent::TextBranchData' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CallPlayEvent, TextGotoData) == 0x000040, "Member 'BP_NPC_C_CallPlayEvent::TextGotoData' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CallPlayEvent, Sender) == 0x000050, "Member 'BP_NPC_C_CallPlayEvent::Sender' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_5_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_NPC_C_BndEvt__FukidashiDrawCollision_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.SendEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_NPC_C_SendEvent final
{
public:
	class FName                                   EventID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        Sender;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugMode;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_SendEvent) == 0x000008, "Wrong alignment on BP_NPC_C_SendEvent");
static_assert(sizeof(BP_NPC_C_SendEvent) == 0x000018, "Wrong size on BP_NPC_C_SendEvent");
static_assert(offsetof(BP_NPC_C_SendEvent, EventID) == 0x000000, "Member 'BP_NPC_C_SendEvent::EventID' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SendEvent, Sender) == 0x000008, "Member 'BP_NPC_C_SendEvent::Sender' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SendEvent, DebugMode) == 0x000010, "Member 'BP_NPC_C_SendEvent::DebugMode' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.SetEventSendNpc
// 0x0008 (0x0008 - 0x0000)
struct BP_NPC_C_SetEventSendNpc final
{
public:
	class ABP_NPC_C*                              SendActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_SetEventSendNpc) == 0x000008, "Wrong alignment on BP_NPC_C_SetEventSendNpc");
static_assert(sizeof(BP_NPC_C_SetEventSendNpc) == 0x000008, "Wrong size on BP_NPC_C_SetEventSendNpc");
static_assert(offsetof(BP_NPC_C_SetEventSendNpc, SendActor) == 0x000000, "Member 'BP_NPC_C_SetEventSendNpc::SendActor' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.SendLiftEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_NPC_C_SendLiftEvent final
{
public:
	class UBP_EventSender_C*                      EventSender;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LiftId;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StarScarId;                                        // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_SendLiftEvent) == 0x000008, "Wrong alignment on BP_NPC_C_SendLiftEvent");
static_assert(sizeof(BP_NPC_C_SendLiftEvent) == 0x000018, "Wrong size on BP_NPC_C_SendLiftEvent");
static_assert(offsetof(BP_NPC_C_SendLiftEvent, EventSender) == 0x000000, "Member 'BP_NPC_C_SendLiftEvent::EventSender' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SendLiftEvent, LiftId) == 0x000008, "Member 'BP_NPC_C_SendLiftEvent::LiftId' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SendLiftEvent, StarScarId) == 0x00000C, "Member 'BP_NPC_C_SendLiftEvent::StarScarId' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OpenFukidashi
// 0x0038 (0x0038 - 0x0000)
struct BP_NPC_C_OpenFukidashi final
{
public:
	EFukidashiEnum                                FukidashiType_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CharacterName;                                     // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 FukidashiText;                                     // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          VisibleIcon;                                       // 0x0028(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          AutoClose;                                         // 0x0029(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   TalkeID;                                           // 0x002C(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OpenFukidashi) == 0x000008, "Wrong alignment on BP_NPC_C_OpenFukidashi");
static_assert(sizeof(BP_NPC_C_OpenFukidashi) == 0x000038, "Wrong size on BP_NPC_C_OpenFukidashi");
static_assert(offsetof(BP_NPC_C_OpenFukidashi, FukidashiType_0) == 0x000000, "Member 'BP_NPC_C_OpenFukidashi::FukidashiType_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenFukidashi, CharacterName) == 0x000008, "Member 'BP_NPC_C_OpenFukidashi::CharacterName' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenFukidashi, FukidashiText) == 0x000018, "Member 'BP_NPC_C_OpenFukidashi::FukidashiText' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenFukidashi, VisibleIcon) == 0x000028, "Member 'BP_NPC_C_OpenFukidashi::VisibleIcon' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenFukidashi, AutoClose) == 0x000029, "Member 'BP_NPC_C_OpenFukidashi::AutoClose' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenFukidashi, TalkeID) == 0x00002C, "Member 'BP_NPC_C_OpenFukidashi::TalkeID' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OnReceiveHit
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_C_OnReceiveHit final
{
public:
	EObjectEffectionEnum                          Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 Instigator_0;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OnReceiveHit) == 0x000008, "Wrong alignment on BP_NPC_C_OnReceiveHit");
static_assert(sizeof(BP_NPC_C_OnReceiveHit) == 0x000010, "Wrong size on BP_NPC_C_OnReceiveHit");
static_assert(offsetof(BP_NPC_C_OnReceiveHit, Type) == 0x000000, "Member 'BP_NPC_C_OnReceiveHit::Type' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OnReceiveHit, Instigator_0) == 0x000008, "Member 'BP_NPC_C_OnReceiveHit::Instigator_0' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.NPCOpenFukidasiUI
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_NPCOpenFukidasiUI final
{
public:
	bool                                          IconVisibility;                                    // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_NPCOpenFukidasiUI) == 0x000001, "Wrong alignment on BP_NPC_C_NPCOpenFukidasiUI");
static_assert(sizeof(BP_NPC_C_NPCOpenFukidasiUI) == 0x000001, "Wrong size on BP_NPC_C_NPCOpenFukidasiUI");
static_assert(offsetof(BP_NPC_C_NPCOpenFukidasiUI, IconVisibility) == 0x000000, "Member 'BP_NPC_C_NPCOpenFukidasiUI::IconVisibility' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on BP_NPC_C_ReceiveEndPlay");
static_assert(sizeof(BP_NPC_C_ReceiveEndPlay) == 0x000001, "Wrong size on BP_NPC_C_ReceiveEndPlay");
static_assert(offsetof(BP_NPC_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'BP_NPC_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_4_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature
// 0x00A8 (0x00A8 - 0x0000)
struct BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x0088)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature) == 0x0000A8, "Wrong size on BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_NPC_C_BndEvt__MoveCollisionCapsule_K2Node_ComponentBoundEvent_3_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_NPC_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_NPC_C_ReceiveTick");
static_assert(sizeof(BP_NPC_C_ReceiveTick) == 0x000004, "Wrong size on BP_NPC_C_ReceiveTick");
static_assert(offsetof(BP_NPC_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_NPC_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.AttachWeapon
// 0x0018 (0x0018 - 0x0000)
struct BP_NPC_C_AttachWeapon final
{
public:
	class FString                                 ObjectName;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FName                                   SocketName;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_AttachWeapon) == 0x000008, "Wrong alignment on BP_NPC_C_AttachWeapon");
static_assert(sizeof(BP_NPC_C_AttachWeapon) == 0x000018, "Wrong size on BP_NPC_C_AttachWeapon");
static_assert(offsetof(BP_NPC_C_AttachWeapon, ObjectName) == 0x000000, "Member 'BP_NPC_C_AttachWeapon::ObjectName' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_AttachWeapon, SocketName) == 0x000010, "Member 'BP_NPC_C_AttachWeapon::SocketName' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.EndPlayEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_EndPlayEvent final
{
public:
	bool                                          IsEventCancel;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_EndPlayEvent) == 0x000001, "Wrong alignment on BP_NPC_C_EndPlayEvent");
static_assert(sizeof(BP_NPC_C_EndPlayEvent) == 0x000001, "Wrong size on BP_NPC_C_EndPlayEvent");
static_assert(offsetof(BP_NPC_C_EndPlayEvent, IsEventCancel) == 0x000000, "Member 'BP_NPC_C_EndPlayEvent::IsEventCancel' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OpenEmoteEffect
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_OpenEmoteEffect final
{
public:
	EEmotionEffectID                              EmoteEffectID;                                     // 0x0000(0x0001)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OpenEmoteEffect) == 0x000001, "Wrong alignment on BP_NPC_C_OpenEmoteEffect");
static_assert(sizeof(BP_NPC_C_OpenEmoteEffect) == 0x000001, "Wrong size on BP_NPC_C_OpenEmoteEffect");
static_assert(offsetof(BP_NPC_C_OpenEmoteEffect, EmoteEffectID) == 0x000000, "Member 'BP_NPC_C_OpenEmoteEffect::EmoteEffectID' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OpenStamp
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_OpenStamp final
{
public:
	EStampIconType                                StampType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OpenStamp) == 0x000001, "Wrong alignment on BP_NPC_C_OpenStamp");
static_assert(sizeof(BP_NPC_C_OpenStamp) == 0x000001, "Wrong size on BP_NPC_C_OpenStamp");
static_assert(offsetof(BP_NPC_C_OpenStamp, StampType) == 0x000000, "Member 'BP_NPC_C_OpenStamp::StampType' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OpenIcon
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_C_OpenIcon final
{
public:
	EBalloonIconType                              IconType;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Offset;                                            // 0x0004(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OpenIcon) == 0x000004, "Wrong alignment on BP_NPC_C_OpenIcon");
static_assert(sizeof(BP_NPC_C_OpenIcon) == 0x000010, "Wrong size on BP_NPC_C_OpenIcon");
static_assert(offsetof(BP_NPC_C_OpenIcon, IconType) == 0x000000, "Member 'BP_NPC_C_OpenIcon::IconType' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenIcon, Offset) == 0x000004, "Member 'BP_NPC_C_OpenIcon::Offset' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.UserConstructionScript
// 0x0508 (0x0508 - 0x0000)
struct BP_NPC_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_AddLocalOffset_SweepHitResult;         // 0x0028(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_BreakVector2D_X_1;                        // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector2D_Y_1;                        // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_NPCData                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x00C0(0x01A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNPCInfoData                           CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0268(0x0080)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x02E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA[0x6];                                      // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_NPCAppearance                      CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x02F0(0x00C8)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3BA[0x6];                                      // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInstance>       CallFunc_Array_Get_Item;                           // 0x03C0(0x0028)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EC[0x4];                                      // 0x03EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_NPCAppearance                      K2Node_MakeStruct_ST_NPCAppearance;                // 0x0400(0x00C8)()
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x04D8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x04E4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_NameToText_ReturnValue;              // 0x04F0(0x0018)()
};
static_assert(alignof(BP_NPC_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_NPC_C_UserConstructionScript");
static_assert(sizeof(BP_NPC_C_UserConstructionScript) == 0x000508, "Wrong size on BP_NPC_C_UserConstructionScript");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_NPC_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000004, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_BreakVector2D_X) == 0x000010, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_BreakVector2D_Y) == 0x000014, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x00001C, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_K2_AddLocalOffset_SweepHitResult) == 0x000028, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_K2_AddLocalOffset_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_BreakVector2D_X_1) == 0x0000B0, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_BreakVector2D_Y_1) == 0x0000B4, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'BP_NPC_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_OutRow) == 0x0000C0, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000260, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000268, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0002E8, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_NotEqual_NameName_ReturnValue) == 0x0002E9, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x0002F0, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0003B8, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, K2Node_SwitchEnum_CmpSuccess) == 0x0003B9, "Member 'BP_NPC_C_UserConstructionScript::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x0003C0, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x0003E8, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x0003F0, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x0003F8, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, K2Node_MakeStruct_ST_NPCAppearance) == 0x000400, "Member 'BP_NPC_C_UserConstructionScript::K2Node_MakeStruct_ST_NPCAppearance' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x0004C8, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x0004D0, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x0004D8, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_Divide_VectorInt_ReturnValue) == 0x0004E4, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UserConstructionScript, CallFunc_Conv_NameToText_ReturnValue) == 0x0004F0, "Member 'BP_NPC_C_UserConstructionScript::CallFunc_Conv_NameToText_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.SetMeshAndMaterials
// 0x0818 (0x0818 - 0x0000)
struct BP_NPC_C_SetMeshAndMaterials final
{
public:
	bool                                          IsConstructionScript;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   CallFunc_Map_Find_Value;                           // 0x0008(0x0028)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_LoadClassAsset_Blocking_ReturnValue;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0054(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Conv_SoftClassReferenceToClass_ReturnValue; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 K2Node_ClassDynamicCast_AsDarwin_Anim_Instance;    // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ClassDynamicCast_bSuccess;                  // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEditor_ReturnValue_1;                   // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNPCManager*                            CallFunc_GetNPCManager_NPCManager;                 // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNPCDataFromTable_Result;               // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_NPCData                            CallFunc_GetNPCDataFromTable_NPCData;              // 0x0120(0x01A0)()
	struct FST_NPCData                            CallFunc_GetDataTableRowFromName_OutRow;           // 0x02C0(0x01A0)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0460(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_461[0x7];                                      // 0x0461(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FNPCInfoData                           CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0468(0x0080)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetAppearanceData_Result;                 // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4EA[0x6];                                      // 0x04EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_NPCAppearance                      CallFunc_GetAppearanceData_DataInfo;               // 0x04F0(0x00C8)()
	struct FST_NPCAppearance                      K2Node_MakeStruct_ST_NPCAppearance;                // 0x05B8(0x00C8)()
	struct FST_NPCAppearance                      CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x0680(0x00C8)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_749[0x7];                                      // 0x0749(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_NPCAppearance                      K2Node_MakeStruct_ST_NPCAppearance_1;              // 0x0750(0x00C8)()
};
static_assert(alignof(BP_NPC_C_SetMeshAndMaterials) == 0x000008, "Wrong alignment on BP_NPC_C_SetMeshAndMaterials");
static_assert(sizeof(BP_NPC_C_SetMeshAndMaterials) == 0x000818, "Wrong size on BP_NPC_C_SetMeshAndMaterials");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, IsConstructionScript) == 0x000000, "Member 'BP_NPC_C_SetMeshAndMaterials::IsConstructionScript' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'BP_NPC_C_SetMeshAndMaterials::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_Map_Find_Value) == 0x000008, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000031, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_LoadClassAsset_Blocking_ReturnValue) == 0x000038, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_LoadClassAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_IsEditor_ReturnValue) == 0x000040, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000044, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000054, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000DC, "Member 'BP_NPC_C_SetMeshAndMaterials::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_Conv_SoftClassReferenceToClass_ReturnValue) == 0x0000E0, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_Conv_SoftClassReferenceToClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, K2Node_ClassDynamicCast_AsDarwin_Anim_Instance) == 0x0000E8, "Member 'BP_NPC_C_SetMeshAndMaterials::K2Node_ClassDynamicCast_AsDarwin_Anim_Instance' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, K2Node_ClassDynamicCast_bSuccess) == 0x0000F0, "Member 'BP_NPC_C_SetMeshAndMaterials::K2Node_ClassDynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000F1, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_Conv_NameToString_ReturnValue) == 0x0000F8, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_Contains_ReturnValue) == 0x000108, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_IsEditor_ReturnValue_1) == 0x000109, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_IsEditor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_GetNPCManager_NPCManager) == 0x000110, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_GetNPCManager_NPCManager' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_GetNPCDataFromTable_Result) == 0x000118, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_GetNPCDataFromTable_Result' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_GetNPCDataFromTable_NPCData) == 0x000120, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_GetNPCDataFromTable_NPCData' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_GetDataTableRowFromName_OutRow) == 0x0002C0, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000460, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000468, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x0004E8, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_GetAppearanceData_Result) == 0x0004E9, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_GetAppearanceData_Result' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_GetAppearanceData_DataInfo) == 0x0004F0, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_GetAppearanceData_DataInfo' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, K2Node_MakeStruct_ST_NPCAppearance) == 0x0005B8, "Member 'BP_NPC_C_SetMeshAndMaterials::K2Node_MakeStruct_ST_NPCAppearance' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x000680, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x000748, "Member 'BP_NPC_C_SetMeshAndMaterials::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetMeshAndMaterials, K2Node_MakeStruct_ST_NPCAppearance_1) == 0x000750, "Member 'BP_NPC_C_SetMeshAndMaterials::K2Node_MakeStruct_ST_NPCAppearance_1' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.Look at Player
// 0x0088 (0x0088 - 0x0000)
struct BP_NPC_C_Look_at_Player final
{
public:
	float                                         InterpSpeed;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsPlayEvent_ReturnValue;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0074(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_Look_at_Player) == 0x000008, "Wrong alignment on BP_NPC_C_Look_at_Player");
static_assert(sizeof(BP_NPC_C_Look_at_Player) == 0x000088, "Wrong size on BP_NPC_C_Look_at_Player");
static_assert(offsetof(BP_NPC_C_Look_at_Player, InterpSpeed) == 0x000000, "Member 'BP_NPC_C_Look_at_Player::InterpSpeed' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_GetIsPlayEvent_ReturnValue) == 0x000004, "Member 'BP_NPC_C_Look_at_Player::CallFunc_GetIsPlayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'BP_NPC_C_Look_at_Player::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00000C, "Member 'BP_NPC_C_Look_at_Player::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000018, "Member 'BP_NPC_C_Look_at_Player::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_BreakVector_X) == 0x000020, "Member 'BP_NPC_C_Look_at_Player::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_BreakVector_Y) == 0x000024, "Member 'BP_NPC_C_Look_at_Player::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_BreakVector_Z) == 0x000028, "Member 'BP_NPC_C_Look_at_Player::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x00002C, "Member 'BP_NPC_C_Look_at_Player::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BP_NPC_C_Look_at_Player::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_BreakVector_X_1) == 0x000044, "Member 'BP_NPC_C_Look_at_Player::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_BreakVector_Y_1) == 0x000048, "Member 'BP_NPC_C_Look_at_Player::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_BreakVector_Z_1) == 0x00004C, "Member 'BP_NPC_C_Look_at_Player::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000050, "Member 'BP_NPC_C_Look_at_Player::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_MakeVector_ReturnValue_1) == 0x00005C, "Member 'BP_NPC_C_Look_at_Player::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_FindLookAtRotation_ReturnValue) == 0x000068, "Member 'BP_NPC_C_Look_at_Player::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_RInterpTo_ReturnValue) == 0x000074, "Member 'BP_NPC_C_Look_at_Player::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Look_at_Player, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000080, "Member 'BP_NPC_C_Look_at_Player::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.UpdateEventData
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_C_UpdateEventData final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EQuestState                                   CallFunc_GetQuestStateNPC_ReturnValue;             // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_adjustIEMessageId_TalkNum_NextID;         // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_adjustIEMessageId_TalkNum_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_UpdateEventData) == 0x000008, "Wrong alignment on BP_NPC_C_UpdateEventData");
static_assert(sizeof(BP_NPC_C_UpdateEventData) == 0x000020, "Wrong size on BP_NPC_C_UpdateEventData");
static_assert(offsetof(BP_NPC_C_UpdateEventData, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'BP_NPC_C_UpdateEventData::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UpdateEventData, CallFunc_NotEqual_NameName_ReturnValue) == 0x000001, "Member 'BP_NPC_C_UpdateEventData::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UpdateEventData, CallFunc_GetQuestStateNPC_ReturnValue) == 0x000002, "Member 'BP_NPC_C_UpdateEventData::CallFunc_GetQuestStateNPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UpdateEventData, CallFunc_adjustIEMessageId_TalkNum_NextID) == 0x000008, "Member 'BP_NPC_C_UpdateEventData::CallFunc_adjustIEMessageId_TalkNum_NextID' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_UpdateEventData, CallFunc_adjustIEMessageId_TalkNum_ReturnValue) == 0x000018, "Member 'BP_NPC_C_UpdateEventData::CallFunc_adjustIEMessageId_TalkNum_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OpenQuestIcon
// 0x0028 (0x0028 - 0x0000)
struct BP_NPC_C_OpenQuestIcon final
{
public:
	EBalloonIconType                              Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          String;                                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValidNPCData_ReturnValue;               // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpenFukidashi_ReturnValue;              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetNPCFukisahiOffset_ReturnValue;         // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconQuest_C*                    CallFunc_GetUnusedFieldIconQuest_Result;           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUnusedFieldIconQuest_Index;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetSocketName_ReturnValue;                // 0x0020(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OpenQuestIcon) == 0x000008, "Wrong alignment on BP_NPC_C_OpenQuestIcon");
static_assert(sizeof(BP_NPC_C_OpenQuestIcon) == 0x000028, "Wrong size on BP_NPC_C_OpenQuestIcon");
static_assert(offsetof(BP_NPC_C_OpenQuestIcon, Type) == 0x000000, "Member 'BP_NPC_C_OpenQuestIcon::Type' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenQuestIcon, String) == 0x000001, "Member 'BP_NPC_C_OpenQuestIcon::String' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenQuestIcon, CallFunc_IsValidNPCData_ReturnValue) == 0x000002, "Member 'BP_NPC_C_OpenQuestIcon::CallFunc_IsValidNPCData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenQuestIcon, CallFunc_IsOpenFukidashi_ReturnValue) == 0x000003, "Member 'BP_NPC_C_OpenQuestIcon::CallFunc_IsOpenFukidashi_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenQuestIcon, CallFunc_GetNPCFukisahiOffset_ReturnValue) == 0x000004, "Member 'BP_NPC_C_OpenQuestIcon::CallFunc_GetNPCFukisahiOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenQuestIcon, CallFunc_GetUnusedFieldIconQuest_Result) == 0x000010, "Member 'BP_NPC_C_OpenQuestIcon::CallFunc_GetUnusedFieldIconQuest_Result' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenQuestIcon, CallFunc_GetUnusedFieldIconQuest_Index) == 0x000018, "Member 'BP_NPC_C_OpenQuestIcon::CallFunc_GetUnusedFieldIconQuest_Index' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenQuestIcon, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'BP_NPC_C_OpenQuestIcon::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenQuestIcon, CallFunc_GetSocketName_ReturnValue) == 0x000020, "Member 'BP_NPC_C_OpenQuestIcon::CallFunc_GetSocketName_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.CloseQuestIcon
// 0x0018 (0x0018 - 0x0000)
struct BP_NPC_C_CloseQuestIcon final
{
public:
	bool                                          CallFunc_IsValidNPCData_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Sign_IconQuest_C*                    CallFunc_GetFieldIconQuest_Result;                 // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_CloseQuestIcon) == 0x000008, "Wrong alignment on BP_NPC_C_CloseQuestIcon");
static_assert(sizeof(BP_NPC_C_CloseQuestIcon) == 0x000018, "Wrong size on BP_NPC_C_CloseQuestIcon");
static_assert(offsetof(BP_NPC_C_CloseQuestIcon, CallFunc_IsValidNPCData_ReturnValue) == 0x000000, "Member 'BP_NPC_C_CloseQuestIcon::CallFunc_IsValidNPCData_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CloseQuestIcon, CallFunc_GetFieldIconQuest_Result) == 0x000008, "Member 'BP_NPC_C_CloseQuestIcon::CallFunc_GetFieldIconQuest_Result' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CloseQuestIcon, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_NPC_C_CloseQuestIcon::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_CloseQuestIcon, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'BP_NPC_C_CloseQuestIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.IsTalkNPC
// 0x0004 (0x0004 - 0x0000)
struct BP_NPC_C_IsTalkNPC final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_IsTalkNPC) == 0x000001, "Wrong alignment on BP_NPC_C_IsTalkNPC");
static_assert(sizeof(BP_NPC_C_IsTalkNPC) == 0x000004, "Wrong size on BP_NPC_C_IsTalkNPC");
static_assert(offsetof(BP_NPC_C_IsTalkNPC, ReturnValue) == 0x000000, "Member 'BP_NPC_C_IsTalkNPC::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_IsTalkNPC, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'BP_NPC_C_IsTalkNPC::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_IsTalkNPC, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'BP_NPC_C_IsTalkNPC::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_IsTalkNPC, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'BP_NPC_C_IsTalkNPC::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.OpenFukidasiUI
// 0x0030 (0x0030 - 0x0000)
struct BP_NPC_C_OpenFukidasiUI final
{
public:
	bool                                          IconVisibility;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Max_Fukidashi_String_Length;                       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Get_Fukidashi_Text_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayEvent_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpenFukidashi_ReturnValue;              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EFukidashiEnum                                CallFunc_GetOpenFukidashiType_ReturnValue;         // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_OpenFukidasiUI) == 0x000008, "Wrong alignment on BP_NPC_C_OpenFukidasiUI");
static_assert(sizeof(BP_NPC_C_OpenFukidasiUI) == 0x000030, "Wrong size on BP_NPC_C_OpenFukidasiUI");
static_assert(offsetof(BP_NPC_C_OpenFukidasiUI, IconVisibility) == 0x000000, "Member 'BP_NPC_C_OpenFukidasiUI::IconVisibility' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenFukidasiUI, Max_Fukidashi_String_Length) == 0x000004, "Member 'BP_NPC_C_OpenFukidasiUI::Max_Fukidashi_String_Length' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenFukidasiUI, CallFunc_Get_Fukidashi_Text_ReturnValue) == 0x000008, "Member 'BP_NPC_C_OpenFukidasiUI::CallFunc_Get_Fukidashi_Text_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenFukidasiUI, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000018, "Member 'BP_NPC_C_OpenFukidasiUI::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenFukidasiUI, CallFunc_GetInstance_ReturnValue) == 0x000020, "Member 'BP_NPC_C_OpenFukidasiUI::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenFukidasiUI, CallFunc_IsPlayEvent_ReturnValue) == 0x000028, "Member 'BP_NPC_C_OpenFukidasiUI::CallFunc_IsPlayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenFukidasiUI, CallFunc_IsOpenFukidashi_ReturnValue) == 0x000029, "Member 'BP_NPC_C_OpenFukidasiUI::CallFunc_IsOpenFukidashi_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_OpenFukidasiUI, CallFunc_GetOpenFukidashiType_ReturnValue) == 0x00002A, "Member 'BP_NPC_C_OpenFukidasiUI::CallFunc_GetOpenFukidashiType_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.EntryDataTable
// 0x01A0 (0x01A0 - 0x0000)
struct BP_NPC_C_EntryDataTable final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEditor_ReturnValue;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0xA];                                        // 0x0006(0x000A)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0010(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue_1;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CreatePointCSVLine_CsvLine;               // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0080(0x0030)(ConstParm, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x00B4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x00C0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CreatePointCSVLine_CsvLine_1;             // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0118(0x0010)(ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_CreateDataTableCSVHeader_ReturnValue;     // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_PointDataTable                     CallFunc_GetDataTableRowFromName_OutRow;           // 0x0140(0x0030)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_172[0x2];                                      // 0x0172(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_CreatePointCSVLine_CsvLine_2;             // 0x0178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0190(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_EntryDataTable) == 0x000010, "Wrong alignment on BP_NPC_C_EntryDataTable");
static_assert(sizeof(BP_NPC_C_EntryDataTable) == 0x0001A0, "Wrong size on BP_NPC_C_EntryDataTable");
static_assert(offsetof(BP_NPC_C_EntryDataTable, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_NPC_C_EntryDataTable::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_IsEditor_ReturnValue) == 0x000004, "Member 'BP_NPC_C_EntryDataTable::CallFunc_IsEditor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_NotEqual_NameName_ReturnValue) == 0x000005, "Member 'BP_NPC_C_EntryDataTable::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_GetTransform_ReturnValue) == 0x000010, "Member 'BP_NPC_C_EntryDataTable::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_NotEqual_NameName_ReturnValue_1) == 0x000040, "Member 'BP_NPC_C_EntryDataTable::CallFunc_NotEqual_NameName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_BreakTransform_Location) == 0x000044, "Member 'BP_NPC_C_EntryDataTable::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_BreakTransform_Rotation) == 0x000050, "Member 'BP_NPC_C_EntryDataTable::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_BreakTransform_Scale) == 0x00005C, "Member 'BP_NPC_C_EntryDataTable::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_CreatePointCSVLine_CsvLine) == 0x000068, "Member 'BP_NPC_C_EntryDataTable::CallFunc_CreatePointCSVLine_CsvLine' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_GetTransform_ReturnValue_1) == 0x000080, "Member 'BP_NPC_C_EntryDataTable::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, Temp_int_Loop_Counter_Variable) == 0x0000B0, "Member 'BP_NPC_C_EntryDataTable::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_BreakTransform_Location_1) == 0x0000B4, "Member 'BP_NPC_C_EntryDataTable::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_BreakTransform_Rotation_1) == 0x0000C0, "Member 'BP_NPC_C_EntryDataTable::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_BreakTransform_Scale_1) == 0x0000CC, "Member 'BP_NPC_C_EntryDataTable::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_CreatePointCSVLine_CsvLine_1) == 0x0000D8, "Member 'BP_NPC_C_EntryDataTable::CallFunc_CreatePointCSVLine_CsvLine_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_Add_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_NPC_C_EntryDataTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_Concat_StrStr_ReturnValue) == 0x0000F0, "Member 'BP_NPC_C_EntryDataTable::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000100, "Member 'BP_NPC_C_EntryDataTable::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000108, "Member 'BP_NPC_C_EntryDataTable::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000118, "Member 'BP_NPC_C_EntryDataTable::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_CreateDataTableCSVHeader_ReturnValue) == 0x000128, "Member 'BP_NPC_C_EntryDataTable::CallFunc_CreateDataTableCSVHeader_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_Array_Get_Item) == 0x000138, "Member 'BP_NPC_C_EntryDataTable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_GetDataTableRowFromName_OutRow) == 0x000140, "Member 'BP_NPC_C_EntryDataTable::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000170, "Member 'BP_NPC_C_EntryDataTable::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000171, "Member 'BP_NPC_C_EntryDataTable::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_Array_Length_ReturnValue) == 0x000174, "Member 'BP_NPC_C_EntryDataTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_CreatePointCSVLine_CsvLine_2) == 0x000178, "Member 'BP_NPC_C_EntryDataTable::CallFunc_CreatePointCSVLine_CsvLine_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_Less_IntInt_ReturnValue) == 0x000188, "Member 'BP_NPC_C_EntryDataTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_EntryDataTable, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000190, "Member 'BP_NPC_C_EntryDataTable::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.SetLookAtCollision
// 0x0028 (0x0028 - 0x0000)
struct BP_NPC_C_SetLookAtCollision final
{
public:
	struct FST_EventNPCLookAt                     CallFunc_GetLookAtParams_ReturnValue;              // 0x0000(0x0028)(NoDestructor)
};
static_assert(alignof(BP_NPC_C_SetLookAtCollision) == 0x000004, "Wrong alignment on BP_NPC_C_SetLookAtCollision");
static_assert(sizeof(BP_NPC_C_SetLookAtCollision) == 0x000028, "Wrong size on BP_NPC_C_SetLookAtCollision");
static_assert(offsetof(BP_NPC_C_SetLookAtCollision, CallFunc_GetLookAtParams_ReturnValue) == 0x000000, "Member 'BP_NPC_C_SetLookAtCollision::CallFunc_GetLookAtParams_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.Is Use Talk End Turn
// 0x0034 (0x0034 - 0x0000)
struct BP_NPC_C_Is_Use_Talk_End_Turn final
{
public:
	bool                                          UseEndTurn;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EventNPCLookAt                     CallFunc_GetLookAtBodyParams_ReturnValue;          // 0x0004(0x0028)(NoDestructor)
	bool                                          CallFunc_GetTalkEndTurnBack_ReturnValue;           // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetTalkStartTurn_ReturnValue;             // 0x002D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsTalkingTurn_ReturnValue;             // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ENPCAiType                                    CallFunc_GetNPCAiType_ReturnValue;                 // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_Is_Use_Talk_End_Turn) == 0x000004, "Wrong alignment on BP_NPC_C_Is_Use_Talk_End_Turn");
static_assert(sizeof(BP_NPC_C_Is_Use_Talk_End_Turn) == 0x000034, "Wrong size on BP_NPC_C_Is_Use_Talk_End_Turn");
static_assert(offsetof(BP_NPC_C_Is_Use_Talk_End_Turn, UseEndTurn) == 0x000000, "Member 'BP_NPC_C_Is_Use_Talk_End_Turn::UseEndTurn' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Is_Use_Talk_End_Turn, CallFunc_GetLookAtBodyParams_ReturnValue) == 0x000004, "Member 'BP_NPC_C_Is_Use_Talk_End_Turn::CallFunc_GetLookAtBodyParams_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Is_Use_Talk_End_Turn, CallFunc_GetTalkEndTurnBack_ReturnValue) == 0x00002C, "Member 'BP_NPC_C_Is_Use_Talk_End_Turn::CallFunc_GetTalkEndTurnBack_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Is_Use_Talk_End_Turn, CallFunc_GetTalkStartTurn_ReturnValue) == 0x00002D, "Member 'BP_NPC_C_Is_Use_Talk_End_Turn::CallFunc_GetTalkStartTurn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Is_Use_Talk_End_Turn, CallFunc_GetIsTalkingTurn_ReturnValue) == 0x00002E, "Member 'BP_NPC_C_Is_Use_Talk_End_Turn::CallFunc_GetIsTalkingTurn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Is_Use_Talk_End_Turn, CallFunc_GetNPCAiType_ReturnValue) == 0x00002F, "Member 'BP_NPC_C_Is_Use_Talk_End_Turn::CallFunc_GetNPCAiType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Is_Use_Talk_End_Turn, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'BP_NPC_C_Is_Use_Talk_End_Turn::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.SetTurnAnim
// 0x004C (0x004C - 0x0000)
struct BP_NPC_C_SetTurnAnim final
{
public:
	struct FRotator                               Current;                                           // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Target;                                            // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0018(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_SetTurnAnim) == 0x000004, "Wrong alignment on BP_NPC_C_SetTurnAnim");
static_assert(sizeof(BP_NPC_C_SetTurnAnim) == 0x00004C, "Wrong size on BP_NPC_C_SetTurnAnim");
static_assert(offsetof(BP_NPC_C_SetTurnAnim, Current) == 0x000000, "Member 'BP_NPC_C_SetTurnAnim::Current' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetTurnAnim, Target) == 0x00000C, "Member 'BP_NPC_C_SetTurnAnim::Target' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetTurnAnim, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000018, "Member 'BP_NPC_C_SetTurnAnim::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetTurnAnim, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x000024, "Member 'BP_NPC_C_SetTurnAnim::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetTurnAnim, CallFunc_Cross_VectorVector_ReturnValue) == 0x000030, "Member 'BP_NPC_C_SetTurnAnim::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetTurnAnim, CallFunc_BreakVector_X) == 0x00003C, "Member 'BP_NPC_C_SetTurnAnim::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetTurnAnim, CallFunc_BreakVector_Y) == 0x000040, "Member 'BP_NPC_C_SetTurnAnim::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetTurnAnim, CallFunc_BreakVector_Z) == 0x000044, "Member 'BP_NPC_C_SetTurnAnim::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetTurnAnim, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000048, "Member 'BP_NPC_C_SetTurnAnim::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.HitFukidashiCollision
// 0x0050 (0x0050 - 0x0000)
struct BP_NPC_C_HitFukidashiCollision final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UPrimitiveComponent*>            CallFunc_GetOverlappingComponents_OutOverlappingComponents; // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_HitFukidashiCollision) == 0x000008, "Wrong alignment on BP_NPC_C_HitFukidashiCollision");
static_assert(sizeof(BP_NPC_C_HitFukidashiCollision) == 0x000050, "Wrong size on BP_NPC_C_HitFukidashiCollision");
static_assert(offsetof(BP_NPC_C_HitFukidashiCollision, ReturnValue) == 0x000000, "Member 'BP_NPC_C_HitFukidashiCollision::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_HitFukidashiCollision, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_NPC_C_HitFukidashiCollision::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_HitFukidashiCollision, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'BP_NPC_C_HitFukidashiCollision::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_HitFukidashiCollision, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'BP_NPC_C_HitFukidashiCollision::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_HitFukidashiCollision, CallFunc_GetPlayerPawn_ReturnValue) == 0x000010, "Member 'BP_NPC_C_HitFukidashiCollision::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_HitFukidashiCollision, CallFunc_GetOverlappingComponents_OutOverlappingComponents) == 0x000018, "Member 'BP_NPC_C_HitFukidashiCollision::CallFunc_GetOverlappingComponents_OutOverlappingComponents' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_HitFukidashiCollision, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'BP_NPC_C_HitFukidashiCollision::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_HitFukidashiCollision, CallFunc_Array_Get_Item) == 0x000030, "Member 'BP_NPC_C_HitFukidashiCollision::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_HitFukidashiCollision, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'BP_NPC_C_HitFukidashiCollision::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_HitFukidashiCollision, CallFunc_GetOwner_ReturnValue) == 0x000040, "Member 'BP_NPC_C_HitFukidashiCollision::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_HitFukidashiCollision, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000048, "Member 'BP_NPC_C_HitFukidashiCollision::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.Call Talk Look At Player
// 0x0001 (0x0001 - 0x0000)
struct BP_NPC_C_Call_Talk_Look_At_Player final
{
public:
	bool                                          CallFunc_GetTalkLookAtEnable_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_Call_Talk_Look_At_Player) == 0x000001, "Wrong alignment on BP_NPC_C_Call_Talk_Look_At_Player");
static_assert(sizeof(BP_NPC_C_Call_Talk_Look_At_Player) == 0x000001, "Wrong size on BP_NPC_C_Call_Talk_Look_At_Player");
static_assert(offsetof(BP_NPC_C_Call_Talk_Look_At_Player, CallFunc_GetTalkLookAtEnable_ReturnValue) == 0x000000, "Member 'BP_NPC_C_Call_Talk_Look_At_Player::CallFunc_GetTalkLookAtEnable_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.GetAppearanceData
// 0x02B8 (0x02B8 - 0x0000)
struct BP_NPC_C_GetAppearanceData final
{
public:
	class FName                                   NpcID_0;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_NPCAppearance                      DataInfo;                                          // 0x0010(0x00C8)(Parm, OutParm)
	class UNPCManager*                            CallFunc_GetNPCManager_NPCManager;                 // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNPCManager*                            CallFunc_GetNPCManager_NPCManager_1;               // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAutoTravelerNPCId_ReturnValue;          // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvitationTravelerNPCId_ReturnValue;    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFriendNPCId_ReturnValue;                // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextManager*                           CallFunc_GetInstance_ReturnValue;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetFriendAppearanceID_ReturnValue;        // 0x00FC(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNPCAppearanceData_Result;              // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_NPCAppearance                      CallFunc_GetNPCAppearanceData_DataInfo;            // 0x0108(0x00C8)()
	class UTextManager*                           CallFunc_GetInstance_ReturnValue_1;                // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_GetNpcAppearanceID_ReturnValue;           // 0x01D8(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNPCManager*                            CallFunc_GetNPCManager_NPCManager_2;               // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNPCAppearanceData_Result_1;            // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_NPCAppearance                      CallFunc_GetNPCAppearanceData_DataInfo_1;          // 0x01F0(0x00C8)()
};
static_assert(alignof(BP_NPC_C_GetAppearanceData) == 0x000008, "Wrong alignment on BP_NPC_C_GetAppearanceData");
static_assert(sizeof(BP_NPC_C_GetAppearanceData) == 0x0002B8, "Wrong size on BP_NPC_C_GetAppearanceData");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, NpcID_0) == 0x000000, "Member 'BP_NPC_C_GetAppearanceData::NpcID_0' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, Result) == 0x000008, "Member 'BP_NPC_C_GetAppearanceData::Result' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, DataInfo) == 0x000010, "Member 'BP_NPC_C_GetAppearanceData::DataInfo' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_GetNPCManager_NPCManager) == 0x0000D8, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_GetNPCManager_NPCManager' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_GetNPCManager_NPCManager_1) == 0x0000E0, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_GetNPCManager_NPCManager_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_IsAutoTravelerNPCId_ReturnValue) == 0x0000E8, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_IsAutoTravelerNPCId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_IsInvitationTravelerNPCId_ReturnValue) == 0x0000E9, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_IsInvitationTravelerNPCId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_IsFriendNPCId_ReturnValue) == 0x0000EA, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_IsFriendNPCId_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_BooleanOR_ReturnValue) == 0x0000EB, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_GetInstance_ReturnValue) == 0x0000F0, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_BooleanOR_ReturnValue_1) == 0x0000F8, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_GetFriendAppearanceID_ReturnValue) == 0x0000FC, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_GetFriendAppearanceID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_GetNPCAppearanceData_Result) == 0x000104, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_GetNPCAppearanceData_Result' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_GetNPCAppearanceData_DataInfo) == 0x000108, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_GetNPCAppearanceData_DataInfo' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_GetInstance_ReturnValue_1) == 0x0001D0, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_GetInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_GetNpcAppearanceID_ReturnValue) == 0x0001D8, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_GetNpcAppearanceID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_GetNPCManager_NPCManager_2) == 0x0001E0, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_GetNPCManager_NPCManager_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_GetNPCAppearanceData_Result_1) == 0x0001E8, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_GetNPCAppearanceData_Result_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetAppearanceData, CallFunc_GetNPCAppearanceData_DataInfo_1) == 0x0001F0, "Member 'BP_NPC_C_GetAppearanceData::CallFunc_GetNPCAppearanceData_DataInfo_1' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.DebugStatePrint
// 0x0020 (0x0020 - 0x0000)
struct BP_NPC_C_DebugStatePrint final
{
public:
	class FString                                 Str;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_DebugStatePrint) == 0x000008, "Wrong alignment on BP_NPC_C_DebugStatePrint");
static_assert(sizeof(BP_NPC_C_DebugStatePrint) == 0x000020, "Wrong size on BP_NPC_C_DebugStatePrint");
static_assert(offsetof(BP_NPC_C_DebugStatePrint, Str) == 0x000000, "Member 'BP_NPC_C_DebugStatePrint::Str' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugStatePrint, CallFunc_Concat_StrStr_ReturnValue) == 0x000010, "Member 'BP_NPC_C_DebugStatePrint::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.DebugDrawSpawnLocation
// 0x0074 (0x0074 - 0x0000)
struct BP_NPC_C_DebugDrawSpawnLocation final
{
public:
	bool                                          CallFunc_IsDebugFlag_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X;                            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_2;                          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_2;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_2;                          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue_1;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_3;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_3;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_3;                          // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0058(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue_1;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_DebugDrawSpawnLocation) == 0x000004, "Wrong alignment on BP_NPC_C_DebugDrawSpawnLocation");
static_assert(sizeof(BP_NPC_C_DebugDrawSpawnLocation) == 0x000074, "Wrong size on BP_NPC_C_DebugDrawSpawnLocation");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_IsDebugFlag_ReturnValue) == 0x000000, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_IsDebugFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_BreakVector_X) == 0x000004, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_BreakVector_Y) == 0x000008, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_BreakVector_Z) == 0x00000C, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_BreakVector_X_1) == 0x000010, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_BreakVector_Y_1) == 0x000014, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_BreakVector_Z_1) == 0x000018, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00001C, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_Add_FloatFloat_ReturnValue) == 0x000020, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_MakeVector_ReturnValue) == 0x000024, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_MakeVector_ReturnValue_1) == 0x000030, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_BreakVector_X_2) == 0x00003C, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_BreakVector_Y_2) == 0x000040, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_BreakVector_Z_2) == 0x000044, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_Add_FloatFloat_ReturnValue_1) == 0x000048, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_Add_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_BreakVector_X_3) == 0x00004C, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_BreakVector_Y_3) == 0x000050, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_BreakVector_Z_3) == 0x000054, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_MakeVector_ReturnValue_2) == 0x000058, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_Subtract_FloatFloat_ReturnValue_1) == 0x000064, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_Subtract_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_DebugDrawSpawnLocation, CallFunc_MakeVector_ReturnValue_3) == 0x000068, "Member 'BP_NPC_C_DebugDrawSpawnLocation::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.Get Fukidashi Text
// 0x0198 (0x0198 - 0x0000)
struct BP_NPC_C_Get_Fukidashi_Text final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash)
	class FString                                 TalkId;                                            // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextManager*                           CallFunc_GetInstance_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTextInfoWorkData                      CallFunc_GetTextInfo_ReturnValue;                  // 0x0030(0x0050)()
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue_1;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ProcSerifuText_ReturnValue;               // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EQuestState                                   CallFunc_GetQuestStateNPC_ReturnValue;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_UpdateBrancheEventID_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextManager*                           CallFunc_GetInstance_ReturnValue_1;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTextInfoWorkData                      CallFunc_GetTextInfo_ReturnValue_1;                // 0x00D0(0x0050)()
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_AdjustIEQuestTalkID_NewTalkId;            // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_TextToString_ReturnValue_1;          // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UBP_WorldTimeManager_C*                 CallFunc_GetWorldTimeManager_WorldTimeManager;     // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_ProcSerifuText_ReturnValue_1;             // 0x0150(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SerifuToFukidashi_Fukidashi;              // 0x0160(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SerifuToFukidashi_ReturnValue;            // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetFukidashiIDList_ReturnValue;           // 0x0178(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class FString                                 CallFunc_ProcSerifuText_ReturnValue_2;             // 0x0188(0x0010)(ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_Get_Fukidashi_Text) == 0x000008, "Wrong alignment on BP_NPC_C_Get_Fukidashi_Text");
static_assert(sizeof(BP_NPC_C_Get_Fukidashi_Text) == 0x000198, "Wrong size on BP_NPC_C_Get_Fukidashi_Text");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, ReturnValue) == 0x000000, "Member 'BP_NPC_C_Get_Fukidashi_Text::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, TalkId) == 0x000010, "Member 'BP_NPC_C_Get_Fukidashi_Text::TalkId' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000020, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_GetInstance_ReturnValue) == 0x000028, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_GetTextInfo_ReturnValue) == 0x000030, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_GetTextInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_Conv_StringToName_ReturnValue) == 0x000080, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_Conv_TextToString_ReturnValue) == 0x000088, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_Conv_StringToName_ReturnValue_1) == 0x000098, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_Conv_StringToName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_ProcSerifuText_ReturnValue) == 0x0000A0, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_ProcSerifuText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_GetQuestStateNPC_ReturnValue) == 0x0000B0, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_GetQuestStateNPC_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_UpdateBrancheEventID_ReturnValue) == 0x0000B8, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_UpdateBrancheEventID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_Greater_IntInt_ReturnValue) == 0x0000B9, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000BA, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000BB, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_GetInstance_ReturnValue_1) == 0x0000C0, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_GetInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_BooleanOR_ReturnValue) == 0x0000C8, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_GetTextInfo_ReturnValue_1) == 0x0000D0, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_GetTextInfo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_NotEqual_NameName_ReturnValue) == 0x000120, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_AdjustIEQuestTalkID_NewTalkId) == 0x000128, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_AdjustIEQuestTalkID_NewTalkId' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_Conv_TextToString_ReturnValue_1) == 0x000138, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_Conv_TextToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_GetWorldTimeManager_WorldTimeManager) == 0x000148, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_GetWorldTimeManager_WorldTimeManager' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_ProcSerifuText_ReturnValue_1) == 0x000150, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_ProcSerifuText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_SerifuToFukidashi_Fukidashi) == 0x000160, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_SerifuToFukidashi_Fukidashi' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_SerifuToFukidashi_ReturnValue) == 0x000170, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_SerifuToFukidashi_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_GetFukidashiIDList_ReturnValue) == 0x000178, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_GetFukidashiIDList_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_Get_Fukidashi_Text, CallFunc_ProcSerifuText_ReturnValue_2) == 0x000188, "Member 'BP_NPC_C_Get_Fukidashi_Text::CallFunc_ProcSerifuText_ReturnValue_2' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.GetNPCFukisahiOffset
// 0x0034 (0x0034 - 0x0000)
struct BP_NPC_C_GetNPCFukisahiOffset final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetFukidashiOffset_ReturnValue;           // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x001C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_NPC_C_GetNPCFukisahiOffset) == 0x000004, "Wrong alignment on BP_NPC_C_GetNPCFukisahiOffset");
static_assert(sizeof(BP_NPC_C_GetNPCFukisahiOffset) == 0x000034, "Wrong size on BP_NPC_C_GetNPCFukisahiOffset");
static_assert(offsetof(BP_NPC_C_GetNPCFukisahiOffset, ReturnValue) == 0x000000, "Member 'BP_NPC_C_GetNPCFukisahiOffset::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetNPCFukisahiOffset, CallFunc_GetFukidashiOffset_ReturnValue) == 0x00000C, "Member 'BP_NPC_C_GetNPCFukisahiOffset::CallFunc_GetFukidashiOffset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetNPCFukisahiOffset, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000018, "Member 'BP_NPC_C_GetNPCFukisahiOffset::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetNPCFukisahiOffset, CallFunc_K2_GetActorRotation_ReturnValue) == 0x00001C, "Member 'BP_NPC_C_GetNPCFukisahiOffset::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetNPCFukisahiOffset, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000028, "Member 'BP_NPC_C_GetNPCFukisahiOffset::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.ProcTurn
// 0x0038 (0x0038 - 0x0000)
struct BP_NPC_C_ProcTurn final
{
public:
	struct FRotator                               CurrentRotate;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               TargetRotate;                                      // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsSetRotation;                                     // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_RotatorRotator_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_REase_ReturnValue;                        // 0x0028(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_ProcTurn) == 0x000004, "Wrong alignment on BP_NPC_C_ProcTurn");
static_assert(sizeof(BP_NPC_C_ProcTurn) == 0x000038, "Wrong size on BP_NPC_C_ProcTurn");
static_assert(offsetof(BP_NPC_C_ProcTurn, CurrentRotate) == 0x000000, "Member 'BP_NPC_C_ProcTurn::CurrentRotate' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ProcTurn, TargetRotate) == 0x00000C, "Member 'BP_NPC_C_ProcTurn::TargetRotate' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ProcTurn, IsSetRotation) == 0x000018, "Member 'BP_NPC_C_ProcTurn::IsSetRotation' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ProcTurn, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00001C, "Member 'BP_NPC_C_ProcTurn::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ProcTurn, CallFunc_EqualEqual_RotatorRotator_ReturnValue) == 0x000020, "Member 'BP_NPC_C_ProcTurn::CallFunc_EqualEqual_RotatorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ProcTurn, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000024, "Member 'BP_NPC_C_ProcTurn::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ProcTurn, CallFunc_REase_ReturnValue) == 0x000028, "Member 'BP_NPC_C_ProcTurn::CallFunc_REase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_ProcTurn, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000034, "Member 'BP_NPC_C_ProcTurn::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.GetEaseTurnRotation
// 0x003C (0x003C - 0x0000)
struct BP_NPC_C_GetEaseTurnRotation final
{
public:
	struct FRotator                               Current;                                           // 0x0000(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Target;                                            // 0x000C(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Speed;                                             // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               ReturnValue;                                       // 0x001C(0x000C)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_REase_ReturnValue;                        // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_GetEaseTurnRotation) == 0x000004, "Wrong alignment on BP_NPC_C_GetEaseTurnRotation");
static_assert(sizeof(BP_NPC_C_GetEaseTurnRotation) == 0x00003C, "Wrong size on BP_NPC_C_GetEaseTurnRotation");
static_assert(offsetof(BP_NPC_C_GetEaseTurnRotation, Current) == 0x000000, "Member 'BP_NPC_C_GetEaseTurnRotation::Current' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetEaseTurnRotation, Target) == 0x00000C, "Member 'BP_NPC_C_GetEaseTurnRotation::Target' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetEaseTurnRotation, Speed) == 0x000018, "Member 'BP_NPC_C_GetEaseTurnRotation::Speed' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetEaseTurnRotation, ReturnValue) == 0x00001C, "Member 'BP_NPC_C_GetEaseTurnRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetEaseTurnRotation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000028, "Member 'BP_NPC_C_GetEaseTurnRotation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetEaseTurnRotation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'BP_NPC_C_GetEaseTurnRotation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_GetEaseTurnRotation, CallFunc_REase_ReturnValue) == 0x000030, "Member 'BP_NPC_C_GetEaseTurnRotation::CallFunc_REase_ReturnValue' has a wrong offset!");

// Function BP_NPC.BP_NPC_C.SetUIHideByObject
// 0x0010 (0x0010 - 0x0000)
struct BP_NPC_C_SetUIHideByObject final
{
public:
	class UUI3DBase*                              ThreeDUi;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          isForceEnable;                                     // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_NameName_ReturnValue;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_NPC_C_SetUIHideByObject) == 0x000008, "Wrong alignment on BP_NPC_C_SetUIHideByObject");
static_assert(sizeof(BP_NPC_C_SetUIHideByObject) == 0x000010, "Wrong size on BP_NPC_C_SetUIHideByObject");
static_assert(offsetof(BP_NPC_C_SetUIHideByObject, ThreeDUi) == 0x000000, "Member 'BP_NPC_C_SetUIHideByObject::ThreeDUi' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetUIHideByObject, isForceEnable) == 0x000008, "Member 'BP_NPC_C_SetUIHideByObject::isForceEnable' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetUIHideByObject, CallFunc_NotEqual_NameName_ReturnValue) == 0x000009, "Member 'BP_NPC_C_SetUIHideByObject::CallFunc_NotEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_NPC_C_SetUIHideByObject, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'BP_NPC_C_SetUIHideByObject::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

