#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_Darwin

#include "Basic.hpp"

#include "GameplayTags_structs.hpp"
#include "DarwinGame_structs.hpp"
#include "ST_SimultaneousKey_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function BPC_Darwin.BPC_Darwin_C.ExecuteUbergraph_BPC_Darwin
// 0x00F0 (0x00F0 - 0x0000)
struct BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_InputVectorAxisEvent_AxisValue;             // 0x0004(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_InputVectorAxisEvent_AxisValue_2;           // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_InputVectorAxisEvent_AxisValue_1;           // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(float DeltaTime, bool bGamePaused, const struct FKeyInput& InKeyInput, struct FKeyInput* OutKeyInput, struct FEventReply* Output)> K2Node_CreateDelegate_OutputDelegate;              // 0x002C(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAppInputComponent*                     CallFunc_GetAppInputComponent_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetObjectName_ReturnValue;                // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetInputPriority_PLAYER_ReturnValue;      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterInputInterface> K2Node_DynamicCast_AsCharacter_Input_Interface;    // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterInputInterface> K2Node_DynamicCast_AsCharacter_Input_Interface_1;  // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x00A4(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00BC(0x0010)(ZeroConstructor, NoDestructor)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterInputInterface> K2Node_DynamicCast_AsCharacter_Input_Interface_2;  // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin) == 0x000008, "Wrong alignment on BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin");
static_assert(sizeof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin) == 0x0000F0, "Wrong size on BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, EntryPoint) == 0x000000, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, K2Node_InputVectorAxisEvent_AxisValue) == 0x000004, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::K2Node_InputVectorAxisEvent_AxisValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, K2Node_Event_DeltaSeconds) == 0x000010, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, K2Node_InputVectorAxisEvent_AxisValue_2) == 0x000014, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::K2Node_InputVectorAxisEvent_AxisValue_2' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, K2Node_InputVectorAxisEvent_AxisValue_1) == 0x000020, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::K2Node_InputVectorAxisEvent_AxisValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, K2Node_CreateDelegate_OutputDelegate) == 0x00002C, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, CallFunc_K2_GetPawn_ReturnValue) == 0x000040, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, CallFunc_GetAppInputComponent_ReturnValue) == 0x000048, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::CallFunc_GetAppInputComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, CallFunc_GetObjectName_ReturnValue) == 0x000050, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::CallFunc_GetObjectName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, CallFunc_GetInputPriority_PLAYER_ReturnValue) == 0x000060, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::CallFunc_GetInputPriority_PLAYER_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000068, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, K2Node_DynamicCast_AsCharacter_Input_Interface) == 0x000070, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::K2Node_DynamicCast_AsCharacter_Input_Interface' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, CallFunc_GetViewTarget_ReturnValue) == 0x000088, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, K2Node_DynamicCast_AsCharacter_Input_Interface_1) == 0x000090, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::K2Node_DynamicCast_AsCharacter_Input_Interface_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, CallFunc_Normal_ReturnValue) == 0x0000A4, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B0, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000BC, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, CallFunc_K2_GetPawn_ReturnValue_2) == 0x0000D0, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, K2Node_DynamicCast_AsCharacter_Input_Interface_2) == 0x0000D8, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::K2Node_DynamicCast_AsCharacter_Input_Interface_2' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin, K2Node_DynamicCast_bSuccess_2) == 0x0000E8, "Member 'BPC_Darwin_C_ExecuteUbergraph_BPC_Darwin::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.InpAxisKeyEvt_Acceleration_K2Node_InputVectorAxisEvent_2
// 0x000C (0x000C - 0x0000)
struct BPC_Darwin_C_InpAxisKeyEvt_Acceleration_K2Node_InputVectorAxisEvent_2 final
{
public:
	struct FVector                                AxisValue;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_Darwin_C_InpAxisKeyEvt_Acceleration_K2Node_InputVectorAxisEvent_2) == 0x000004, "Wrong alignment on BPC_Darwin_C_InpAxisKeyEvt_Acceleration_K2Node_InputVectorAxisEvent_2");
static_assert(sizeof(BPC_Darwin_C_InpAxisKeyEvt_Acceleration_K2Node_InputVectorAxisEvent_2) == 0x00000C, "Wrong size on BPC_Darwin_C_InpAxisKeyEvt_Acceleration_K2Node_InputVectorAxisEvent_2");
static_assert(offsetof(BPC_Darwin_C_InpAxisKeyEvt_Acceleration_K2Node_InputVectorAxisEvent_2, AxisValue) == 0x000000, "Member 'BPC_Darwin_C_InpAxisKeyEvt_Acceleration_K2Node_InputVectorAxisEvent_2::AxisValue' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.InpAxisKeyEvt_Tilt_K2Node_InputVectorAxisEvent_0
// 0x000C (0x000C - 0x0000)
struct BPC_Darwin_C_InpAxisKeyEvt_Tilt_K2Node_InputVectorAxisEvent_0 final
{
public:
	struct FVector                                AxisValue;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_Darwin_C_InpAxisKeyEvt_Tilt_K2Node_InputVectorAxisEvent_0) == 0x000004, "Wrong alignment on BPC_Darwin_C_InpAxisKeyEvt_Tilt_K2Node_InputVectorAxisEvent_0");
static_assert(sizeof(BPC_Darwin_C_InpAxisKeyEvt_Tilt_K2Node_InputVectorAxisEvent_0) == 0x00000C, "Wrong size on BPC_Darwin_C_InpAxisKeyEvt_Tilt_K2Node_InputVectorAxisEvent_0");
static_assert(offsetof(BPC_Darwin_C_InpAxisKeyEvt_Tilt_K2Node_InputVectorAxisEvent_0, AxisValue) == 0x000000, "Member 'BPC_Darwin_C_InpAxisKeyEvt_Tilt_K2Node_InputVectorAxisEvent_0::AxisValue' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.InpAxisKeyEvt_RotationRate_K2Node_InputVectorAxisEvent_1
// 0x000C (0x000C - 0x0000)
struct BPC_Darwin_C_InpAxisKeyEvt_RotationRate_K2Node_InputVectorAxisEvent_1 final
{
public:
	struct FVector                                AxisValue;                                         // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_Darwin_C_InpAxisKeyEvt_RotationRate_K2Node_InputVectorAxisEvent_1) == 0x000004, "Wrong alignment on BPC_Darwin_C_InpAxisKeyEvt_RotationRate_K2Node_InputVectorAxisEvent_1");
static_assert(sizeof(BPC_Darwin_C_InpAxisKeyEvt_RotationRate_K2Node_InputVectorAxisEvent_1) == 0x00000C, "Wrong size on BPC_Darwin_C_InpAxisKeyEvt_RotationRate_K2Node_InputVectorAxisEvent_1");
static_assert(offsetof(BPC_Darwin_C_InpAxisKeyEvt_RotationRate_K2Node_InputVectorAxisEvent_1, AxisValue) == 0x000000, "Member 'BPC_Darwin_C_InpAxisKeyEvt_RotationRate_K2Node_InputVectorAxisEvent_1::AxisValue' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BPC_Darwin_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_Darwin_C_ReceiveTick) == 0x000004, "Wrong alignment on BPC_Darwin_C_ReceiveTick");
static_assert(sizeof(BPC_Darwin_C_ReceiveTick) == 0x000004, "Wrong size on BPC_Darwin_C_ReceiveTick");
static_assert(offsetof(BPC_Darwin_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BPC_Darwin_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.ProcessInput
// 0x0250 (0x0250 - 0x0000)
struct BPC_Darwin_C_ProcessInput final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          GamePaused;                                        // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyInput                              KeyInput_0;                                        // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FKeyInput                              OutKeyInput;                                       // 0x0018(0x0010)(Parm, OutParm)
	struct FEventReply                            Reply;                                             // 0x0028(0x00B8)(Parm, OutParm)
	EInputType                                    InputTypeLocal;                                    // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyInput                              KeyInputLocal;                                     // 0x00E8(0x0010)(Edit, BlueprintVisible)
	float                                         ValueLocal;                                        // 0x00F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue;               // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetValidValue_ReturnValue;                // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_Conv_IntToByte_ReturnValue_1;             // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_GetEnumeratorValueFromIndex_ReturnValue;  // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOperateCamera_ReturnValue;             // 0x010F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAppWindowFocus_ReturnValue;            // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasAppWindowFocus_ReturnValue_1;          // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0116(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue_1;        // 0x0117(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_AdjustInputValueWithFPS_ReturnValue;      // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AdjustInputValueWithFPS_ReturnValue_1;    // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X_1;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y_1;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z_1;                          // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIsSlowdownTest_ReturnValue;            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanOperateCamera_ReturnValue_1;           // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13B[0x1];                                      // 0x013B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ConvertToPlatformValue_ReturnValue;       // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ConvertToPlatformValue_ReturnValue_1;     // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0148(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0154(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0174(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EInputType                                    CallFunc_GetInputType_ReturnValue;                 // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0198(0x00B8)()
};
static_assert(alignof(BPC_Darwin_C_ProcessInput) == 0x000008, "Wrong alignment on BPC_Darwin_C_ProcessInput");
static_assert(sizeof(BPC_Darwin_C_ProcessInput) == 0x000250, "Wrong size on BPC_Darwin_C_ProcessInput");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, DeltaTime) == 0x000000, "Member 'BPC_Darwin_C_ProcessInput::DeltaTime' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, GamePaused) == 0x000004, "Member 'BPC_Darwin_C_ProcessInput::GamePaused' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, KeyInput_0) == 0x000008, "Member 'BPC_Darwin_C_ProcessInput::KeyInput_0' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, OutKeyInput) == 0x000018, "Member 'BPC_Darwin_C_ProcessInput::OutKeyInput' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, Reply) == 0x000028, "Member 'BPC_Darwin_C_ProcessInput::Reply' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, InputTypeLocal) == 0x0000E0, "Member 'BPC_Darwin_C_ProcessInput::InputTypeLocal' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, KeyInputLocal) == 0x0000E8, "Member 'BPC_Darwin_C_ProcessInput::KeyInputLocal' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, ValueLocal) == 0x0000F8, "Member 'BPC_Darwin_C_ProcessInput::ValueLocal' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, Temp_int_Variable) == 0x0000FC, "Member 'BPC_Darwin_C_ProcessInput::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_Conv_IntToByte_ReturnValue) == 0x000100, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_Conv_IntToByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_GetValidValue_ReturnValue) == 0x000101, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_GetValidValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, Temp_int_Variable_1) == 0x000104, "Member 'BPC_Darwin_C_ProcessInput::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_Add_IntInt_ReturnValue) == 0x000108, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, K2Node_SwitchEnum_CmpSuccess) == 0x00010C, "Member 'BPC_Darwin_C_ProcessInput::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_Conv_IntToByte_ReturnValue_1) == 0x00010D, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_Conv_IntToByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_GetEnumeratorValueFromIndex_ReturnValue) == 0x00010E, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_GetEnumeratorValueFromIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_CanOperateCamera_ReturnValue) == 0x00010F, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_CanOperateCamera_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000110, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_HasAppWindowFocus_ReturnValue) == 0x000114, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_HasAppWindowFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_HasAppWindowFocus_ReturnValue_1) == 0x000115, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_HasAppWindowFocus_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000116, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_NotEqual_FloatFloat_ReturnValue_1) == 0x000117, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_NotEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_AdjustInputValueWithFPS_ReturnValue) == 0x000118, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_AdjustInputValueWithFPS_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_AdjustInputValueWithFPS_ReturnValue_1) == 0x00011C, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_AdjustInputValueWithFPS_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_BreakVector_X) == 0x000120, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_BreakVector_Y) == 0x000124, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_BreakVector_Z) == 0x000128, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_BreakVector_X_1) == 0x00012C, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_BreakVector_Y_1) == 0x000130, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_BreakVector_Z_1) == 0x000134, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_GetIsSlowdownTest_ReturnValue) == 0x000138, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_GetIsSlowdownTest_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000139, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_CanOperateCamera_ReturnValue_1) == 0x00013A, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_CanOperateCamera_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00013C, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_ConvertToPlatformValue_ReturnValue) == 0x000140, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_ConvertToPlatformValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_ConvertToPlatformValue_ReturnValue_1) == 0x000144, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_ConvertToPlatformValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_MakeVector_ReturnValue) == 0x000148, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_MakeVector_ReturnValue_1) == 0x000154, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, K2Node_SwitchEnum_CmpSuccess_1) == 0x000160, "Member 'BPC_Darwin_C_ProcessInput::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_MakeVector_ReturnValue_2) == 0x000164, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_GetValue_ReturnValue) == 0x000170, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_MakeVector_ReturnValue_3) == 0x000174, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_Array_Add_ReturnValue) == 0x000180, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_Array_Add_ReturnValue_1) == 0x000184, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_GetInputType_ReturnValue) == 0x000188, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_GetInputType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_MakeLiteralInt_ReturnValue) == 0x00018C, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_Not_PreBool_ReturnValue) == 0x000190, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_Less_IntInt_ReturnValue) == 0x000191, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessInput, CallFunc_Unhandled_ReturnValue) == 0x000198, "Member 'BPC_Darwin_C_ProcessInput::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.PostProcessInput
// 0x0001 (0x0001 - 0x0000)
struct BPC_Darwin_C_PostProcessInput final
{
public:
	bool                                          CallFunc_ProcessSimultaneousPressedKey_Result;     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_Darwin_C_PostProcessInput) == 0x000001, "Wrong alignment on BPC_Darwin_C_PostProcessInput");
static_assert(sizeof(BPC_Darwin_C_PostProcessInput) == 0x000001, "Wrong size on BPC_Darwin_C_PostProcessInput");
static_assert(offsetof(BPC_Darwin_C_PostProcessInput, CallFunc_ProcessSimultaneousPressedKey_Result) == 0x000000, "Member 'BPC_Darwin_C_PostProcessInput::CallFunc_ProcessSimultaneousPressedKey_Result' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.ProcessPressedKey
// 0x00F0 (0x00F0 - 0x0000)
struct BPC_Darwin_C_ProcessPressedKey final
{
public:
	struct FGameplayTag                           FoundTag;                                          // 0x0000(0x0008)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	int32                                         FoundKeyPriority;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKeyFound;                                        // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	EAxisMappingType                              FoundKey;                                          // 0x000D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterInputInterface> K2Node_DynamicCast_AsCharacter_Input_Interface;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGameplayTag                           CallFunc_GetLMBGameplayTag_ReturnValue;            // 0x004C(0x0008)(NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterInputInterface> K2Node_DynamicCast_AsCharacter_Input_Interface_1;  // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ComboKeyAction_ReturnValue;               // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsOpenQuestMenuDirectly_ReturnValue;      // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetViewTarget_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ADarwinCamera*                          K2Node_DynamicCast_AsDarwin_Camera;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue_1;                 // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_MatchesTag_ReturnValue_2;                 // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Map_Find_Value;                           // 0x00B0(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_3;                 // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterInputInterface> K2Node_DynamicCast_AsCharacter_Input_Interface_2;  // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAxisMappingType                              CallFunc_Array_Get_Item;                           // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FilterFaceButtonInputs_ReturnValue;       // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_DB[0x1];                                       // 0x00DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Map_Find_Value_1;                         // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_Darwin_C_ProcessPressedKey) == 0x000008, "Wrong alignment on BPC_Darwin_C_ProcessPressedKey");
static_assert(sizeof(BPC_Darwin_C_ProcessPressedKey) == 0x0000F0, "Wrong size on BPC_Darwin_C_ProcessPressedKey");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, FoundTag) == 0x000000, "Member 'BPC_Darwin_C_ProcessPressedKey::FoundTag' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, FoundKeyPriority) == 0x000008, "Member 'BPC_Darwin_C_ProcessPressedKey::FoundKeyPriority' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, IsKeyFound) == 0x00000C, "Member 'BPC_Darwin_C_ProcessPressedKey::IsKeyFound' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, FoundKey) == 0x00000D, "Member 'BPC_Darwin_C_ProcessPressedKey::FoundKey' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_K2_GetPawn_ReturnValue) == 0x000010, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, K2Node_DynamicCast_AsCharacter_Input_Interface) == 0x000018, "Member 'BPC_Darwin_C_ProcessPressedKey::K2Node_DynamicCast_AsCharacter_Input_Interface' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BPC_Darwin_C_ProcessPressedKey::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000030, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000038, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, K2Node_DynamicCast_AsPlayer_Character) == 0x000040, "Member 'BPC_Darwin_C_ProcessPressedKey::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'BPC_Darwin_C_ProcessPressedKey::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_GetLMBGameplayTag_ReturnValue) == 0x00004C, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_GetLMBGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000058, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, K2Node_DynamicCast_AsCharacter_Input_Interface_1) == 0x000060, "Member 'BPC_Darwin_C_ProcessPressedKey::K2Node_DynamicCast_AsCharacter_Input_Interface_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, K2Node_DynamicCast_bSuccess_2) == 0x000070, "Member 'BPC_Darwin_C_ProcessPressedKey::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_ComboKeyAction_ReturnValue) == 0x000071, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_ComboKeyAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000072, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_IsOpenQuestMenuDirectly_ReturnValue) == 0x000073, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_IsOpenQuestMenuDirectly_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, Temp_int_Array_Index_Variable) == 0x000074, "Member 'BPC_Darwin_C_ProcessPressedKey::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_MatchesTag_ReturnValue) == 0x000078, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_GetViewTarget_ReturnValue) == 0x000080, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_GetViewTarget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, K2Node_DynamicCast_AsDarwin_Camera) == 0x000088, "Member 'BPC_Darwin_C_ProcessPressedKey::K2Node_DynamicCast_AsDarwin_Camera' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, K2Node_DynamicCast_bSuccess_3) == 0x000090, "Member 'BPC_Darwin_C_ProcessPressedKey::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000091, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000092, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_BooleanOR_ReturnValue) == 0x000093, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000094, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000095, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_MatchesTag_ReturnValue_1) == 0x000096, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_MatchesTag_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_MatchesTag_ReturnValue_2) == 0x000097, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_MatchesTag_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_Concat_StrStr_ReturnValue) == 0x000098, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_Array_Add_ReturnValue) == 0x0000A8, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, Temp_int_Loop_Counter_Variable) == 0x0000AC, "Member 'BPC_Darwin_C_ProcessPressedKey::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_Map_Find_Value) == 0x0000B0, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_Map_Find_ReturnValue) == 0x0000B8, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_Add_IntInt_ReturnValue) == 0x0000BC, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_K2_GetPawn_ReturnValue_3) == 0x0000C0, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_K2_GetPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, K2Node_DynamicCast_AsCharacter_Input_Interface_2) == 0x0000C8, "Member 'BPC_Darwin_C_ProcessPressedKey::K2Node_DynamicCast_AsCharacter_Input_Interface_2' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, K2Node_DynamicCast_bSuccess_4) == 0x0000D8, "Member 'BPC_Darwin_C_ProcessPressedKey::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_Array_Get_Item) == 0x0000D9, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_FilterFaceButtonInputs_ReturnValue) == 0x0000DA, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_FilterFaceButtonInputs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_Map_Find_Value_1) == 0x0000DC, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_Map_Find_ReturnValue_1) == 0x0000E0, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_Array_Length_ReturnValue) == 0x0000E4, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessPressedKey, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000E9, "Member 'BPC_Darwin_C_ProcessPressedKey::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.ProcessReleasedKey
// 0x00C0 (0x00C0 - 0x0000)
struct BPC_Darwin_C_ProcessReleasedKey final
{
public:
	EAxisMappingType                              KeyLocal;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAxisMappingType                              CallFunc_GetInteractFirstSimultaneousKey_FirstKey; // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGameplayTag                           CallFunc_Map_Find_Value;                           // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterInputInterface> K2Node_DynamicCast_AsCharacter_Input_Interface;    // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugStringFromGameplayTag_ReturnValue; // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_MatchesTag_ReturnValue;                   // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EAxisMappingType                              CallFunc_Array_Get_Item;                           // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B3[0x1];                                       // 0x00B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_Darwin_C_ProcessReleasedKey) == 0x000008, "Wrong alignment on BPC_Darwin_C_ProcessReleasedKey");
static_assert(sizeof(BPC_Darwin_C_ProcessReleasedKey) == 0x0000C0, "Wrong size on BPC_Darwin_C_ProcessReleasedKey");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, KeyLocal) == 0x000000, "Member 'BPC_Darwin_C_ProcessReleasedKey::KeyLocal' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_Concat_StrStr_ReturnValue) == 0x000008, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000018, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BPC_Darwin_C_ProcessReleasedKey::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'BPC_Darwin_C_ProcessReleasedKey::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000034, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000035, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000036, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_BooleanOR_ReturnValue) == 0x000037, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_GetInteractFirstSimultaneousKey_FirstKey) == 0x000038, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_GetInteractFirstSimultaneousKey_FirstKey' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000039, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000040, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000050, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_K2_GetPawn_ReturnValue) == 0x000058, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_Map_Find_Value) == 0x000060, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_Map_Find_ReturnValue) == 0x000068, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, K2Node_DynamicCast_AsCharacter_Input_Interface) == 0x000070, "Member 'BPC_Darwin_C_ProcessReleasedKey::K2Node_DynamicCast_AsCharacter_Input_Interface' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'BPC_Darwin_C_ProcessReleasedKey::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_GetDebugStringFromGameplayTag_ReturnValue) == 0x000088, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_GetDebugStringFromGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_MatchesTag_ReturnValue) == 0x000098, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_MatchesTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000A0, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_Array_RemoveItem_ReturnValue) == 0x0000B0, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_Array_Get_Item) == 0x0000B1, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_Array_Contains_ReturnValue) == 0x0000B2, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_Array_Length_ReturnValue) == 0x0000B4, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0000B8, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessReleasedKey, CallFunc_Max_ReturnValue) == 0x0000BC, "Member 'BPC_Darwin_C_ProcessReleasedKey::CallFunc_Max_ReturnValue' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.ProcessSimultaneousPressedKey
// 0x00C0 (0x00C0 - 0x0000)
struct BPC_Darwin_C_ProcessSimultaneousPressedKey final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_SimultaneousKey                    TmpFoundKey;                                       // 0x0004(0x0010)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          IsKeyFound;                                        // 0x0014(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_SimultaneousKey                    FoundKey;                                          // 0x0018(0x0010)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_SimultaneousKey                    CallFunc_Array_Get_Item;                           // 0x002C(0x0010)(NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_InputFunction_C>   K2Node_DynamicCast_AsBI_Input_Function;            // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDebugStringFromGameplayTag_ReturnValue; // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_GameplayTag_ReturnValue;         // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_Darwin_C_ProcessSimultaneousPressedKey) == 0x000008, "Wrong alignment on BPC_Darwin_C_ProcessSimultaneousPressedKey");
static_assert(sizeof(BPC_Darwin_C_ProcessSimultaneousPressedKey) == 0x0000C0, "Wrong size on BPC_Darwin_C_ProcessSimultaneousPressedKey");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, Result) == 0x000000, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::Result' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, TmpFoundKey) == 0x000004, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::TmpFoundKey' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, IsKeyFound) == 0x000014, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::IsKeyFound' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, FoundKey) == 0x000018, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::FoundKey' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, Temp_int_Array_Index_Variable) == 0x000028, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, Temp_int_Loop_Counter_Variable) == 0x000064, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, CallFunc_Less_IntInt_ReturnValue_1) == 0x000068, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, CallFunc_Add_IntInt_ReturnValue) == 0x00006C, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, CallFunc_K2_GetPawn_ReturnValue) == 0x000070, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, K2Node_DynamicCast_AsBI_Input_Function) == 0x000078, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::K2Node_DynamicCast_AsBI_Input_Function' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, K2Node_DynamicCast_bSuccess) == 0x000088, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, CallFunc_Array_Contains_ReturnValue) == 0x000089, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, CallFunc_Array_Contains_ReturnValue_1) == 0x00008A, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, CallFunc_GetDebugStringFromGameplayTag_ReturnValue) == 0x000090, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::CallFunc_GetDebugStringFromGameplayTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, CallFunc_BooleanAND_ReturnValue) == 0x0000A0, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000A8, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ProcessSimultaneousPressedKey, CallFunc_NotEqual_GameplayTag_ReturnValue) == 0x0000B8, "Member 'BPC_Darwin_C_ProcessSimultaneousPressedKey::CallFunc_NotEqual_GameplayTag_ReturnValue' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.ConvertToPlatformValue
// 0x0028 (0x0028 - 0x0000)
struct BPC_Darwin_C_ConvertToPlatformValue final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_Darwin_C_ConvertToPlatformValue) == 0x000008, "Wrong alignment on BPC_Darwin_C_ConvertToPlatformValue");
static_assert(sizeof(BPC_Darwin_C_ConvertToPlatformValue) == 0x000028, "Wrong size on BPC_Darwin_C_ConvertToPlatformValue");
static_assert(offsetof(BPC_Darwin_C_ConvertToPlatformValue, Value) == 0x000000, "Member 'BPC_Darwin_C_ConvertToPlatformValue::Value' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ConvertToPlatformValue, ReturnValue) == 0x000004, "Member 'BPC_Darwin_C_ConvertToPlatformValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ConvertToPlatformValue, CallFunc_GetPlatformName_ReturnValue) == 0x000008, "Member 'BPC_Darwin_C_ConvertToPlatformValue::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ConvertToPlatformValue, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'BPC_Darwin_C_ConvertToPlatformValue::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ConvertToPlatformValue, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00001C, "Member 'BPC_Darwin_C_ConvertToPlatformValue::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_ConvertToPlatformValue, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'BPC_Darwin_C_ConvertToPlatformValue::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.OpenMainMenu
// 0x0010 (0x0010 - 0x0000)
struct BPC_Darwin_C_OpenMainMenu final
{
public:
	bool                                          CallFunc_CanOpenMainMenu_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDarwinUserWidget*                      CallFunc_GetMainMenu_Result;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_Darwin_C_OpenMainMenu) == 0x000008, "Wrong alignment on BPC_Darwin_C_OpenMainMenu");
static_assert(sizeof(BPC_Darwin_C_OpenMainMenu) == 0x000010, "Wrong size on BPC_Darwin_C_OpenMainMenu");
static_assert(offsetof(BPC_Darwin_C_OpenMainMenu, CallFunc_CanOpenMainMenu_ReturnValue) == 0x000000, "Member 'BPC_Darwin_C_OpenMainMenu::CallFunc_CanOpenMainMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_OpenMainMenu, CallFunc_GetMainMenu_Result) == 0x000008, "Member 'BPC_Darwin_C_OpenMainMenu::CallFunc_GetMainMenu_Result' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.OpenMapMenu
// 0x0010 (0x0010 - 0x0000)
struct BPC_Darwin_C_OpenMapMenu final
{
public:
	bool                                          CallFunc_CanOpenMapMenu_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MapMenu_Root_C*                      CallFunc_GetWidgetFromClass_OutWidget;             // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_Darwin_C_OpenMapMenu) == 0x000008, "Wrong alignment on BPC_Darwin_C_OpenMapMenu");
static_assert(sizeof(BPC_Darwin_C_OpenMapMenu) == 0x000010, "Wrong size on BPC_Darwin_C_OpenMapMenu");
static_assert(offsetof(BPC_Darwin_C_OpenMapMenu, CallFunc_CanOpenMapMenu_ReturnValue) == 0x000000, "Member 'BPC_Darwin_C_OpenMapMenu::CallFunc_CanOpenMapMenu_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_OpenMapMenu, CallFunc_GetWidgetFromClass_OutWidget) == 0x000008, "Member 'BPC_Darwin_C_OpenMapMenu::CallFunc_GetWidgetFromClass_OutWidget' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.Interrupted Input
// 0x0030 (0x0030 - 0x0000)
struct BPC_Darwin_C_Interrupted_Input final
{
public:
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterInputInterface> K2Node_DynamicCast_AsCharacter_Input_Interface;    // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_Darwin_C_Interrupted_Input) == 0x000008, "Wrong alignment on BPC_Darwin_C_Interrupted_Input");
static_assert(sizeof(BPC_Darwin_C_Interrupted_Input) == 0x000030, "Wrong size on BPC_Darwin_C_Interrupted_Input");
static_assert(offsetof(BPC_Darwin_C_Interrupted_Input, CallFunc_GetPlayerPawn_ReturnValue) == 0x000000, "Member 'BPC_Darwin_C_Interrupted_Input::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_Interrupted_Input, K2Node_DynamicCast_AsPlayer_Character) == 0x000008, "Member 'BPC_Darwin_C_Interrupted_Input::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_Interrupted_Input, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'BPC_Darwin_C_Interrupted_Input::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_Interrupted_Input, K2Node_DynamicCast_AsCharacter_Input_Interface) == 0x000018, "Member 'BPC_Darwin_C_Interrupted_Input::K2Node_DynamicCast_AsCharacter_Input_Interface' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_Interrupted_Input, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'BPC_Darwin_C_Interrupted_Input::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.SetLeftAnalogStickInputX
// 0x002C (0x002C - 0x0000)
struct BPC_Darwin_C_SetLeftAnalogStickInputX final
{
public:
	float                                         ValueLocal;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TempVector;                                        // 0x0004(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ConvertToPlatformValue_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_Darwin_C_SetLeftAnalogStickInputX) == 0x000004, "Wrong alignment on BPC_Darwin_C_SetLeftAnalogStickInputX");
static_assert(sizeof(BPC_Darwin_C_SetLeftAnalogStickInputX) == 0x00002C, "Wrong size on BPC_Darwin_C_SetLeftAnalogStickInputX");
static_assert(offsetof(BPC_Darwin_C_SetLeftAnalogStickInputX, ValueLocal) == 0x000000, "Member 'BPC_Darwin_C_SetLeftAnalogStickInputX::ValueLocal' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_SetLeftAnalogStickInputX, TempVector) == 0x000004, "Member 'BPC_Darwin_C_SetLeftAnalogStickInputX::TempVector' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_SetLeftAnalogStickInputX, CallFunc_ConvertToPlatformValue_ReturnValue) == 0x000010, "Member 'BPC_Darwin_C_SetLeftAnalogStickInputX::CallFunc_ConvertToPlatformValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_SetLeftAnalogStickInputX, CallFunc_BreakVector_X) == 0x000014, "Member 'BPC_Darwin_C_SetLeftAnalogStickInputX::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_SetLeftAnalogStickInputX, CallFunc_BreakVector_Y) == 0x000018, "Member 'BPC_Darwin_C_SetLeftAnalogStickInputX::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_SetLeftAnalogStickInputX, CallFunc_BreakVector_Z) == 0x00001C, "Member 'BPC_Darwin_C_SetLeftAnalogStickInputX::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_SetLeftAnalogStickInputX, CallFunc_MakeVector_ReturnValue) == 0x000020, "Member 'BPC_Darwin_C_SetLeftAnalogStickInputX::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.SetLeftAnalogStickInputY
// 0x0020 (0x0020 - 0x0000)
struct BPC_Darwin_C_SetLeftAnalogStickInputY final
{
public:
	float                                         ValueLocal;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ConvertToPlatformValue_ReturnValue;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_Darwin_C_SetLeftAnalogStickInputY) == 0x000004, "Wrong alignment on BPC_Darwin_C_SetLeftAnalogStickInputY");
static_assert(sizeof(BPC_Darwin_C_SetLeftAnalogStickInputY) == 0x000020, "Wrong size on BPC_Darwin_C_SetLeftAnalogStickInputY");
static_assert(offsetof(BPC_Darwin_C_SetLeftAnalogStickInputY, ValueLocal) == 0x000000, "Member 'BPC_Darwin_C_SetLeftAnalogStickInputY::ValueLocal' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_SetLeftAnalogStickInputY, CallFunc_ConvertToPlatformValue_ReturnValue) == 0x000004, "Member 'BPC_Darwin_C_SetLeftAnalogStickInputY::CallFunc_ConvertToPlatformValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_SetLeftAnalogStickInputY, CallFunc_BreakVector_X) == 0x000008, "Member 'BPC_Darwin_C_SetLeftAnalogStickInputY::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_SetLeftAnalogStickInputY, CallFunc_BreakVector_Y) == 0x00000C, "Member 'BPC_Darwin_C_SetLeftAnalogStickInputY::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_SetLeftAnalogStickInputY, CallFunc_BreakVector_Z) == 0x000010, "Member 'BPC_Darwin_C_SetLeftAnalogStickInputY::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_SetLeftAnalogStickInputY, CallFunc_MakeVector_ReturnValue) == 0x000014, "Member 'BPC_Darwin_C_SetLeftAnalogStickInputY::CallFunc_MakeVector_ReturnValue' has a wrong offset!");

// Function BPC_Darwin.BPC_Darwin_C.GetInteractFirstSimultaneousKey
// 0x0038 (0x0038 - 0x0000)
struct BPC_Darwin_C_GetInteractFirstSimultaneousKey final
{
public:
	TArray<EAxisMappingType>                      PressedKeysStack;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	EAxisMappingType                              FirstKey;                                          // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         IndexFoundKeyA;                                    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IndexFoundKeyLMB;                                  // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EAxisMappingType                              CallFunc_Array_Get_Item;                           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BPC_Darwin_C_GetInteractFirstSimultaneousKey) == 0x000008, "Wrong alignment on BPC_Darwin_C_GetInteractFirstSimultaneousKey");
static_assert(sizeof(BPC_Darwin_C_GetInteractFirstSimultaneousKey) == 0x000038, "Wrong size on BPC_Darwin_C_GetInteractFirstSimultaneousKey");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, PressedKeysStack) == 0x000000, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::PressedKeysStack' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, FirstKey) == 0x000010, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::FirstKey' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, IndexFoundKeyA) == 0x000014, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::IndexFoundKeyA' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, IndexFoundKeyLMB) == 0x000018, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::IndexFoundKeyLMB' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, CallFunc_Array_Get_Item) == 0x000028, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000029, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00002A, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, CallFunc_Less_IntInt_ReturnValue) == 0x00002B, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, CallFunc_Less_IntInt_ReturnValue_1) == 0x000030, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000031, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x000032, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_Darwin_C_GetInteractFirstSimultaneousKey, CallFunc_BooleanAND_ReturnValue) == 0x000033, "Member 'BPC_Darwin_C_GetInteractFirstSimultaneousKey::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

