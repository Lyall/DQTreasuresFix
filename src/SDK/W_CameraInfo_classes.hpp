#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_CameraInfo

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_CameraInfo.W_CameraInfo_C
// 0x0028 (0x0260 - 0x0238)
class UW_CameraInfo_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0238(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             Angle;                                             // 0x0240(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             GazeHieght;                                        // 0x0248(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_0;                                           // 0x0250(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Length;                                            // 0x0258(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_CameraInfo(int32 EntryPoint);
	void SetGazePointHeight(float Height);
	void SetCameraAngle(int32 Angle_0);
	void SetBoomLength(float Length_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_CameraInfo_C">();
	}
	static class UW_CameraInfo_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_CameraInfo_C>();
	}
};
static_assert(alignof(UW_CameraInfo_C) == 0x000008, "Wrong alignment on UW_CameraInfo_C");
static_assert(sizeof(UW_CameraInfo_C) == 0x000260, "Wrong size on UW_CameraInfo_C");
static_assert(offsetof(UW_CameraInfo_C, UberGraphFrame) == 0x000238, "Member 'UW_CameraInfo_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_CameraInfo_C, Angle) == 0x000240, "Member 'UW_CameraInfo_C::Angle' has a wrong offset!");
static_assert(offsetof(UW_CameraInfo_C, GazeHieght) == 0x000248, "Member 'UW_CameraInfo_C::GazeHieght' has a wrong offset!");
static_assert(offsetof(UW_CameraInfo_C, Image_0) == 0x000250, "Member 'UW_CameraInfo_C::Image_0' has a wrong offset!");
static_assert(offsetof(UW_CameraInfo_C, Length) == 0x000258, "Member 'UW_CameraInfo_C::Length' has a wrong offset!");

}

