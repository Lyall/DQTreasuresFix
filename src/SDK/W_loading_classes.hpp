#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_loading

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_loading.W_Loading_C
// 0x0038 (0x0500 - 0x04C8)
class UW_Loading_C final : public UUILoading
{
public:
	class UWidgetAnimation*                       Wait;                                              // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BlackBase;                                         // 0x04E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loading_Run_C*                       W_Loading_Run;                                     // 0x04E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loading_Win_Tutorial_C*              W_Loading_Win_Tutorial;                            // 0x04F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Loading_Train_C*                     W_NowLoading_Train;                                // 0x04F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Loading_C">();
	}
	static class UW_Loading_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Loading_C>();
	}
};
static_assert(alignof(UW_Loading_C) == 0x000008, "Wrong alignment on UW_Loading_C");
static_assert(sizeof(UW_Loading_C) == 0x000500, "Wrong size on UW_Loading_C");
static_assert(offsetof(UW_Loading_C, Wait) == 0x0004C8, "Member 'UW_Loading_C::Wait' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, Out) == 0x0004D0, "Member 'UW_Loading_C::Out' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, In) == 0x0004D8, "Member 'UW_Loading_C::In' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, BlackBase) == 0x0004E0, "Member 'UW_Loading_C::BlackBase' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, W_Loading_Run) == 0x0004E8, "Member 'UW_Loading_C::W_Loading_Run' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, W_Loading_Win_Tutorial) == 0x0004F0, "Member 'UW_Loading_C::W_Loading_Win_Tutorial' has a wrong offset!");
static_assert(offsetof(UW_Loading_C, W_NowLoading_Train) == 0x0004F8, "Member 'UW_Loading_C::W_NowLoading_Train' has a wrong offset!");

}

