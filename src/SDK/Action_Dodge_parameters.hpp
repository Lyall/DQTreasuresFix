#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Action_Dodge

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DarwinGame_structs.hpp"


namespace SDK::Params
{

// Function Action_Dodge.Action_Dodge_C.GetGroundDodgeRotationAndType
// 0x0098 (0x0098 - 0x0000)
struct Action_Dodge_C_GetGroundDodgeRotationAndType final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EDodgeType                                    Type;                                              // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                TargetDirection;                                   // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDodgeType                                    tmpDodgeType;                                      // 0x001C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               tmpMoveRotation;                                   // 0x0020(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsInputToward;                                     // 0x002C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetInputRotation_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0068(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetCurrentActiveMontage_ReturnValue;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x008C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Action_Dodge_C_GetGroundDodgeRotationAndType) == 0x000008, "Wrong alignment on Action_Dodge_C_GetGroundDodgeRotationAndType");
static_assert(sizeof(Action_Dodge_C_GetGroundDodgeRotationAndType) == 0x000098, "Wrong size on Action_Dodge_C_GetGroundDodgeRotationAndType");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, Rotation) == 0x000000, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::Rotation' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, Type) == 0x00000C, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::Type' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, TargetDirection) == 0x000010, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::TargetDirection' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, tmpDodgeType) == 0x00001C, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::tmpDodgeType' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, tmpMoveRotation) == 0x000020, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::tmpMoveRotation' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, IsInputToward) == 0x00002C, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::IsInputToward' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_DegCos_ReturnValue) == 0x000030, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_GetInputRotation_ReturnValue) == 0x000038, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_GetInputRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_GetForwardVector_ReturnValue) == 0x000044, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_Dot_VectorVector_ReturnValue) == 0x000050, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000054, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_BreakRotator_Roll) == 0x000058, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_BreakRotator_Pitch) == 0x00005C, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_BreakRotator_Yaw) == 0x000060, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_Add_FloatFloat_ReturnValue) == 0x000064, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_MakeRotator_ReturnValue) == 0x000068, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_GetAnimInstance_ReturnValue) == 0x000078, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_GetCurrentActiveMontage_ReturnValue) == 0x000080, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_GetCurrentActiveMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetGroundDodgeRotationAndType, CallFunc_GetActorForwardVector_ReturnValue) == 0x00008C, "Member 'Action_Dodge_C_GetGroundDodgeRotationAndType::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");

// Function Action_Dodge.Action_Dodge_C.GetDodgeRotation
// 0x0064 (0x0064 - 0x0000)
struct Action_Dodge_C_GetDodgeRotation final
{
public:
	EDodgeType                                    DodgeType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Rotation;                                          // 0x0004(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               DodgeRotation;                                     // 0x0010(0x000C)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetMoveRotation_ReturnValue;              // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x0050(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Dot_VectorVector_ReturnValue;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Action_Dodge_C_GetDodgeRotation) == 0x000004, "Wrong alignment on Action_Dodge_C_GetDodgeRotation");
static_assert(sizeof(Action_Dodge_C_GetDodgeRotation) == 0x000064, "Wrong size on Action_Dodge_C_GetDodgeRotation");
static_assert(offsetof(Action_Dodge_C_GetDodgeRotation, DodgeType) == 0x000000, "Member 'Action_Dodge_C_GetDodgeRotation::DodgeType' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetDodgeRotation, Rotation) == 0x000004, "Member 'Action_Dodge_C_GetDodgeRotation::Rotation' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetDodgeRotation, DodgeRotation) == 0x000010, "Member 'Action_Dodge_C_GetDodgeRotation::DodgeRotation' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetDodgeRotation, CallFunc_BreakRotator_Roll) == 0x00001C, "Member 'Action_Dodge_C_GetDodgeRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetDodgeRotation, CallFunc_BreakRotator_Pitch) == 0x000020, "Member 'Action_Dodge_C_GetDodgeRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetDodgeRotation, CallFunc_BreakRotator_Yaw) == 0x000024, "Member 'Action_Dodge_C_GetDodgeRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetDodgeRotation, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000028, "Member 'Action_Dodge_C_GetDodgeRotation::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetDodgeRotation, CallFunc_MakeRotator_ReturnValue) == 0x00002C, "Member 'Action_Dodge_C_GetDodgeRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetDodgeRotation, CallFunc_GetForwardVector_ReturnValue) == 0x000038, "Member 'Action_Dodge_C_GetDodgeRotation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetDodgeRotation, CallFunc_GetMoveRotation_ReturnValue) == 0x000044, "Member 'Action_Dodge_C_GetDodgeRotation::CallFunc_GetMoveRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetDodgeRotation, CallFunc_GetActorForwardVector_ReturnValue) == 0x000050, "Member 'Action_Dodge_C_GetDodgeRotation::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetDodgeRotation, CallFunc_Dot_VectorVector_ReturnValue) == 0x00005C, "Member 'Action_Dodge_C_GetDodgeRotation::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_GetDodgeRotation, CallFunc_Less_FloatFloat_ReturnValue) == 0x000060, "Member 'Action_Dodge_C_GetDodgeRotation::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function Action_Dodge.Action_Dodge_C.Action
// 0x0001 (0x0001 - 0x0000)
struct Action_Dodge_C_Action final
{
public:
	EDodgeType                                    Type;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Action_Dodge_C_Action) == 0x000001, "Wrong alignment on Action_Dodge_C_Action");
static_assert(sizeof(Action_Dodge_C_Action) == 0x000001, "Wrong size on Action_Dodge_C_Action");
static_assert(offsetof(Action_Dodge_C_Action, Type) == 0x000000, "Member 'Action_Dodge_C_Action::Type' has a wrong offset!");

// Function Action_Dodge.Action_Dodge_C.Button_Y
// 0x0001 (0x0001 - 0x0000)
struct Action_Dodge_C_Button_Y final
{
public:
	bool                                          bRelease;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Action_Dodge_C_Button_Y) == 0x000001, "Wrong alignment on Action_Dodge_C_Button_Y");
static_assert(sizeof(Action_Dodge_C_Button_Y) == 0x000001, "Wrong size on Action_Dodge_C_Button_Y");
static_assert(offsetof(Action_Dodge_C_Button_Y, bRelease) == 0x000000, "Member 'Action_Dodge_C_Button_Y::bRelease' has a wrong offset!");

// Function Action_Dodge.Action_Dodge_C.ExecuteUbergraph_Action_Dodge
// 0x0100 (0x0100 - 0x0000)
struct Action_Dodge_C_ExecuteUbergraph_Action_Dodge final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDodgeType                                    K2Node_CustomEvent_Type;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface;          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_GetEnumeratorName_ReturnValue;            // 0x001C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Split_LeftS;                              // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface_1;        // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_FindBattleMotionData_ReturnValue;         // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface_2;        // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface_3;        // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_ExecuteAbility_ReturnValue;               // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface_4;        // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetGroundDodgeRotationAndType_Rotation;   // 0x00DC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDodgeType                                    CallFunc_GetGroundDodgeRotationAndType_Type;       // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExecuteAbility_ReturnValue_1;             // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EB[0x5];                                       // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCharacter*                       K2Node_DynamicCast_AsPlayer_Character;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_bRelease;                             // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge) == 0x000008, "Wrong alignment on Action_Dodge_C_ExecuteUbergraph_Action_Dodge");
static_assert(sizeof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge) == 0x000100, "Wrong size on Action_Dodge_C_ExecuteUbergraph_Action_Dodge");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, EntryPoint) == 0x000000, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::EntryPoint' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, K2Node_CustomEvent_Type) == 0x000004, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::K2Node_CustomEvent_Type' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, K2Node_DynamicCast_AsCharacter_Interface) == 0x000008, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::K2Node_DynamicCast_AsCharacter_Interface' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, CallFunc_GetEnumeratorName_ReturnValue) == 0x00001C, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::CallFunc_GetEnumeratorName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, CallFunc_Conv_NameToString_ReturnValue) == 0x000028, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000038, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, CallFunc_Split_LeftS) == 0x000040, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, CallFunc_Split_RightS) == 0x000050, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, CallFunc_Split_ReturnValue) == 0x000060, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, CallFunc_Concat_StrStr_ReturnValue) == 0x000068, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, CallFunc_Conv_StringToName_ReturnValue) == 0x000078, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, K2Node_DynamicCast_AsCharacter_Interface_1) == 0x000080, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::K2Node_DynamicCast_AsCharacter_Interface_1' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, CallFunc_FindBattleMotionData_ReturnValue) == 0x000091, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::CallFunc_FindBattleMotionData_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, K2Node_DynamicCast_AsCharacter_Interface_2) == 0x000098, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::K2Node_DynamicCast_AsCharacter_Interface_2' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, K2Node_DynamicCast_AsCharacter_Interface_3) == 0x0000B0, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::K2Node_DynamicCast_AsCharacter_Interface_3' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, K2Node_DynamicCast_bSuccess_3) == 0x0000C0, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, CallFunc_ExecuteAbility_ReturnValue) == 0x0000C1, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::CallFunc_ExecuteAbility_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, K2Node_DynamicCast_AsCharacter_Interface_4) == 0x0000C8, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::K2Node_DynamicCast_AsCharacter_Interface_4' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, K2Node_DynamicCast_bSuccess_4) == 0x0000D8, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, CallFunc_GetGroundDodgeRotationAndType_Rotation) == 0x0000DC, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::CallFunc_GetGroundDodgeRotationAndType_Rotation' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, CallFunc_GetGroundDodgeRotationAndType_Type) == 0x0000E8, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::CallFunc_GetGroundDodgeRotationAndType_Type' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, CallFunc_ExecuteAbility_ReturnValue_1) == 0x0000E9, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::CallFunc_ExecuteAbility_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0000EA, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, K2Node_DynamicCast_AsPlayer_Character) == 0x0000F0, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::K2Node_DynamicCast_AsPlayer_Character' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, K2Node_DynamicCast_bSuccess_5) == 0x0000F8, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Action_Dodge_C_ExecuteUbergraph_Action_Dodge, K2Node_Event_bRelease) == 0x0000F9, "Member 'Action_Dodge_C_ExecuteUbergraph_Action_Dodge::K2Node_Event_bRelease' has a wrong offset!");

}

