#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FastTravelComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DarwinGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_FastTravelComponent.BP_FastTravelComponent_C
// 0x0020 (0x00D8 - 0x00B8)
class UBP_FastTravelComponent_C final : public UFastTravelComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00B8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          IsFastTravel;                                      // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         LineTraceLength;                                   // 0x00C4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TotalWaitTime;                                     // 0x00C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DelayTime;                                         // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         LimitWaitTime;                                     // 0x00D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_FastTravelComponent(int32 EntryPoint);
	void OnMoveCore(const struct FFastTravelInfo& Info);
	void FadeOutEnd();
	void OnMove(int32 ID);
	void UpdateDebug();
	void FinishFastTravel(class AGPACharacter* Character, const struct FFastTravelInfo& FastTravelInfo);
	void MoveToPlayer(const struct FFastTravelInfo& FastTravelInfo, class AGPACharacter* PlayerActor, class AActor* CameraActor);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void InitializeDebug();
	bool GetFootActor(class AActor* InputPin, class AActor** Out_Hit_Hit_Actor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_FastTravelComponent_C">();
	}
	static class UBP_FastTravelComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_FastTravelComponent_C>();
	}
};
static_assert(alignof(UBP_FastTravelComponent_C) == 0x000008, "Wrong alignment on UBP_FastTravelComponent_C");
static_assert(sizeof(UBP_FastTravelComponent_C) == 0x0000D8, "Wrong size on UBP_FastTravelComponent_C");
static_assert(offsetof(UBP_FastTravelComponent_C, UberGraphFrame) == 0x0000B8, "Member 'UBP_FastTravelComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_FastTravelComponent_C, IsFastTravel) == 0x0000C0, "Member 'UBP_FastTravelComponent_C::IsFastTravel' has a wrong offset!");
static_assert(offsetof(UBP_FastTravelComponent_C, LineTraceLength) == 0x0000C4, "Member 'UBP_FastTravelComponent_C::LineTraceLength' has a wrong offset!");
static_assert(offsetof(UBP_FastTravelComponent_C, TotalWaitTime) == 0x0000C8, "Member 'UBP_FastTravelComponent_C::TotalWaitTime' has a wrong offset!");
static_assert(offsetof(UBP_FastTravelComponent_C, DelayTime) == 0x0000CC, "Member 'UBP_FastTravelComponent_C::DelayTime' has a wrong offset!");
static_assert(offsetof(UBP_FastTravelComponent_C, LimitWaitTime) == 0x0000D0, "Member 'UBP_FastTravelComponent_C::LimitWaitTime' has a wrong offset!");

}

