#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventSender

#include "Basic.hpp"

#include "DarwinGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_EventSender.BP_EventSender_C.ExecuteUbergraph_BP_EventSender
// 0x0158 (0x0158 - 0x0000)
struct BP_EventSender_C_ExecuteUbergraph_BP_EventSender final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayEvent_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EvetSystemManagerActor_C*           CallFunc_GetBP_EventSystemManager_BP_Evet_System_Manager_Actor; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_LiftId;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_StarScarId;                     // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventManager_C*                     CallFunc_GetBPEventManager_AsBP_Event_Manager;     // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBI_EventTrigger_C>    CallFunc_EndOverlapEventTrigger_self_CastInput;    // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSendEvent_Return;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanSendEvent_Return_1;                    // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameDataFlag*                          CallFunc_GetGameDataFlag_GameDataFlag;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_EvetSystemManagerActor_C*           CallFunc_GetBP_EventSystemManager_BP_Evet_System_Manager_Actor_1; // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_EventManager_C*                     CallFunc_GetBPEventManager_AsBP_Event_Manager_1;   // 0x0080(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_CallEventID;                          // 0x0088(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_MovePostion;                          // 0x0090(0x000C)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_MoveTime;                             // 0x009C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSendEvent_Return_2;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsEventCancel;                        // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_EventSender_C*                      K2Node_Event_EventSender;                          // 0x00A8(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_LiftId;                               // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_StarScarId;                           // 0x00B4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_NPC_C*                              K2Node_Event_SendActor;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_EventID_1;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        K2Node_Event_Sender_1;                             // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_DebugMode;                            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_EventID;                              // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EEventType                                    K2Node_Event_EventType;                            // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x3];                                       // 0x00F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_QuestID;                              // 0x00F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   K2Node_Event_QuestState;                           // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EventTalktBranchData               K2Node_Event_TextBranchData;                       // 0x0100(0x0020)(ConstParm)
	TArray<struct FST_TextGoto>                   K2Node_Event_TextGotoData;                         // 0x0120(0x0010)(ConstParm, ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Sender;                               // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Player_C*                           K2Node_DynamicCast_AsBP_Player;                    // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender) == 0x000008, "Wrong alignment on BP_EventSender_C_ExecuteUbergraph_BP_EventSender");
static_assert(sizeof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender) == 0x000158, "Wrong size on BP_EventSender_C_ExecuteUbergraph_BP_EventSender");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, EntryPoint) == 0x000000, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_GetInstance_ReturnValue) == 0x000008, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_IsPlayEvent_ReturnValue) == 0x000010, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_IsPlayEvent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_GetBP_EventSystemManager_BP_Evet_System_Manager_Actor) == 0x000018, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_GetBP_EventSystemManager_BP_Evet_System_Manager_Actor' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_CustomEvent_LiftId) == 0x000020, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_CustomEvent_LiftId' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_CustomEvent_StarScarId) == 0x000024, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_CustomEvent_StarScarId' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_GetBPEventManager_AsBP_Event_Manager) == 0x000030, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_GetBPEventManager_AsBP_Event_Manager' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_EndOverlapEventTrigger_self_CastInput) == 0x000048, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_EndOverlapEventTrigger_self_CastInput' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_Conv_StringToName_ReturnValue) == 0x000058, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_CanSendEvent_Return) == 0x000060, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_CanSendEvent_Return' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_CanSendEvent_Return_1) == 0x000061, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_CanSendEvent_Return_1' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_GetGameDataFlag_GameDataFlag) == 0x000068, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_GetGameDataFlag_GameDataFlag' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_GetFlag_ReturnValue) == 0x000070, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_GetFlag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_GetBP_EventSystemManager_BP_Evet_System_Manager_Actor_1) == 0x000078, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_GetBP_EventSystemManager_BP_Evet_System_Manager_Actor_1' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_GetBPEventManager_AsBP_Event_Manager_1) == 0x000080, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_GetBPEventManager_AsBP_Event_Manager_1' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_CallEventID) == 0x000088, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_CallEventID' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_MovePostion) == 0x000090, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_MovePostion' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_MoveTime) == 0x00009C, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_MoveTime' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_CanSendEvent_Return_2) == 0x0000A0, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_CanSendEvent_Return_2' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_IsEventCancel) == 0x0000A1, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_IsEventCancel' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_EventSender) == 0x0000A8, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_EventSender' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_LiftId) == 0x0000B0, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_LiftId' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_StarScarId) == 0x0000B4, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_StarScarId' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_SendActor) == 0x0000C0, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_SendActor' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_EventID_1) == 0x0000C8, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_EventID_1' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_Sender_1) == 0x0000D0, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_Sender_1' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_DebugMode) == 0x0000D8, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_DebugMode' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_EventID) == 0x0000E0, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_EventID' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_EventType) == 0x0000F0, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_EventType' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_QuestID) == 0x0000F4, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_QuestID' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_QuestState) == 0x0000FC, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_QuestState' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_TextBranchData) == 0x000100, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_TextBranchData' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_TextGotoData) == 0x000120, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_TextGotoData' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_Event_Sender) == 0x000130, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_Event_Sender' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000138, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000140, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_DynamicCast_AsBP_Player) == 0x000148, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_DynamicCast_AsBP_Player' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_ExecuteUbergraph_BP_EventSender, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'BP_EventSender_C_ExecuteUbergraph_BP_EventSender::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_EventSender.BP_EventSender_C.CallPlayEvent
// 0x0058 (0x0058 - 0x0000)
struct BP_EventSender_C_CallPlayEvent final
{
public:
	class FString                                 EventID_0;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EEventType                                    EventType;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   QuestID;                                           // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   QuestState;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EventTalktBranchData               TextBranchData;                                    // 0x0020(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<struct FST_TextGoto>                   TextGotoData;                                      // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 Sender;                                            // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSender_C_CallPlayEvent) == 0x000008, "Wrong alignment on BP_EventSender_C_CallPlayEvent");
static_assert(sizeof(BP_EventSender_C_CallPlayEvent) == 0x000058, "Wrong size on BP_EventSender_C_CallPlayEvent");
static_assert(offsetof(BP_EventSender_C_CallPlayEvent, EventID_0) == 0x000000, "Member 'BP_EventSender_C_CallPlayEvent::EventID_0' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_CallPlayEvent, EventType) == 0x000010, "Member 'BP_EventSender_C_CallPlayEvent::EventType' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_CallPlayEvent, QuestID) == 0x000014, "Member 'BP_EventSender_C_CallPlayEvent::QuestID' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_CallPlayEvent, QuestState) == 0x00001C, "Member 'BP_EventSender_C_CallPlayEvent::QuestState' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_CallPlayEvent, TextBranchData) == 0x000020, "Member 'BP_EventSender_C_CallPlayEvent::TextBranchData' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_CallPlayEvent, TextGotoData) == 0x000040, "Member 'BP_EventSender_C_CallPlayEvent::TextGotoData' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_CallPlayEvent, Sender) == 0x000050, "Member 'BP_EventSender_C_CallPlayEvent::Sender' has a wrong offset!");

// Function BP_EventSender.BP_EventSender_C.SendEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_EventSender_C_SendEvent final
{
public:
	class FName                                   EventID_0;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        Sender;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugMode;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventSender_C_SendEvent) == 0x000008, "Wrong alignment on BP_EventSender_C_SendEvent");
static_assert(sizeof(BP_EventSender_C_SendEvent) == 0x000018, "Wrong size on BP_EventSender_C_SendEvent");
static_assert(offsetof(BP_EventSender_C_SendEvent, EventID_0) == 0x000000, "Member 'BP_EventSender_C_SendEvent::EventID_0' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_SendEvent, Sender) == 0x000008, "Member 'BP_EventSender_C_SendEvent::Sender' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_SendEvent, DebugMode) == 0x000010, "Member 'BP_EventSender_C_SendEvent::DebugMode' has a wrong offset!");

// Function BP_EventSender.BP_EventSender_C.SetEventSendNpc
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSender_C_SetEventSendNpc final
{
public:
	class ABP_NPC_C*                              SendActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSender_C_SetEventSendNpc) == 0x000008, "Wrong alignment on BP_EventSender_C_SetEventSendNpc");
static_assert(sizeof(BP_EventSender_C_SetEventSendNpc) == 0x000008, "Wrong size on BP_EventSender_C_SetEventSendNpc");
static_assert(offsetof(BP_EventSender_C_SetEventSendNpc, SendActor) == 0x000000, "Member 'BP_EventSender_C_SetEventSendNpc::SendActor' has a wrong offset!");

// Function BP_EventSender.BP_EventSender_C.SendLiftEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_EventSender_C_SendLiftEvent final
{
public:
	class UBP_EventSender_C*                      EventSender;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LiftId;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StarScarId;                                        // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSender_C_SendLiftEvent) == 0x000008, "Wrong alignment on BP_EventSender_C_SendLiftEvent");
static_assert(sizeof(BP_EventSender_C_SendLiftEvent) == 0x000018, "Wrong size on BP_EventSender_C_SendLiftEvent");
static_assert(offsetof(BP_EventSender_C_SendLiftEvent, EventSender) == 0x000000, "Member 'BP_EventSender_C_SendLiftEvent::EventSender' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_SendLiftEvent, LiftId) == 0x000008, "Member 'BP_EventSender_C_SendLiftEvent::LiftId' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_SendLiftEvent, StarScarId) == 0x00000C, "Member 'BP_EventSender_C_SendLiftEvent::StarScarId' has a wrong offset!");

// Function BP_EventSender.BP_EventSender_C.CallForceMoveEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_EventSender_C_CallForceMoveEvent final
{
public:
	class FName                                   CallEventID;                                       // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MovePostion;                                       // 0x0008(0x000C)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MoveTime_0;                                        // 0x0014(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSender_C_CallForceMoveEvent) == 0x000004, "Wrong alignment on BP_EventSender_C_CallForceMoveEvent");
static_assert(sizeof(BP_EventSender_C_CallForceMoveEvent) == 0x000018, "Wrong size on BP_EventSender_C_CallForceMoveEvent");
static_assert(offsetof(BP_EventSender_C_CallForceMoveEvent, CallEventID) == 0x000000, "Member 'BP_EventSender_C_CallForceMoveEvent::CallEventID' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_CallForceMoveEvent, MovePostion) == 0x000008, "Member 'BP_EventSender_C_CallForceMoveEvent::MovePostion' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_CallForceMoveEvent, MoveTime_0) == 0x000014, "Member 'BP_EventSender_C_CallForceMoveEvent::MoveTime_0' has a wrong offset!");

// Function BP_EventSender.BP_EventSender_C.CallLiftEvent
// 0x000C (0x000C - 0x0000)
struct BP_EventSender_C_CallLiftEvent final
{
public:
	int32                                         LiftId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StarScarId;                                        // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSender_C_CallLiftEvent) == 0x000004, "Wrong alignment on BP_EventSender_C_CallLiftEvent");
static_assert(sizeof(BP_EventSender_C_CallLiftEvent) == 0x00000C, "Wrong size on BP_EventSender_C_CallLiftEvent");
static_assert(offsetof(BP_EventSender_C_CallLiftEvent, LiftId) == 0x000000, "Member 'BP_EventSender_C_CallLiftEvent::LiftId' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_CallLiftEvent, StarScarId) == 0x000004, "Member 'BP_EventSender_C_CallLiftEvent::StarScarId' has a wrong offset!");

// Function BP_EventSender.BP_EventSender_C.EndPlayEvent
// 0x0001 (0x0001 - 0x0000)
struct BP_EventSender_C_EndPlayEvent final
{
public:
	bool                                          IsEventCancel;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventSender_C_EndPlayEvent) == 0x000001, "Wrong alignment on BP_EventSender_C_EndPlayEvent");
static_assert(sizeof(BP_EventSender_C_EndPlayEvent) == 0x000001, "Wrong size on BP_EventSender_C_EndPlayEvent");
static_assert(offsetof(BP_EventSender_C_EndPlayEvent, IsEventCancel) == 0x000000, "Member 'BP_EventSender_C_EndPlayEvent::IsEventCancel' has a wrong offset!");

// Function BP_EventSender.BP_EventSender_C.OpenFieldIconAction
// 0x0010 (0x0010 - 0x0000)
struct BP_EventSender_C_OpenFieldIconAction final
{
public:
	EInputGuideType                               ActionType_0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Field_WinAction_C*                   CallFunc_GetFieldIconAction_Result;                // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSender_C_OpenFieldIconAction) == 0x000008, "Wrong alignment on BP_EventSender_C_OpenFieldIconAction");
static_assert(sizeof(BP_EventSender_C_OpenFieldIconAction) == 0x000010, "Wrong size on BP_EventSender_C_OpenFieldIconAction");
static_assert(offsetof(BP_EventSender_C_OpenFieldIconAction, ActionType_0) == 0x000000, "Member 'BP_EventSender_C_OpenFieldIconAction::ActionType_0' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_OpenFieldIconAction, CallFunc_GetFieldIconAction_Result) == 0x000008, "Member 'BP_EventSender_C_OpenFieldIconAction::CallFunc_GetFieldIconAction_Result' has a wrong offset!");

// Function BP_EventSender.BP_EventSender_C.CloseFieldIconAction
// 0x0008 (0x0008 - 0x0000)
struct BP_EventSender_C_CloseFieldIconAction final
{
public:
	class UW_Field_WinAction_C*                   CallFunc_GetFieldIconAction_Result;                // 0x0000(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSender_C_CloseFieldIconAction) == 0x000008, "Wrong alignment on BP_EventSender_C_CloseFieldIconAction");
static_assert(sizeof(BP_EventSender_C_CloseFieldIconAction) == 0x000008, "Wrong size on BP_EventSender_C_CloseFieldIconAction");
static_assert(offsetof(BP_EventSender_C_CloseFieldIconAction, CallFunc_GetFieldIconAction_Result) == 0x000000, "Member 'BP_EventSender_C_CloseFieldIconAction::CallFunc_GetFieldIconAction_Result' has a wrong offset!");

// Function BP_EventSender.BP_EventSender_C.CanSendEvent
// 0x0018 (0x0018 - 0x0000)
struct BP_EventSender_C_CanSendEvent final
{
public:
	bool                                          return_0;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_Talk_WinStatus_C*                    CallFunc_GetTalkWindow_Result;                     // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAction_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_BoolBool_ReturnValue;          // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventSender_C_CanSendEvent) == 0x000008, "Wrong alignment on BP_EventSender_C_CanSendEvent");
static_assert(sizeof(BP_EventSender_C_CanSendEvent) == 0x000018, "Wrong size on BP_EventSender_C_CanSendEvent");
static_assert(offsetof(BP_EventSender_C_CanSendEvent, return_0) == 0x000000, "Member 'BP_EventSender_C_CanSendEvent::return_0' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_CanSendEvent, CallFunc_GetTalkWindow_Result) == 0x000008, "Member 'BP_EventSender_C_CanSendEvent::CallFunc_GetTalkWindow_Result' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_CanSendEvent, CallFunc_CanAction_ReturnValue) == 0x000010, "Member 'BP_EventSender_C_CanSendEvent::CallFunc_CanAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_CanSendEvent, CallFunc_EqualEqual_BoolBool_ReturnValue) == 0x000011, "Member 'BP_EventSender_C_CanSendEvent::CallFunc_EqualEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_CanSendEvent, CallFunc_BooleanAND_ReturnValue) == 0x000012, "Member 'BP_EventSender_C_CanSendEvent::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_CanSendEvent, CallFunc_BooleanAND_ReturnValue_1) == 0x000013, "Member 'BP_EventSender_C_CanSendEvent::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_EventSender.BP_EventSender_C.GetEventPlayFlag
// 0x0018 (0x0018 - 0x0000)
struct BP_EventSender_C_GetEventPlayFlag final
{
public:
	bool                                          IsPlay;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameDataFlag*                          CallFunc_GetGameDataFlag_GameDataFlag;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetFlag_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventSender_C_GetEventPlayFlag) == 0x000008, "Wrong alignment on BP_EventSender_C_GetEventPlayFlag");
static_assert(sizeof(BP_EventSender_C_GetEventPlayFlag) == 0x000018, "Wrong size on BP_EventSender_C_GetEventPlayFlag");
static_assert(offsetof(BP_EventSender_C_GetEventPlayFlag, IsPlay) == 0x000000, "Member 'BP_EventSender_C_GetEventPlayFlag::IsPlay' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_GetEventPlayFlag, CallFunc_GetGameDataFlag_GameDataFlag) == 0x000008, "Member 'BP_EventSender_C_GetEventPlayFlag::CallFunc_GetGameDataFlag_GameDataFlag' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_GetEventPlayFlag, CallFunc_GetFlag_ReturnValue) == 0x000010, "Member 'BP_EventSender_C_GetEventPlayFlag::CallFunc_GetFlag_ReturnValue' has a wrong offset!");

// Function BP_EventSender.BP_EventSender_C.SetEventPlayFlag
// 0x0010 (0x0010 - 0x0000)
struct BP_EventSender_C_SetEventPlayFlag final
{
public:
	bool                                          IsPlay;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameDataFlag*                          CallFunc_GetGameDataFlag_GameDataFlag;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_EventSender_C_SetEventPlayFlag) == 0x000008, "Wrong alignment on BP_EventSender_C_SetEventPlayFlag");
static_assert(sizeof(BP_EventSender_C_SetEventPlayFlag) == 0x000010, "Wrong size on BP_EventSender_C_SetEventPlayFlag");
static_assert(offsetof(BP_EventSender_C_SetEventPlayFlag, IsPlay) == 0x000000, "Member 'BP_EventSender_C_SetEventPlayFlag::IsPlay' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_SetEventPlayFlag, CallFunc_GetGameDataFlag_GameDataFlag) == 0x000008, "Member 'BP_EventSender_C_SetEventPlayFlag::CallFunc_GetGameDataFlag_GameDataFlag' has a wrong offset!");

// Function BP_EventSender.BP_EventSender_C.Can Forced Battle Event
// 0x0020 (0x0020 - 0x0000)
struct BP_EventSender_C_Can_Forced_Battle_Event final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UEventSystemManager*                    CallFunc_GetInstance_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UEventDataBase*                         CallFunc_GetEventDataBase_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanForcedBattleEvent_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_EventSender_C_Can_Forced_Battle_Event) == 0x000008, "Wrong alignment on BP_EventSender_C_Can_Forced_Battle_Event");
static_assert(sizeof(BP_EventSender_C_Can_Forced_Battle_Event) == 0x000020, "Wrong size on BP_EventSender_C_Can_Forced_Battle_Event");
static_assert(offsetof(BP_EventSender_C_Can_Forced_Battle_Event, ReturnValue) == 0x000000, "Member 'BP_EventSender_C_Can_Forced_Battle_Event::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_Can_Forced_Battle_Event, CallFunc_GetInstance_ReturnValue) == 0x000008, "Member 'BP_EventSender_C_Can_Forced_Battle_Event::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_Can_Forced_Battle_Event, CallFunc_GetEventDataBase_ReturnValue) == 0x000010, "Member 'BP_EventSender_C_Can_Forced_Battle_Event::CallFunc_GetEventDataBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_EventSender_C_Can_Forced_Battle_Event, CallFunc_CanForcedBattleEvent_ReturnValue) == 0x000018, "Member 'BP_EventSender_C_Can_Forced_Battle_Event::CallFunc_CanForcedBattleEvent_ReturnValue' has a wrong offset!");

}

