#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Action_SlingShot

#include "Basic.hpp"

#include "Action_SlingShot_classes.hpp"
#include "Action_SlingShot_parameters.hpp"


namespace SDK
{

// Function Action_SlingShot.Action_SlingShot_C.IsAimAssistContinuable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UAction_SlingShot_C::IsAimAssistContinuable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "IsAimAssistContinuable");

	Params::Action_SlingShot_C_IsAimAssistContinuable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function Action_SlingShot.Action_SlingShot_C.GetActionDetailID
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             ID                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAction_SlingShot_C::GetActionDetailID(class FName* ID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "GetActionDetailID");

	Params::Action_SlingShot_C_GetActionDetailID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ID != nullptr)
		*ID = Parms.ID;
}


// Function Action_SlingShot.Action_SlingShot_C.SetActionDetailID
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UAction_SlingShot_C::SetActionDetailID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "SetActionDetailID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Action_SlingShot.Action_SlingShot_C.Enter_Ground
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UAction_SlingShot_C::Enter_Ground()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Enter_Ground");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Action_SlingShot.Action_SlingShot_C.Enter_Air
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UAction_SlingShot_C::Enter_Air()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Enter_Air");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Action_SlingShot.Action_SlingShot_C.ShotOrEnd
// (BlueprintCallable, BlueprintEvent)

void UAction_SlingShot_C::ShotOrEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "ShotOrEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Action_SlingShot.Action_SlingShot_C.Move
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          InputVector                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAction_SlingShot_C::Move(const struct FVector& InputVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Move");

	Params::Action_SlingShot_C_Move Parms{};

	Parms.InputVector = std::move(InputVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Action_SlingShot.Action_SlingShot_C.ChangeViewportAndUI
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAction_SlingShot_C::ChangeViewportAndUI(bool visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "ChangeViewportAndUI");

	Params::Action_SlingShot_C_ChangeViewportAndUI Parms{};

	Parms.visible = visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Action_SlingShot.Action_SlingShot_C.Release
// (BlueprintCallable, BlueprintEvent)

void UAction_SlingShot_C::Release()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Release");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Action_SlingShot.Action_SlingShot_C.Update
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAction_SlingShot_C::Update(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Update");

	Params::Action_SlingShot_C_Update Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Action_SlingShot.Action_SlingShot_C.HoldSlingShot
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    End                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAction_SlingShot_C::HoldSlingShot(bool End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "HoldSlingShot");

	Params::Action_SlingShot_C_HoldSlingShot Parms{};

	Parms.End = End;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Action_SlingShot.Action_SlingShot_C.Exit
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UAction_SlingShot_C::Exit()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Exit");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Action_SlingShot.Action_SlingShot_C.Cancel
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UAction_SlingShot_C::Cancel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Cancel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Action_SlingShot.Action_SlingShot_C.Enter_Abnormal
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UAction_SlingShot_C::Enter_Abnormal()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Enter_Abnormal");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Action_SlingShot.Action_SlingShot_C.Button_Y
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAction_SlingShot_C::Button_Y(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Button_Y");

	Params::Action_SlingShot_C_Button_Y Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Action_SlingShot.Action_SlingShot_C.Button_A
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAction_SlingShot_C::Button_A(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Button_A");

	Params::Action_SlingShot_C_Button_A Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Action_SlingShot.Action_SlingShot_C.Button_R
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAction_SlingShot_C::Button_R(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Button_R");

	Params::Action_SlingShot_C_Button_R Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Action_SlingShot.Action_SlingShot_C.Button_RT
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAction_SlingShot_C::Button_RT(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Button_RT");

	Params::Action_SlingShot_C_Button_RT Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Action_SlingShot.Action_SlingShot_C.Button_L
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAction_SlingShot_C::Button_L(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Button_L");

	Params::Action_SlingShot_C_Button_L Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Action_SlingShot.Action_SlingShot_C.Thumb_Left
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAction_SlingShot_C::Thumb_Left(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Thumb_Left");

	Params::Action_SlingShot_C_Thumb_Left Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Action_SlingShot.Action_SlingShot_C.CheckCurrentTarget
// (BlueprintCallable, BlueprintEvent)

void UAction_SlingShot_C::CheckCurrentTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "CheckCurrentTarget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Action_SlingShot.Action_SlingShot_C.Button_X
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAction_SlingShot_C::Button_X(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Button_X");

	Params::Action_SlingShot_C_Button_X Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Action_SlingShot.Action_SlingShot_C.Button_B
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bRelease                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UAction_SlingShot_C::Button_B(bool bRelease)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "Button_B");

	Params::Action_SlingShot_C_Button_B Parms{};

	Parms.bRelease = bRelease;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Action_SlingShot.Action_SlingShot_C.SwordHide
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsBattleMode                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)

void UAction_SlingShot_C::SwordHide(const bool& IsBattleMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "SwordHide");

	Params::Action_SlingShot_C_SwordHide Parms{};

	Parms.IsBattleMode = IsBattleMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Action_SlingShot.Action_SlingShot_C.ExecuteUbergraph_Action_SlingShot
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UAction_SlingShot_C::ExecuteUbergraph_Action_SlingShot(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "ExecuteUbergraph_Action_SlingShot");

	Params::Action_SlingShot_C_ExecuteUbergraph_Action_SlingShot Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Action_SlingShot.Action_SlingShot_C.IsSpecialAbility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UAction_SlingShot_C::IsSpecialAbility() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Action_SlingShot_C", "IsSpecialAbility");

	Params::Action_SlingShot_C_IsSpecialAbility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

