#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EnvironmentLighting

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DarwinGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EnvironmentLighting.BP_EnvironmentLighting_C
// 0x0050 (0x0A20 - 0x09D0)
class ABP_EnvironmentLighting_C final : public AEnvironmentObject
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x09D0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   SkySphereMesh;                                     // 0x09D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UExponentialHeightFogComponent*         ExponentialHeightFog;                              // 0x09E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             DirectionalLight;                                  // 0x09E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkyLightComponent*                     SkyLight;                                          // 0x09F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPostProcessComponent*                  PostProcess;                                       // 0x09F8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   UnderCloudMesh;                                    // 0x0A00(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SkyCloudMesh;                                      // 0x0A08(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0A10(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_EnvironmentLighting(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void ReceiveBeginPlay();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EnvironmentLighting_C">();
	}
	static class ABP_EnvironmentLighting_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EnvironmentLighting_C>();
	}
};
static_assert(alignof(ABP_EnvironmentLighting_C) == 0x000010, "Wrong alignment on ABP_EnvironmentLighting_C");
static_assert(sizeof(ABP_EnvironmentLighting_C) == 0x000A20, "Wrong size on ABP_EnvironmentLighting_C");
static_assert(offsetof(ABP_EnvironmentLighting_C, UberGraphFrame) == 0x0009D0, "Member 'ABP_EnvironmentLighting_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_EnvironmentLighting_C, SkySphereMesh) == 0x0009D8, "Member 'ABP_EnvironmentLighting_C::SkySphereMesh' has a wrong offset!");
static_assert(offsetof(ABP_EnvironmentLighting_C, ExponentialHeightFog) == 0x0009E0, "Member 'ABP_EnvironmentLighting_C::ExponentialHeightFog' has a wrong offset!");
static_assert(offsetof(ABP_EnvironmentLighting_C, DirectionalLight) == 0x0009E8, "Member 'ABP_EnvironmentLighting_C::DirectionalLight' has a wrong offset!");
static_assert(offsetof(ABP_EnvironmentLighting_C, SkyLight) == 0x0009F0, "Member 'ABP_EnvironmentLighting_C::SkyLight' has a wrong offset!");
static_assert(offsetof(ABP_EnvironmentLighting_C, PostProcess) == 0x0009F8, "Member 'ABP_EnvironmentLighting_C::PostProcess' has a wrong offset!");
static_assert(offsetof(ABP_EnvironmentLighting_C, UnderCloudMesh) == 0x000A00, "Member 'ABP_EnvironmentLighting_C::UnderCloudMesh' has a wrong offset!");
static_assert(offsetof(ABP_EnvironmentLighting_C, SkyCloudMesh) == 0x000A08, "Member 'ABP_EnvironmentLighting_C::SkyCloudMesh' has a wrong offset!");
static_assert(offsetof(ABP_EnvironmentLighting_C, DefaultSceneRoot) == 0x000A10, "Member 'ABP_EnvironmentLighting_C::DefaultSceneRoot' has a wrong offset!");

}

