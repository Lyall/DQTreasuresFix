#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Fade

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DarwinGame_structs.hpp"


namespace SDK::Params
{

// Function W_Fade.W_Fade_C.FadeOutScreenKeepAlpha
// 0x002C (0x002C - 0x0000)
struct W_Fade_C_FadeOutScreenKeepAlpha final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_0;                                           // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFadeZOrderType                               ZorderType;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         KeepAlpha;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Fade_C_FadeOutScreenKeepAlpha) == 0x000004, "Wrong alignment on W_Fade_C_FadeOutScreenKeepAlpha");
static_assert(sizeof(W_Fade_C_FadeOutScreenKeepAlpha) == 0x00002C, "Wrong size on W_Fade_C_FadeOutScreenKeepAlpha");
static_assert(offsetof(W_Fade_C_FadeOutScreenKeepAlpha, Time) == 0x000000, "Member 'W_Fade_C_FadeOutScreenKeepAlpha::Time' has a wrong offset!");
static_assert(offsetof(W_Fade_C_FadeOutScreenKeepAlpha, Color_0) == 0x000004, "Member 'W_Fade_C_FadeOutScreenKeepAlpha::Color_0' has a wrong offset!");
static_assert(offsetof(W_Fade_C_FadeOutScreenKeepAlpha, ZorderType) == 0x000014, "Member 'W_Fade_C_FadeOutScreenKeepAlpha::ZorderType' has a wrong offset!");
static_assert(offsetof(W_Fade_C_FadeOutScreenKeepAlpha, KeepAlpha) == 0x000018, "Member 'W_Fade_C_FadeOutScreenKeepAlpha::KeepAlpha' has a wrong offset!");
static_assert(offsetof(W_Fade_C_FadeOutScreenKeepAlpha, K2Node_MakeStruct_LinearColor) == 0x00001C, "Member 'W_Fade_C_FadeOutScreenKeepAlpha::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function W_Fade.W_Fade_C.UpdateViewPort
// 0x0020 (0x0020 - 0x0000)
struct W_Fade_C_UpdateViewPort final
{
public:
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FST_UIZOrderDataTableRow               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToPlayerScreen_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Fade_C_UpdateViewPort) == 0x000008, "Wrong alignment on W_Fade_C_UpdateViewPort");
static_assert(sizeof(W_Fade_C_UpdateViewPort) == 0x000020, "Wrong size on W_Fade_C_UpdateViewPort");
static_assert(offsetof(W_Fade_C_UpdateViewPort, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000000, "Member 'W_Fade_C_UpdateViewPort::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_UpdateViewPort, CallFunc_IsInViewport_ReturnValue) == 0x000004, "Member 'W_Fade_C_UpdateViewPort::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_UpdateViewPort, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'W_Fade_C_UpdateViewPort::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_UpdateViewPort, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000006, "Member 'W_Fade_C_UpdateViewPort::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_UpdateViewPort, CallFunc_BooleanOR_ReturnValue) == 0x000007, "Member 'W_Fade_C_UpdateViewPort::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_UpdateViewPort, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'W_Fade_C_UpdateViewPort::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_Fade_C_UpdateViewPort, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000018, "Member 'W_Fade_C_UpdateViewPort::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_UpdateViewPort, CallFunc_AddToPlayerScreen_ReturnValue) == 0x000019, "Member 'W_Fade_C_UpdateViewPort::CallFunc_AddToPlayerScreen_ReturnValue' has a wrong offset!");

// Function W_Fade.W_Fade_C.UpdateFade
// 0x001C (0x001C - 0x0000)
struct W_Fade_C_UpdateFade final
{
public:
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Fade_C_UpdateFade) == 0x000004, "Wrong alignment on W_Fade_C_UpdateFade");
static_assert(sizeof(W_Fade_C_UpdateFade) == 0x00001C, "Wrong size on W_Fade_C_UpdateFade");
static_assert(offsetof(W_Fade_C_UpdateFade, CallFunc_Less_FloatFloat_ReturnValue) == 0x000000, "Member 'W_Fade_C_UpdateFade::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_UpdateFade, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'W_Fade_C_UpdateFade::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_UpdateFade, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000002, "Member 'W_Fade_C_UpdateFade::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_UpdateFade, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'W_Fade_C_UpdateFade::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_UpdateFade, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'W_Fade_C_UpdateFade::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_UpdateFade, K2Node_MakeStruct_LinearColor) == 0x00000C, "Member 'W_Fade_C_UpdateFade::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function W_Fade.W_Fade_C.ReAddViewPort
// 0x0001 (0x0001 - 0x0000)
struct W_Fade_C_ReAddViewPort final
{
public:
	EFadeZOrderType                               ZorderType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Fade_C_ReAddViewPort) == 0x000001, "Wrong alignment on W_Fade_C_ReAddViewPort");
static_assert(sizeof(W_Fade_C_ReAddViewPort) == 0x000001, "Wrong size on W_Fade_C_ReAddViewPort");
static_assert(offsetof(W_Fade_C_ReAddViewPort, ZorderType) == 0x000000, "Member 'W_Fade_C_ReAddViewPort::ZorderType' has a wrong offset!");

// Function W_Fade.W_Fade_C.FadeInScreen
// 0x0004 (0x0004 - 0x0000)
struct W_Fade_C_FadeInScreen final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Fade_C_FadeInScreen) == 0x000004, "Wrong alignment on W_Fade_C_FadeInScreen");
static_assert(sizeof(W_Fade_C_FadeInScreen) == 0x000004, "Wrong size on W_Fade_C_FadeInScreen");
static_assert(offsetof(W_Fade_C_FadeInScreen, Time) == 0x000000, "Member 'W_Fade_C_FadeInScreen::Time' has a wrong offset!");

// Function W_Fade.W_Fade_C.FadeOutScreen
// 0x0018 (0x0018 - 0x0000)
struct W_Fade_C_FadeOutScreen final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color_0;                                           // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFadeZOrderType                               ZorderType;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Fade_C_FadeOutScreen) == 0x000004, "Wrong alignment on W_Fade_C_FadeOutScreen");
static_assert(sizeof(W_Fade_C_FadeOutScreen) == 0x000018, "Wrong size on W_Fade_C_FadeOutScreen");
static_assert(offsetof(W_Fade_C_FadeOutScreen, Time) == 0x000000, "Member 'W_Fade_C_FadeOutScreen::Time' has a wrong offset!");
static_assert(offsetof(W_Fade_C_FadeOutScreen, Color_0) == 0x000004, "Member 'W_Fade_C_FadeOutScreen::Color_0' has a wrong offset!");
static_assert(offsetof(W_Fade_C_FadeOutScreen, ZorderType) == 0x000014, "Member 'W_Fade_C_FadeOutScreen::ZorderType' has a wrong offset!");

// Function W_Fade.W_Fade_C.Update
// 0x0004 (0x0004 - 0x0000)
struct W_Fade_C_Update final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Fade_C_Update) == 0x000004, "Wrong alignment on W_Fade_C_Update");
static_assert(sizeof(W_Fade_C_Update) == 0x000004, "Wrong size on W_Fade_C_Update");
static_assert(offsetof(W_Fade_C_Update, DeltaTime) == 0x000000, "Member 'W_Fade_C_Update::DeltaTime' has a wrong offset!");

// Function W_Fade.W_Fade_C.ExecuteUbergraph_W_Fade
// 0x0064 (0x0064 - 0x0000)
struct W_Fade_C_ExecuteUbergraph_W_Fade final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFadeZOrderType                               K2Node_Event_ZorderType_1;                         // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_Time_1;                               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_2;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_Time;                                 // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_Event_Color;                                // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFadeZOrderType                               K2Node_Event_ZorderType;                           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_3;          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanAction_ReturnValue;                    // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTime;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_4;          // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_5;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Fade_C_ExecuteUbergraph_W_Fade) == 0x000004, "Wrong alignment on W_Fade_C_ExecuteUbergraph_W_Fade");
static_assert(sizeof(W_Fade_C_ExecuteUbergraph_W_Fade) == 0x000064, "Wrong size on W_Fade_C_ExecuteUbergraph_W_Fade");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, EntryPoint) == 0x000000, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000004, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, CallFunc_MakeColor_ReturnValue) == 0x000008, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, K2Node_Event_ZorderType_1) == 0x00001C, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::K2Node_Event_ZorderType_1' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, K2Node_Event_Time_1) == 0x000020, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::K2Node_Event_Time_1' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x000024, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000028, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, CallFunc_Divide_FloatFloat_ReturnValue_2) == 0x00002C, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::CallFunc_Divide_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000030, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, K2Node_Event_Time) == 0x000034, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::K2Node_Event_Time' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, K2Node_Event_Color) == 0x000038, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::K2Node_Event_Color' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, K2Node_Event_ZorderType) == 0x000048, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::K2Node_Event_ZorderType' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, CallFunc_Divide_FloatFloat_ReturnValue_3) == 0x00004C, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::CallFunc_Divide_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000050, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, CallFunc_CanAction_ReturnValue) == 0x000051, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::CallFunc_CanAction_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, K2Node_Event_DeltaTime) == 0x000054, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::K2Node_Event_DeltaTime' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000058, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, CallFunc_Divide_FloatFloat_ReturnValue_4) == 0x00005C, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::CallFunc_Divide_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_Fade_C_ExecuteUbergraph_W_Fade, CallFunc_Divide_FloatFloat_ReturnValue_5) == 0x000060, "Member 'W_Fade_C_ExecuteUbergraph_W_Fade::CallFunc_Divide_FloatFloat_ReturnValue_5' has a wrong offset!");

}

