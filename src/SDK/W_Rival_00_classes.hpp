#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Rival_00

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Rival_00.W_Rival_00_C
// 0x0058 (0x0590 - 0x0538)
class UW_Rival_00_C final : public UUIRival_00
{
public:
	class UWidgetAnimation*                       Out;                                               // 0x0538(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Wait;                                              // 0x0540(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0548(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 BasePlate;                                         // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BasePlate_Flash;                                   // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BasePlate_Flash_1;                                 // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BasePlate_Flash_2;                                 // 0x0568(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Flag_00;                                           // 0x0570(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RivalText_A_1;                                     // 0x0578(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 RivalText_B_1;                                     // 0x0580(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDataTable*                             Dummy;                                             // 0x0588(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Rival_00_C">();
	}
	static class UW_Rival_00_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Rival_00_C>();
	}
};
static_assert(alignof(UW_Rival_00_C) == 0x000008, "Wrong alignment on UW_Rival_00_C");
static_assert(sizeof(UW_Rival_00_C) == 0x000590, "Wrong size on UW_Rival_00_C");
static_assert(offsetof(UW_Rival_00_C, Out) == 0x000538, "Member 'UW_Rival_00_C::Out' has a wrong offset!");
static_assert(offsetof(UW_Rival_00_C, Wait) == 0x000540, "Member 'UW_Rival_00_C::Wait' has a wrong offset!");
static_assert(offsetof(UW_Rival_00_C, In) == 0x000548, "Member 'UW_Rival_00_C::In' has a wrong offset!");
static_assert(offsetof(UW_Rival_00_C, BasePlate) == 0x000550, "Member 'UW_Rival_00_C::BasePlate' has a wrong offset!");
static_assert(offsetof(UW_Rival_00_C, BasePlate_Flash) == 0x000558, "Member 'UW_Rival_00_C::BasePlate_Flash' has a wrong offset!");
static_assert(offsetof(UW_Rival_00_C, BasePlate_Flash_1) == 0x000560, "Member 'UW_Rival_00_C::BasePlate_Flash_1' has a wrong offset!");
static_assert(offsetof(UW_Rival_00_C, BasePlate_Flash_2) == 0x000568, "Member 'UW_Rival_00_C::BasePlate_Flash_2' has a wrong offset!");
static_assert(offsetof(UW_Rival_00_C, Flag_00) == 0x000570, "Member 'UW_Rival_00_C::Flag_00' has a wrong offset!");
static_assert(offsetof(UW_Rival_00_C, RivalText_A_1) == 0x000578, "Member 'UW_Rival_00_C::RivalText_A_1' has a wrong offset!");
static_assert(offsetof(UW_Rival_00_C, RivalText_B_1) == 0x000580, "Member 'UW_Rival_00_C::RivalText_B_1' has a wrong offset!");
static_assert(offsetof(UW_Rival_00_C, Dummy) == 0x000588, "Member 'UW_Rival_00_C::Dummy' has a wrong offset!");

}

