#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTD_MonsterBossBehavior

#include "Basic.hpp"

#include "DarwinGame_structs.hpp"


namespace SDK::Params
{

// Function BTD_MonsterBossBehavior.BTD_MonsterBossBehavior_C.PerformConditionCheckAI
// 0x0070 (0x0070 - 0x0000)
struct BTD_MonsterBossBehavior_C_PerformConditionCheckAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EMonsterBehavior>                      ignores;                                           // 0x0018(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	EMonsterBehavior                              Temp_byte_Variable;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMonsterBoss*                           K2Node_DynamicCast_AsMonster_Boss;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMonsterBossCombatDuring                      CallFunc_GetCombatDuring_ReturnValue;              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonsterBehavior                              CallFunc_GetBehavior_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonsterBehavior                              Temp_byte_Variable_1;                              // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonsterBehavior                              Temp_byte_Variable_2;                              // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonsterBehavior                              Temp_byte_Variable_3;                              // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonsterBehavior                              Temp_byte_Variable_4;                              // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EMonsterBehavior>                      K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonsterBehavior                              Temp_byte_Variable_5;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonsterBehavior                              CallFunc_Array_Get_Item;                           // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E[0x2];                                       // 0x005E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EMonsterBossCombatDuring                      Temp_byte_Variable_6;                              // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonsterBehavior                              K2Node_Select_Default;                             // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI) == 0x000008, "Wrong alignment on BTD_MonsterBossBehavior_C_PerformConditionCheckAI");
static_assert(sizeof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI) == 0x000070, "Wrong size on BTD_MonsterBossBehavior_C_PerformConditionCheckAI");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, OwnerController) == 0x000000, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, ControlledPawn) == 0x000008, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, ReturnValue) == 0x000010, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, ignores) == 0x000018, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::ignores' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, Temp_byte_Variable) == 0x000028, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, K2Node_DynamicCast_AsMonster_Boss) == 0x000030, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::K2Node_DynamicCast_AsMonster_Boss' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, CallFunc_GetCombatDuring_ReturnValue) == 0x000039, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::CallFunc_GetCombatDuring_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, CallFunc_GetBehavior_ReturnValue) == 0x00003A, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::CallFunc_GetBehavior_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, Temp_byte_Variable_1) == 0x00003B, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, Temp_byte_Variable_2) == 0x00003C, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, Temp_byte_Variable_3) == 0x00003D, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, Temp_byte_Variable_4) == 0x00003E, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, K2Node_MakeArray_Array) == 0x000040, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, Temp_int_Array_Index_Variable) == 0x000050, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, Temp_int_Loop_Counter_Variable) == 0x000054, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, Temp_byte_Variable_5) == 0x00005C, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, CallFunc_Array_Get_Item) == 0x00005D, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000064, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, CallFunc_Less_IntInt_ReturnValue) == 0x000065, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, Temp_byte_Variable_6) == 0x000066, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, K2Node_Select_Default) == 0x000067, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BTD_MonsterBossBehavior_C_PerformConditionCheckAI, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000068, "Member 'BTD_MonsterBossBehavior_C_PerformConditionCheckAI::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");

}

