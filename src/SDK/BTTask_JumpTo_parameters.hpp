#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_JumpTo

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTTask_JumpTo.BTTask_JumpTo_C.ExecuteUbergraph_BTTask_JumpTo
// 0x0078 (0x0078 - 0x0000)
struct BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFieldManager*                          CallFunc_GetInstance_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMonsterBase*                           K2Node_DynamicCast_AsMonster_Base;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMonsterBTTaskExecuter*                 CallFunc_GetMonsterBTTaskExecuter_ReturnValue;     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExecuteTask_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMonster*                               K2Node_DynamicCast_AsMonster;                      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo) == 0x000008, "Wrong alignment on BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo");
static_assert(sizeof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo) == 0x000078, "Wrong size on BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, EntryPoint) == 0x000000, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, K2Node_Event_OwnerController_2) == 0x000008, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, K2Node_Event_ControlledPawn_2) == 0x000010, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, K2Node_Event_DeltaSeconds) == 0x000018, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, CallFunc_GetInstance_ReturnValue) == 0x000020, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, K2Node_DynamicCast_AsMonster_Base) == 0x000028, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::K2Node_DynamicCast_AsMonster_Base' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, CallFunc_GetMonsterBTTaskExecuter_ReturnValue) == 0x000038, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::CallFunc_GetMonsterBTTaskExecuter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, CallFunc_ExecuteTask_ReturnValue) == 0x000040, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::CallFunc_ExecuteTask_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, K2Node_Event_OwnerController_1) == 0x000048, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, K2Node_Event_ControlledPawn_1) == 0x000050, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, K2Node_Event_OwnerController) == 0x000058, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, K2Node_Event_ControlledPawn) == 0x000060, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, K2Node_DynamicCast_AsMonster) == 0x000068, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::K2Node_DynamicCast_AsMonster' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BTTask_JumpTo_C_ExecuteUbergraph_BTTask_JumpTo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function BTTask_JumpTo.BTTask_JumpTo_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_JumpTo_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_JumpTo_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTTask_JumpTo_C_ReceiveAbortAI");
static_assert(sizeof(BTTask_JumpTo_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTTask_JumpTo_C_ReceiveAbortAI");
static_assert(offsetof(BTTask_JumpTo_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTTask_JumpTo_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTTask_JumpTo_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTTask_JumpTo.BTTask_JumpTo_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_JumpTo_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_JumpTo_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTTask_JumpTo_C_ReceiveExecuteAI");
static_assert(sizeof(BTTask_JumpTo_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTTask_JumpTo_C_ReceiveExecuteAI");
static_assert(offsetof(BTTask_JumpTo_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTTask_JumpTo_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTTask_JumpTo_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTTask_JumpTo.BTTask_JumpTo_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTTask_JumpTo_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_JumpTo_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTTask_JumpTo_C_ReceiveTickAI");
static_assert(sizeof(BTTask_JumpTo_C_ReceiveTickAI) == 0x000018, "Wrong size on BTTask_JumpTo_C_ReceiveTickAI");
static_assert(offsetof(BTTask_JumpTo_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTTask_JumpTo_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTTask_JumpTo_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_JumpTo_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTTask_JumpTo_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

