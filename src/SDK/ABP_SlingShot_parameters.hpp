#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_SlingShot

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ABP_SlingShot.ABP_SlingShot_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ABP_SlingShot_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ABP_SlingShot_C_AnimGraph) == 0x000008, "Wrong alignment on ABP_SlingShot_C_AnimGraph");
static_assert(sizeof(ABP_SlingShot_C_AnimGraph) == 0x000010, "Wrong size on ABP_SlingShot_C_AnimGraph");
static_assert(offsetof(ABP_SlingShot_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ABP_SlingShot_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ABP_SlingShot.ABP_SlingShot_C.SetVisible
// 0x0001 (0x0001 - 0x0000)
struct ABP_SlingShot_C_SetVisible final
{
public:
	bool                                          Visibility;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_SlingShot_C_SetVisible) == 0x000001, "Wrong alignment on ABP_SlingShot_C_SetVisible");
static_assert(sizeof(ABP_SlingShot_C_SetVisible) == 0x000001, "Wrong size on ABP_SlingShot_C_SetVisible");
static_assert(offsetof(ABP_SlingShot_C_SetVisible, Visibility) == 0x000000, "Member 'ABP_SlingShot_C_SetVisible::Visibility' has a wrong offset!");

// Function ABP_SlingShot.ABP_SlingShot_C.Hold
// 0x0001 (0x0001 - 0x0000)
struct ABP_SlingShot_C_Hold final
{
public:
	bool                                          End;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_SlingShot_C_Hold) == 0x000001, "Wrong alignment on ABP_SlingShot_C_Hold");
static_assert(sizeof(ABP_SlingShot_C_Hold) == 0x000001, "Wrong size on ABP_SlingShot_C_Hold");
static_assert(offsetof(ABP_SlingShot_C_Hold, End) == 0x000000, "Member 'ABP_SlingShot_C_Hold::End' has a wrong offset!");

// Function ABP_SlingShot.ABP_SlingShot_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_SlingShot_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_SlingShot_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_SlingShot_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_SlingShot_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_SlingShot_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_SlingShot_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_SlingShot_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_SlingShot.ABP_SlingShot_C.Aim
// 0x000C (0x000C - 0x0000)
struct ABP_SlingShot_C_Aim final
{
public:
	struct FVector                                HandLocation;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_SlingShot_C_Aim) == 0x000004, "Wrong alignment on ABP_SlingShot_C_Aim");
static_assert(sizeof(ABP_SlingShot_C_Aim) == 0x00000C, "Wrong size on ABP_SlingShot_C_Aim");
static_assert(offsetof(ABP_SlingShot_C_Aim, HandLocation) == 0x000000, "Member 'ABP_SlingShot_C_Aim::HandLocation' has a wrong offset!");

// Function ABP_SlingShot.ABP_SlingShot_C.ExecuteUbergraph_ABP_SlingShot
// 0x0018 (0x0018 - 0x0000)
struct ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visibility;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_End;                                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HandLocation;                         // 0x000C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot) == 0x000004, "Wrong alignment on ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot");
static_assert(sizeof(ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot) == 0x000018, "Wrong size on ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot");
static_assert(offsetof(ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot, EntryPoint) == 0x000000, "Member 'ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot, K2Node_Event_Visibility) == 0x000004, "Member 'ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot::K2Node_Event_Visibility' has a wrong offset!");
static_assert(offsetof(ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot, K2Node_Event_End) == 0x000005, "Member 'ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot::K2Node_Event_End' has a wrong offset!");
static_assert(offsetof(ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot, K2Node_Event_DeltaTimeX) == 0x000008, "Member 'ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot, K2Node_Event_HandLocation) == 0x00000C, "Member 'ABP_SlingShot_C_ExecuteUbergraph_ABP_SlingShot::K2Node_Event_HandLocation' has a wrong offset!");

}

