#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Sign_Fukidashi

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Sign_Fukidashi.W_Sign_Fukidashi_C
// 0x0080 (0x0640 - 0x05C0)
class UW_Sign_Fukidashi_C final : public UUISign_Fukidashi
{
public:
	class UWidgetAnimation*                       NewAnimation_1;                                    // 0x05C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NewAnimation;                                      // 0x05C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Wait_Down_2;                                       // 0x05D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Wait_Up_2;                                         // 0x05D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out_Down_2;                                        // 0x05E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In_Down_2;                                         // 0x05E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out_Up_2;                                          // 0x05F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In_Up_2;                                           // 0x05F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Wait_Down;                                         // 0x0600(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Wait_Up;                                           // 0x0608(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out_Down;                                          // 0x0610(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In_Down;                                           // 0x0618(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out_Up;                                            // 0x0620(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In_Up;                                             // 0x0628(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Head_01;                                           // 0x0630(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Text_Base_1Line;                                   // 0x0638(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Sign_Fukidashi_C">();
	}
	static class UW_Sign_Fukidashi_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Sign_Fukidashi_C>();
	}
};
static_assert(alignof(UW_Sign_Fukidashi_C) == 0x000010, "Wrong alignment on UW_Sign_Fukidashi_C");
static_assert(sizeof(UW_Sign_Fukidashi_C) == 0x000640, "Wrong size on UW_Sign_Fukidashi_C");
static_assert(offsetof(UW_Sign_Fukidashi_C, NewAnimation_1) == 0x0005C0, "Member 'UW_Sign_Fukidashi_C::NewAnimation_1' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, NewAnimation) == 0x0005C8, "Member 'UW_Sign_Fukidashi_C::NewAnimation' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, Wait_Down_2) == 0x0005D0, "Member 'UW_Sign_Fukidashi_C::Wait_Down_2' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, Wait_Up_2) == 0x0005D8, "Member 'UW_Sign_Fukidashi_C::Wait_Up_2' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, Out_Down_2) == 0x0005E0, "Member 'UW_Sign_Fukidashi_C::Out_Down_2' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, In_Down_2) == 0x0005E8, "Member 'UW_Sign_Fukidashi_C::In_Down_2' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, Out_Up_2) == 0x0005F0, "Member 'UW_Sign_Fukidashi_C::Out_Up_2' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, In_Up_2) == 0x0005F8, "Member 'UW_Sign_Fukidashi_C::In_Up_2' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, Wait_Down) == 0x000600, "Member 'UW_Sign_Fukidashi_C::Wait_Down' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, Wait_Up) == 0x000608, "Member 'UW_Sign_Fukidashi_C::Wait_Up' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, Out_Down) == 0x000610, "Member 'UW_Sign_Fukidashi_C::Out_Down' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, In_Down) == 0x000618, "Member 'UW_Sign_Fukidashi_C::In_Down' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, Out_Up) == 0x000620, "Member 'UW_Sign_Fukidashi_C::Out_Up' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, In_Up) == 0x000628, "Member 'UW_Sign_Fukidashi_C::In_Up' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, Head_01) == 0x000630, "Member 'UW_Sign_Fukidashi_C::Head_01' has a wrong offset!");
static_assert(offsetof(UW_Sign_Fukidashi_C, Text_Base_1Line) == 0x000638, "Member 'UW_Sign_Fukidashi_C::Text_Base_1Line' has a wrong offset!");

}

