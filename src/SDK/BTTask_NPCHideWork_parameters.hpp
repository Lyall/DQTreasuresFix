#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_NPCHideWork

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DarwinGame_structs.hpp"


namespace SDK::Params
{

// Function BTTask_NPCHideWork.BTTask_NPCHideWork_C.ExecuteUbergraph_BTTask_NPCHideWork
// 0x0168 (0x0168 - 0x0000)
struct BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ANPCBase*                               K2Node_DynamicCast_AsNPCBase;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          Temp_object_Variable;                              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterStateInterfaceForABP> K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterStateInterfaceForABP> K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP_1; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface;          // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0094(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_Distance_ReturnValue;              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_NPCDataAIParam                     CallFunc_GetNPCAiParam_ReturnValue;                // 0x00A8(0x0038)()
	TScriptInterface<class ICharacterInterface>   K2Node_DynamicCast_AsCharacter_Interface_1;        // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue_1;       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          Temp_object_Variable_1;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ICharacterStateInterfaceForABP> K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP_2; // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ICharacterStateInterfaceForABP> K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP_3; // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13A[0x6];                                      // 0x013A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ANPCBase*                               K2Node_DynamicCast_AsNPCBase_1;                    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork) == 0x000008, "Wrong alignment on BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork");
static_assert(sizeof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork) == 0x000168, "Wrong size on BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, EntryPoint) == 0x000000, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, Temp_bool_IsClosed_Variable) == 0x000005, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_Event_OwnerController_1) == 0x000008, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_Event_ControlledPawn_1) == 0x000010, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_AsNPCBase) == 0x000018, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_AsNPCBase' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, Temp_object_Variable) == 0x000028, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP) == 0x000030, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_bSuccess_1) == 0x000040, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP_1) == 0x000048, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_bSuccess_2) == 0x000058, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_AsCharacter_Interface) == 0x000060, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_AsCharacter_Interface' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, CallFunc_GetAnimInstance_ReturnValue) == 0x000078, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, CallFunc_GetPlayerPawn_ReturnValue) == 0x000080, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000088, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000094, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, CallFunc_Vector_Distance_ReturnValue) == 0x0000A0, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000A4, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, CallFunc_GetNPCAiParam_ReturnValue) == 0x0000A8, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::CallFunc_GetNPCAiParam_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_AsCharacter_Interface_1) == 0x0000E0, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_AsCharacter_Interface_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_bSuccess_4) == 0x0000F0, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, CallFunc_GetAnimInstance_ReturnValue_1) == 0x0000F8, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, CallFunc_LessEqual_FloatFloat_ReturnValue_1) == 0x000100, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::CallFunc_LessEqual_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, Temp_object_Variable_1) == 0x000108, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP_2) == 0x000110, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP_2' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_bSuccess_5) == 0x000120, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP_3) == 0x000128, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_AsCharacter_State_Interface_for_ABP_3' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_bSuccess_6) == 0x000138, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_SwitchInteger_CmpSuccess) == 0x000139, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_Event_OwnerController) == 0x000140, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_Event_ControlledPawn) == 0x000148, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_Event_DeltaSeconds) == 0x000150, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_AsNPCBase_1) == 0x000158, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_AsNPCBase_1' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork, K2Node_DynamicCast_bSuccess_7) == 0x000160, "Member 'BTTask_NPCHideWork_C_ExecuteUbergraph_BTTask_NPCHideWork::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");

// Function BTTask_NPCHideWork.BTTask_NPCHideWork_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTTask_NPCHideWork_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_NPCHideWork_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTTask_NPCHideWork_C_ReceiveTickAI");
static_assert(sizeof(BTTask_NPCHideWork_C_ReceiveTickAI) == 0x000018, "Wrong size on BTTask_NPCHideWork_C_ReceiveTickAI");
static_assert(offsetof(BTTask_NPCHideWork_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTTask_NPCHideWork_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTTask_NPCHideWork_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTTask_NPCHideWork_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

// Function BTTask_NPCHideWork.BTTask_NPCHideWork_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_NPCHideWork_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_NPCHideWork_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTTask_NPCHideWork_C_ReceiveExecuteAI");
static_assert(sizeof(BTTask_NPCHideWork_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTTask_NPCHideWork_C_ReceiveExecuteAI");
static_assert(offsetof(BTTask_NPCHideWork_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTTask_NPCHideWork_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_NPCHideWork_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTTask_NPCHideWork_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

}

