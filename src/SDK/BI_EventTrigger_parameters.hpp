#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BI_EventTrigger

#include "Basic.hpp"

#include "DarwinGame_structs.hpp"


namespace SDK::Params
{

// Function BI_EventTrigger.BI_EventTrigger_C.CallPlayEvent
// 0x0058 (0x0058 - 0x0000)
struct BI_EventTrigger_C_CallPlayEvent final
{
public:
	class FString                                 EventID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	EEventType                                    EventType;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   QuestID;                                           // 0x0014(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EQuestState                                   QuestState;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_EventTalktBranchData               TextBranchData;                                    // 0x0020(0x0020)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm)
	TArray<struct FST_TextGoto>                   TextGotoData;                                      // 0x0040(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
	class AActor*                                 Sender;                                            // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_EventTrigger_C_CallPlayEvent) == 0x000008, "Wrong alignment on BI_EventTrigger_C_CallPlayEvent");
static_assert(sizeof(BI_EventTrigger_C_CallPlayEvent) == 0x000058, "Wrong size on BI_EventTrigger_C_CallPlayEvent");
static_assert(offsetof(BI_EventTrigger_C_CallPlayEvent, EventID) == 0x000000, "Member 'BI_EventTrigger_C_CallPlayEvent::EventID' has a wrong offset!");
static_assert(offsetof(BI_EventTrigger_C_CallPlayEvent, EventType) == 0x000010, "Member 'BI_EventTrigger_C_CallPlayEvent::EventType' has a wrong offset!");
static_assert(offsetof(BI_EventTrigger_C_CallPlayEvent, QuestID) == 0x000014, "Member 'BI_EventTrigger_C_CallPlayEvent::QuestID' has a wrong offset!");
static_assert(offsetof(BI_EventTrigger_C_CallPlayEvent, QuestState) == 0x00001C, "Member 'BI_EventTrigger_C_CallPlayEvent::QuestState' has a wrong offset!");
static_assert(offsetof(BI_EventTrigger_C_CallPlayEvent, TextBranchData) == 0x000020, "Member 'BI_EventTrigger_C_CallPlayEvent::TextBranchData' has a wrong offset!");
static_assert(offsetof(BI_EventTrigger_C_CallPlayEvent, TextGotoData) == 0x000040, "Member 'BI_EventTrigger_C_CallPlayEvent::TextGotoData' has a wrong offset!");
static_assert(offsetof(BI_EventTrigger_C_CallPlayEvent, Sender) == 0x000050, "Member 'BI_EventTrigger_C_CallPlayEvent::Sender' has a wrong offset!");

// Function BI_EventTrigger.BI_EventTrigger_C.EndPlayEvent
// 0x0001 (0x0001 - 0x0000)
struct BI_EventTrigger_C_EndPlayEvent final
{
public:
	bool                                          IsEventCancel;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BI_EventTrigger_C_EndPlayEvent) == 0x000001, "Wrong alignment on BI_EventTrigger_C_EndPlayEvent");
static_assert(sizeof(BI_EventTrigger_C_EndPlayEvent) == 0x000001, "Wrong size on BI_EventTrigger_C_EndPlayEvent");
static_assert(offsetof(BI_EventTrigger_C_EndPlayEvent, IsEventCancel) == 0x000000, "Member 'BI_EventTrigger_C_EndPlayEvent::IsEventCancel' has a wrong offset!");

// Function BI_EventTrigger.BI_EventTrigger_C.SendEvent
// 0x0018 (0x0018 - 0x0000)
struct BI_EventTrigger_C_SendEvent final
{
public:
	class FName                                   EventID;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        Sender;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DebugMode;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BI_EventTrigger_C_SendEvent) == 0x000008, "Wrong alignment on BI_EventTrigger_C_SendEvent");
static_assert(sizeof(BI_EventTrigger_C_SendEvent) == 0x000018, "Wrong size on BI_EventTrigger_C_SendEvent");
static_assert(offsetof(BI_EventTrigger_C_SendEvent, EventID) == 0x000000, "Member 'BI_EventTrigger_C_SendEvent::EventID' has a wrong offset!");
static_assert(offsetof(BI_EventTrigger_C_SendEvent, Sender) == 0x000008, "Member 'BI_EventTrigger_C_SendEvent::Sender' has a wrong offset!");
static_assert(offsetof(BI_EventTrigger_C_SendEvent, DebugMode) == 0x000010, "Member 'BI_EventTrigger_C_SendEvent::DebugMode' has a wrong offset!");

// Function BI_EventTrigger.BI_EventTrigger_C.SetEventSendNpc
// 0x0008 (0x0008 - 0x0000)
struct BI_EventTrigger_C_SetEventSendNpc final
{
public:
	class ABP_NPC_C*                              SendActor;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_EventTrigger_C_SetEventSendNpc) == 0x000008, "Wrong alignment on BI_EventTrigger_C_SetEventSendNpc");
static_assert(sizeof(BI_EventTrigger_C_SetEventSendNpc) == 0x000008, "Wrong size on BI_EventTrigger_C_SetEventSendNpc");
static_assert(offsetof(BI_EventTrigger_C_SetEventSendNpc, SendActor) == 0x000000, "Member 'BI_EventTrigger_C_SetEventSendNpc::SendActor' has a wrong offset!");

// Function BI_EventTrigger.BI_EventTrigger_C.SendLiftEvent
// 0x0018 (0x0018 - 0x0000)
struct BI_EventTrigger_C_SendLiftEvent final
{
public:
	class UBP_EventSender_C*                      EventSender;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LiftId;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   StarScarId;                                        // 0x000C(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BI_EventTrigger_C_SendLiftEvent) == 0x000008, "Wrong alignment on BI_EventTrigger_C_SendLiftEvent");
static_assert(sizeof(BI_EventTrigger_C_SendLiftEvent) == 0x000018, "Wrong size on BI_EventTrigger_C_SendLiftEvent");
static_assert(offsetof(BI_EventTrigger_C_SendLiftEvent, EventSender) == 0x000000, "Member 'BI_EventTrigger_C_SendLiftEvent::EventSender' has a wrong offset!");
static_assert(offsetof(BI_EventTrigger_C_SendLiftEvent, LiftId) == 0x000008, "Member 'BI_EventTrigger_C_SendLiftEvent::LiftId' has a wrong offset!");
static_assert(offsetof(BI_EventTrigger_C_SendLiftEvent, StarScarId) == 0x00000C, "Member 'BI_EventTrigger_C_SendLiftEvent::StarScarId' has a wrong offset!");

}

