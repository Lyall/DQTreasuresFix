#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTTask_TraceTo

#include "Basic.hpp"


namespace SDK::Params
{

// Function BTTask_TraceTo.BTTask_TraceTo_C.ExecuteUbergraph_BTTask_TraceTo
// 0x00B8 (0x00B8 - 0x0000)
struct BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFieldManager*                          CallFunc_GetInstance_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_3;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_3;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMonsterBTTaskExecuter*                 CallFunc_GetMonsterBTTaskExecuter_ReturnValue;     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMonsterBase*                           K2Node_DynamicCast_AsMonster_Base;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFieldManager*                          CallFunc_GetInstance_ReturnValue_1;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMonsterBTTaskExecuter*                 CallFunc_GetMonsterBTTaskExecuter_ReturnValue_1;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController_2;                    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_2;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ExecuteTask_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMonsterBase*                           K2Node_DynamicCast_AsMonster_Base_1;               // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AAIController*                          K2Node_Event_OwnerController_1;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn_1;                     // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AAIController*                          K2Node_Event_OwnerController;                      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_ControlledPawn;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AMonsterBase*                           K2Node_DynamicCast_AsMonster_Base_2;               // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AMonsterBase*                           K2Node_DynamicCast_AsMonster_Base_3;               // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo) == 0x000008, "Wrong alignment on BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo");
static_assert(sizeof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo) == 0x0000B8, "Wrong size on BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, EntryPoint) == 0x000000, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::EntryPoint' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, CallFunc_GetInstance_ReturnValue) == 0x000008, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_Event_OwnerController_3) == 0x000010, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_Event_OwnerController_3' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_Event_ControlledPawn_3) == 0x000018, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_Event_ControlledPawn_3' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_Event_DeltaSeconds) == 0x000020, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, CallFunc_GetMonsterBTTaskExecuter_ReturnValue) == 0x000028, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::CallFunc_GetMonsterBTTaskExecuter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_DynamicCast_AsMonster_Base) == 0x000030, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_DynamicCast_AsMonster_Base' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, CallFunc_GetInstance_ReturnValue_1) == 0x000040, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::CallFunc_GetInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, CallFunc_GetMonsterBTTaskExecuter_ReturnValue_1) == 0x000048, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::CallFunc_GetMonsterBTTaskExecuter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_Event_OwnerController_2) == 0x000050, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_Event_OwnerController_2' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_Event_ControlledPawn_2) == 0x000058, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_Event_ControlledPawn_2' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, CallFunc_ExecuteTask_ReturnValue) == 0x000060, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::CallFunc_ExecuteTask_ReturnValue' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_DynamicCast_AsMonster_Base_1) == 0x000068, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_DynamicCast_AsMonster_Base_1' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_Event_OwnerController_1) == 0x000078, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_Event_OwnerController_1' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_Event_ControlledPawn_1) == 0x000080, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_Event_ControlledPawn_1' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_Event_OwnerController) == 0x000088, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_Event_OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_Event_ControlledPawn) == 0x000090, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_Event_ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_DynamicCast_AsMonster_Base_2) == 0x000098, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_DynamicCast_AsMonster_Base_2' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_DynamicCast_AsMonster_Base_3) == 0x0000A8, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_DynamicCast_AsMonster_Base_3' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo, K2Node_DynamicCast_bSuccess_3) == 0x0000B0, "Member 'BTTask_TraceTo_C_ExecuteUbergraph_BTTask_TraceTo::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");

// Function BTTask_TraceTo.BTTask_TraceTo_C.ReceiveFinished
// 0x0010 (0x0010 - 0x0000)
struct BTTask_TraceTo_C_ReceiveFinished final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_TraceTo_C_ReceiveFinished) == 0x000008, "Wrong alignment on BTTask_TraceTo_C_ReceiveFinished");
static_assert(sizeof(BTTask_TraceTo_C_ReceiveFinished) == 0x000010, "Wrong size on BTTask_TraceTo_C_ReceiveFinished");
static_assert(offsetof(BTTask_TraceTo_C_ReceiveFinished, OwnerController) == 0x000000, "Member 'BTTask_TraceTo_C_ReceiveFinished::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ReceiveFinished, ControlledPawn) == 0x000008, "Member 'BTTask_TraceTo_C_ReceiveFinished::ControlledPawn' has a wrong offset!");

// Function BTTask_TraceTo.BTTask_TraceTo_C.ReceiveAbortAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_TraceTo_C_ReceiveAbortAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_TraceTo_C_ReceiveAbortAI) == 0x000008, "Wrong alignment on BTTask_TraceTo_C_ReceiveAbortAI");
static_assert(sizeof(BTTask_TraceTo_C_ReceiveAbortAI) == 0x000010, "Wrong size on BTTask_TraceTo_C_ReceiveAbortAI");
static_assert(offsetof(BTTask_TraceTo_C_ReceiveAbortAI, OwnerController) == 0x000000, "Member 'BTTask_TraceTo_C_ReceiveAbortAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ReceiveAbortAI, ControlledPawn) == 0x000008, "Member 'BTTask_TraceTo_C_ReceiveAbortAI::ControlledPawn' has a wrong offset!");

// Function BTTask_TraceTo.BTTask_TraceTo_C.ReceiveExecuteAI
// 0x0010 (0x0010 - 0x0000)
struct BTTask_TraceTo_C_ReceiveExecuteAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_TraceTo_C_ReceiveExecuteAI) == 0x000008, "Wrong alignment on BTTask_TraceTo_C_ReceiveExecuteAI");
static_assert(sizeof(BTTask_TraceTo_C_ReceiveExecuteAI) == 0x000010, "Wrong size on BTTask_TraceTo_C_ReceiveExecuteAI");
static_assert(offsetof(BTTask_TraceTo_C_ReceiveExecuteAI, OwnerController) == 0x000000, "Member 'BTTask_TraceTo_C_ReceiveExecuteAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ReceiveExecuteAI, ControlledPawn) == 0x000008, "Member 'BTTask_TraceTo_C_ReceiveExecuteAI::ControlledPawn' has a wrong offset!");

// Function BTTask_TraceTo.BTTask_TraceTo_C.ReceiveTickAI
// 0x0018 (0x0018 - 0x0000)
struct BTTask_TraceTo_C_ReceiveTickAI final
{
public:
	class AAIController*                          OwnerController;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  ControlledPawn;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         DeltaSeconds;                                      // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BTTask_TraceTo_C_ReceiveTickAI) == 0x000008, "Wrong alignment on BTTask_TraceTo_C_ReceiveTickAI");
static_assert(sizeof(BTTask_TraceTo_C_ReceiveTickAI) == 0x000018, "Wrong size on BTTask_TraceTo_C_ReceiveTickAI");
static_assert(offsetof(BTTask_TraceTo_C_ReceiveTickAI, OwnerController) == 0x000000, "Member 'BTTask_TraceTo_C_ReceiveTickAI::OwnerController' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ReceiveTickAI, ControlledPawn) == 0x000008, "Member 'BTTask_TraceTo_C_ReceiveTickAI::ControlledPawn' has a wrong offset!");
static_assert(offsetof(BTTask_TraceTo_C_ReceiveTickAI, DeltaSeconds) == 0x000010, "Member 'BTTask_TraceTo_C_ReceiveTickAI::DeltaSeconds' has a wrong offset!");

}

