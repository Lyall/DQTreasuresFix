#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BFL_Debug

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BFL_Debug.BFL_Debug_C.デバッグ機能
// 0x0018 (0x0018 - 0x0000)
struct BFL_Debug_C_m__________________1 final
{
public:
	class FName                                   m________;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                m_WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BFL_Debug_C_m__________________1) == 0x000008, "Wrong alignment on BFL_Debug_C_m__________________1");
static_assert(sizeof(BFL_Debug_C_m__________________1) == 0x000018, "Wrong size on BFL_Debug_C_m__________________1");
static_assert(offsetof(BFL_Debug_C_m__________________1, m________) == 0x000000, "Member 'BFL_Debug_C_m__________________1::m________' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m__________________1, m_WorldContext) == 0x000008, "Member 'BFL_Debug_C_m__________________1::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m__________________1, K2Node_SwitchName_CmpSuccess) == 0x000010, "Member 'BFL_Debug_C_m__________________1::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function BFL_Debug.BFL_Debug_C.表示モデル
// 0x0008 (0x0008 - 0x0000)
struct BFL_Debug_C_m_______________0 final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Debug_C_m_______________0) == 0x000008, "Wrong alignment on BFL_Debug_C_m_______________0");
static_assert(sizeof(BFL_Debug_C_m_______________0) == 0x000008, "Wrong size on BFL_Debug_C_m_______________0");
static_assert(offsetof(BFL_Debug_C_m_______________0, m_WorldContext) == 0x000000, "Member 'BFL_Debug_C_m_______________0::m_WorldContext' has a wrong offset!");

// Function BFL_Debug.BFL_Debug_C.IsSwitchOn
// 0x0020 (0x0020 - 0x0000)
struct BFL_Debug_C_IsSwitchOn final
{
public:
	class FName                                   m________;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                m_WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          on;                                                // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetActionDebugParamValue_ReturnValue;     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BFL_Debug_C_IsSwitchOn) == 0x000008, "Wrong alignment on BFL_Debug_C_IsSwitchOn");
static_assert(sizeof(BFL_Debug_C_IsSwitchOn) == 0x000020, "Wrong size on BFL_Debug_C_IsSwitchOn");
static_assert(offsetof(BFL_Debug_C_IsSwitchOn, m________) == 0x000000, "Member 'BFL_Debug_C_IsSwitchOn::m________' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_IsSwitchOn, m_WorldContext) == 0x000008, "Member 'BFL_Debug_C_IsSwitchOn::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_IsSwitchOn, on) == 0x000010, "Member 'BFL_Debug_C_IsSwitchOn::on' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_IsSwitchOn, CallFunc_GetActionDebugParamValue_ReturnValue) == 0x000014, "Member 'BFL_Debug_C_IsSwitchOn::CallFunc_GetActionDebugParamValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_IsSwitchOn, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000018, "Member 'BFL_Debug_C_IsSwitchOn::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");

// Function BFL_Debug.BFL_Debug_C.プレイヤー非表示
// 0x0010 (0x0010 - 0x0000)
struct BFL_Debug_C_m_______________________ final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwitchOn_On;                            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BFL_Debug_C_m_______________________) == 0x000008, "Wrong alignment on BFL_Debug_C_m_______________________");
static_assert(sizeof(BFL_Debug_C_m_______________________) == 0x000010, "Wrong size on BFL_Debug_C_m_______________________");
static_assert(offsetof(BFL_Debug_C_m_______________________, m_WorldContext) == 0x000000, "Member 'BFL_Debug_C_m_______________________::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m_______________________, CallFunc_IsSwitchOn_On) == 0x000008, "Member 'BFL_Debug_C_m_______________________::CallFunc_IsSwitchOn_On' has a wrong offset!");

// Function BFL_Debug.BFL_Debug_C.デバッグカメラ
// 0x0010 (0x0010 - 0x0000)
struct BFL_Debug_C_m____________________ final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwitchOn_On;                            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BFL_Debug_C_m____________________) == 0x000008, "Wrong alignment on BFL_Debug_C_m____________________");
static_assert(sizeof(BFL_Debug_C_m____________________) == 0x000010, "Wrong size on BFL_Debug_C_m____________________");
static_assert(offsetof(BFL_Debug_C_m____________________, m_WorldContext) == 0x000000, "Member 'BFL_Debug_C_m____________________::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m____________________, CallFunc_IsSwitchOn_On) == 0x000008, "Member 'BFL_Debug_C_m____________________::CallFunc_IsSwitchOn_On' has a wrong offset!");

// Function BFL_Debug.BFL_Debug_C.デバッグオブジェクト表示
// 0x0010 (0x0010 - 0x0000)
struct BFL_Debug_C_m___________________________________ final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwitchOn_On;                            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BFL_Debug_C_m___________________________________) == 0x000008, "Wrong alignment on BFL_Debug_C_m___________________________________");
static_assert(sizeof(BFL_Debug_C_m___________________________________) == 0x000010, "Wrong size on BFL_Debug_C_m___________________________________");
static_assert(offsetof(BFL_Debug_C_m___________________________________, m_WorldContext) == 0x000000, "Member 'BFL_Debug_C_m___________________________________::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m___________________________________, CallFunc_IsSwitchOn_On) == 0x000008, "Member 'BFL_Debug_C_m___________________________________::CallFunc_IsSwitchOn_On' has a wrong offset!");

// Function BFL_Debug.BFL_Debug_C.デバッグ移動
// 0x0010 (0x0010 - 0x0000)
struct BFL_Debug_C_m__________________0 final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwitchOn_On;                            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BFL_Debug_C_m__________________0) == 0x000008, "Wrong alignment on BFL_Debug_C_m__________________0");
static_assert(sizeof(BFL_Debug_C_m__________________0) == 0x000010, "Wrong size on BFL_Debug_C_m__________________0");
static_assert(offsetof(BFL_Debug_C_m__________________0, m_WorldContext) == 0x000000, "Member 'BFL_Debug_C_m__________________0::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m__________________0, CallFunc_IsSwitchOn_On) == 0x000008, "Member 'BFL_Debug_C_m__________________0::CallFunc_IsSwitchOn_On' has a wrong offset!");

// Function BFL_Debug.BFL_Debug_C.DrawDebugLine
// 0x0058 (0x0058 - 0x0000)
struct BFL_Debug_C_DrawDebugLine final
{
public:
	struct FVector                                StartPosition;                                     // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x000C(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Length;                                            // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x001C(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x002C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Thickness;                                         // 0x0030(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContext;                                    // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0040(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x004C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Debug_C_DrawDebugLine) == 0x000008, "Wrong alignment on BFL_Debug_C_DrawDebugLine");
static_assert(sizeof(BFL_Debug_C_DrawDebugLine) == 0x000058, "Wrong size on BFL_Debug_C_DrawDebugLine");
static_assert(offsetof(BFL_Debug_C_DrawDebugLine, StartPosition) == 0x000000, "Member 'BFL_Debug_C_DrawDebugLine::StartPosition' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_DrawDebugLine, Direction) == 0x00000C, "Member 'BFL_Debug_C_DrawDebugLine::Direction' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_DrawDebugLine, Length) == 0x000018, "Member 'BFL_Debug_C_DrawDebugLine::Length' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_DrawDebugLine, Color) == 0x00001C, "Member 'BFL_Debug_C_DrawDebugLine::Color' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_DrawDebugLine, Duration) == 0x00002C, "Member 'BFL_Debug_C_DrawDebugLine::Duration' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_DrawDebugLine, Thickness) == 0x000030, "Member 'BFL_Debug_C_DrawDebugLine::Thickness' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_DrawDebugLine, m_WorldContext) == 0x000038, "Member 'BFL_Debug_C_DrawDebugLine::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_DrawDebugLine, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000040, "Member 'BFL_Debug_C_DrawDebugLine::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_DrawDebugLine, CallFunc_Add_VectorVector_ReturnValue) == 0x00004C, "Member 'BFL_Debug_C_DrawDebugLine::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");

// Function BFL_Debug.BFL_Debug_C.無敵モード
// 0x0010 (0x0010 - 0x0000)
struct BFL_Debug_C_m______________ final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwitchOn_On;                            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BFL_Debug_C_m______________) == 0x000008, "Wrong alignment on BFL_Debug_C_m______________");
static_assert(sizeof(BFL_Debug_C_m______________) == 0x000010, "Wrong size on BFL_Debug_C_m______________");
static_assert(offsetof(BFL_Debug_C_m______________, m_WorldContext) == 0x000000, "Member 'BFL_Debug_C_m______________::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m______________, CallFunc_IsSwitchOn_On) == 0x000008, "Member 'BFL_Debug_C_m______________::CallFunc_IsSwitchOn_On' has a wrong offset!");

// Function BFL_Debug.BFL_Debug_C.ロックオンエリア表示
// 0x0038 (0x0038 - 0x0000)
struct BFL_Debug_C_m_____________________________ final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_LockOnTarget_C*>             CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwitchOn_On;                            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_LockOnTarget_C*                     CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Debug_C_m_____________________________) == 0x000008, "Wrong alignment on BFL_Debug_C_m_____________________________");
static_assert(sizeof(BFL_Debug_C_m_____________________________) == 0x000038, "Wrong size on BFL_Debug_C_m_____________________________");
static_assert(offsetof(BFL_Debug_C_m_____________________________, m_WorldContext) == 0x000000, "Member 'BFL_Debug_C_m_____________________________::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m_____________________________, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'BFL_Debug_C_m_____________________________::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m_____________________________, CallFunc_IsSwitchOn_On) == 0x000018, "Member 'BFL_Debug_C_m_____________________________::CallFunc_IsSwitchOn_On' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m_____________________________, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BFL_Debug_C_m_____________________________::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m_____________________________, Temp_int_Array_Index_Variable) == 0x000020, "Member 'BFL_Debug_C_m_____________________________::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m_____________________________, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'BFL_Debug_C_m_____________________________::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m_____________________________, CallFunc_Array_Get_Item) == 0x000028, "Member 'BFL_Debug_C_m_____________________________::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m_____________________________, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BFL_Debug_C_m_____________________________::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m_____________________________, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'BFL_Debug_C_m_____________________________::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function BFL_Debug.BFL_Debug_C.GetActionDebugParamValue
// 0x0028 (0x0028 - 0x0000)
struct BFL_Debug_C_GetActionDebugParamValue final
{
public:
	class FName                                   ListName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IndexName;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParamName;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                m_WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Debug_C_GetActionDebugParamValue) == 0x000008, "Wrong alignment on BFL_Debug_C_GetActionDebugParamValue");
static_assert(sizeof(BFL_Debug_C_GetActionDebugParamValue) == 0x000028, "Wrong size on BFL_Debug_C_GetActionDebugParamValue");
static_assert(offsetof(BFL_Debug_C_GetActionDebugParamValue, ListName) == 0x000000, "Member 'BFL_Debug_C_GetActionDebugParamValue::ListName' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_GetActionDebugParamValue, IndexName) == 0x000008, "Member 'BFL_Debug_C_GetActionDebugParamValue::IndexName' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_GetActionDebugParamValue, ParamName) == 0x000010, "Member 'BFL_Debug_C_GetActionDebugParamValue::ParamName' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_GetActionDebugParamValue, m_WorldContext) == 0x000018, "Member 'BFL_Debug_C_GetActionDebugParamValue::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_GetActionDebugParamValue, ReturnValue) == 0x000020, "Member 'BFL_Debug_C_GetActionDebugParamValue::ReturnValue' has a wrong offset!");

// Function BFL_Debug.BFL_Debug_C.AddActionDebugParamValue
// 0x0030 (0x0030 - 0x0000)
struct BFL_Debug_C_AddActionDebugParamValue final
{
public:
	class FName                                   ListName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IndexName;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ParamName;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         AddValue;                                          // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ReturnValue;                                       // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Debug_C_AddActionDebugParamValue) == 0x000008, "Wrong alignment on BFL_Debug_C_AddActionDebugParamValue");
static_assert(sizeof(BFL_Debug_C_AddActionDebugParamValue) == 0x000030, "Wrong size on BFL_Debug_C_AddActionDebugParamValue");
static_assert(offsetof(BFL_Debug_C_AddActionDebugParamValue, ListName) == 0x000000, "Member 'BFL_Debug_C_AddActionDebugParamValue::ListName' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_AddActionDebugParamValue, IndexName) == 0x000008, "Member 'BFL_Debug_C_AddActionDebugParamValue::IndexName' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_AddActionDebugParamValue, ParamName) == 0x000010, "Member 'BFL_Debug_C_AddActionDebugParamValue::ParamName' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_AddActionDebugParamValue, AddValue) == 0x000018, "Member 'BFL_Debug_C_AddActionDebugParamValue::AddValue' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_AddActionDebugParamValue, m_WorldContext) == 0x000020, "Member 'BFL_Debug_C_AddActionDebugParamValue::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_AddActionDebugParamValue, ReturnValue) == 0x000028, "Member 'BFL_Debug_C_AddActionDebugParamValue::ReturnValue' has a wrong offset!");

// Function BFL_Debug.BFL_Debug_C.足跡撮影
// 0x0010 (0x0010 - 0x0000)
struct BFL_Debug_C_m___________ final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSwitchOn_On;                            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BFL_Debug_C_m___________) == 0x000008, "Wrong alignment on BFL_Debug_C_m___________");
static_assert(sizeof(BFL_Debug_C_m___________) == 0x000010, "Wrong size on BFL_Debug_C_m___________");
static_assert(offsetof(BFL_Debug_C_m___________, m_WorldContext) == 0x000000, "Member 'BFL_Debug_C_m___________::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_m___________, CallFunc_IsSwitchOn_On) == 0x000008, "Member 'BFL_Debug_C_m___________::CallFunc_IsSwitchOn_On' has a wrong offset!");

// Function BFL_Debug.BFL_Debug_C.移動距離表示
// 0x0008 (0x0008 - 0x0000)
struct BFL_Debug_C_m_________________ final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Debug_C_m_________________) == 0x000008, "Wrong alignment on BFL_Debug_C_m_________________");
static_assert(sizeof(BFL_Debug_C_m_________________) == 0x000008, "Wrong size on BFL_Debug_C_m_________________");
static_assert(offsetof(BFL_Debug_C_m_________________, m_WorldContext) == 0x000000, "Member 'BFL_Debug_C_m_________________::m_WorldContext' has a wrong offset!");

// Function BFL_Debug.BFL_Debug_C.PrintStringOnlyDisplay
// 0x0030 (0x0030 - 0x0000)
struct BFL_Debug_C_PrintStringOnlyDisplay final
{
public:
	class FString                                 inString;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FLinearColor                           TextColor;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Duration;                                          // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContext;                                    // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BFL_Debug_C_PrintStringOnlyDisplay) == 0x000008, "Wrong alignment on BFL_Debug_C_PrintStringOnlyDisplay");
static_assert(sizeof(BFL_Debug_C_PrintStringOnlyDisplay) == 0x000030, "Wrong size on BFL_Debug_C_PrintStringOnlyDisplay");
static_assert(offsetof(BFL_Debug_C_PrintStringOnlyDisplay, inString) == 0x000000, "Member 'BFL_Debug_C_PrintStringOnlyDisplay::inString' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_PrintStringOnlyDisplay, TextColor) == 0x000010, "Member 'BFL_Debug_C_PrintStringOnlyDisplay::TextColor' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_PrintStringOnlyDisplay, Duration) == 0x000020, "Member 'BFL_Debug_C_PrintStringOnlyDisplay::Duration' has a wrong offset!");
static_assert(offsetof(BFL_Debug_C_PrintStringOnlyDisplay, m_WorldContext) == 0x000028, "Member 'BFL_Debug_C_PrintStringOnlyDisplay::m_WorldContext' has a wrong offset!");

}

