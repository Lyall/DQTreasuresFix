#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_FieldManagerLibrary

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_FieldManagerLibrary.BP_FieldManagerLibrary_C.GetFieldManager
// 0x0028 (0x0028 - 0x0000)
struct BP_FieldManagerLibrary_C_GetFieldManager final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_FieldManager_C*                     FieldManager;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFieldManager*                          CallFunc_GetInstance_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_FieldManager_C*                     K2Node_DynamicCast_AsBP_Field_Manager;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FieldManagerLibrary_C_GetFieldManager) == 0x000008, "Wrong alignment on BP_FieldManagerLibrary_C_GetFieldManager");
static_assert(sizeof(BP_FieldManagerLibrary_C_GetFieldManager) == 0x000028, "Wrong size on BP_FieldManagerLibrary_C_GetFieldManager");
static_assert(offsetof(BP_FieldManagerLibrary_C_GetFieldManager, m_WorldContext) == 0x000000, "Member 'BP_FieldManagerLibrary_C_GetFieldManager::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FieldManagerLibrary_C_GetFieldManager, FieldManager) == 0x000008, "Member 'BP_FieldManagerLibrary_C_GetFieldManager::FieldManager' has a wrong offset!");
static_assert(offsetof(BP_FieldManagerLibrary_C_GetFieldManager, CallFunc_GetInstance_ReturnValue) == 0x000010, "Member 'BP_FieldManagerLibrary_C_GetFieldManager::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FieldManagerLibrary_C_GetFieldManager, K2Node_DynamicCast_AsBP_Field_Manager) == 0x000018, "Member 'BP_FieldManagerLibrary_C_GetFieldManager::K2Node_DynamicCast_AsBP_Field_Manager' has a wrong offset!");
static_assert(offsetof(BP_FieldManagerLibrary_C_GetFieldManager, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_FieldManagerLibrary_C_GetFieldManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_FieldManagerLibrary.BP_FieldManagerLibrary_C.GetWorldTimeManager
// 0x0030 (0x0030 - 0x0000)
struct BP_FieldManagerLibrary_C_GetWorldTimeManager final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_WorldTimeManager_C*                 WorldTimeManager;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_FieldManager_C*                     CallFunc_GetFieldManager_FieldManager;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWorldTimeManager*                      CallFunc_GetWorldTimeManager_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_WorldTimeManager_C*                 K2Node_DynamicCast_AsBP_World_Time_Manager;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_FieldManagerLibrary_C_GetWorldTimeManager) == 0x000008, "Wrong alignment on BP_FieldManagerLibrary_C_GetWorldTimeManager");
static_assert(sizeof(BP_FieldManagerLibrary_C_GetWorldTimeManager) == 0x000030, "Wrong size on BP_FieldManagerLibrary_C_GetWorldTimeManager");
static_assert(offsetof(BP_FieldManagerLibrary_C_GetWorldTimeManager, m_WorldContext) == 0x000000, "Member 'BP_FieldManagerLibrary_C_GetWorldTimeManager::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_FieldManagerLibrary_C_GetWorldTimeManager, WorldTimeManager) == 0x000008, "Member 'BP_FieldManagerLibrary_C_GetWorldTimeManager::WorldTimeManager' has a wrong offset!");
static_assert(offsetof(BP_FieldManagerLibrary_C_GetWorldTimeManager, CallFunc_GetFieldManager_FieldManager) == 0x000010, "Member 'BP_FieldManagerLibrary_C_GetWorldTimeManager::CallFunc_GetFieldManager_FieldManager' has a wrong offset!");
static_assert(offsetof(BP_FieldManagerLibrary_C_GetWorldTimeManager, CallFunc_GetWorldTimeManager_ReturnValue) == 0x000018, "Member 'BP_FieldManagerLibrary_C_GetWorldTimeManager::CallFunc_GetWorldTimeManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_FieldManagerLibrary_C_GetWorldTimeManager, K2Node_DynamicCast_AsBP_World_Time_Manager) == 0x000020, "Member 'BP_FieldManagerLibrary_C_GetWorldTimeManager::K2Node_DynamicCast_AsBP_World_Time_Manager' has a wrong offset!");
static_assert(offsetof(BP_FieldManagerLibrary_C_GetWorldTimeManager, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_FieldManagerLibrary_C_GetWorldTimeManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

