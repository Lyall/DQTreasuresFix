#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: LS_BossFinish

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DarwinGame_structs.hpp"
#include "LevelSequence_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass LS_BossFinish.LS_BossFinish_SequenceDirector_C
// 0x0060 (0x0098 - 0x0038)
class ULS_BossFinish_SequenceDirector_C final : public ULevelSequenceDirector
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0038(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	float                                         Timer;                                             // 0x0040(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BossFinishTimer_C*                  CEV_Timer_Ref;                                     // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FocusLocation;                                     // 0x0050(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   SocketNameTarget;                                  // 0x005C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AddLocation;                                       // 0x0064(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Yaw;                                               // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGPACharacter*                          GPA_Ref;                                           // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsInitializeSuccess;                               // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Length;                                            // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClose;                                           // 0x0088(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                NewLocation;                                       // 0x008C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_LS_BossFinish_SequenceDirector(int32 EntryPoint);
	void CEV_CutFade();
	void CEV_CloseUpDate();
	void CEV_UseSocketPosition(class ACineCameraActor* CineCamera);
	void CEV_LoopJump();
	void Result_TimeOver();
	void CEV_InitTimer(class ABP_BossFinishTimer_C* BP_Boss_Finish_Timer_Event);
	void CEV_GetBossInit(class AActor* BossActor);
	void Result_TalkEvent();
	void CEV_MessageStartUp();
	void CEV_FadeIn();
	void CEV_FadeOut();
	void FC_RequestSocketNameFromKind(class FName* ResultSocket);
	void FC_AddOffSetLocation(struct FVector* AddOffsetLocation, float* SpringLength);
	void FC_IsSilverBones(class AGPACharacter* Character, bool* IsBoss);
	void SequenceEvent__ENTRYPOINTLS_BossFinish_SequenceDirector_0();
	void SequenceEvent__ENTRYPOINTLS_BossFinish_SequenceDirector_1();
	void SequenceEvent__ENTRYPOINTLS_BossFinish_SequenceDirector_2();
	void SequenceEvent__ENTRYPOINTLS_BossFinish_SequenceDirector_3(class AActor* BossActor);
	void SequenceEvent__ENTRYPOINTLS_BossFinish_SequenceDirector_4(class ABP_BossFinishTimer_C* BP_Boss_Finish_Timer_Event);
	void SequenceEvent__ENTRYPOINTLS_BossFinish_SequenceDirector_5();
	void SequenceEvent__ENTRYPOINTLS_BossFinish_SequenceDirector_6(class ACineCameraActor* CineCamera);
	void SequenceEvent__ENTRYPOINTLS_BossFinish_SequenceDirector_7();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"LS_BossFinish_SequenceDirector_C">();
	}
	static class ULS_BossFinish_SequenceDirector_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ULS_BossFinish_SequenceDirector_C>();
	}
};
static_assert(alignof(ULS_BossFinish_SequenceDirector_C) == 0x000008, "Wrong alignment on ULS_BossFinish_SequenceDirector_C");
static_assert(sizeof(ULS_BossFinish_SequenceDirector_C) == 0x000098, "Wrong size on ULS_BossFinish_SequenceDirector_C");
static_assert(offsetof(ULS_BossFinish_SequenceDirector_C, UberGraphFrame) == 0x000038, "Member 'ULS_BossFinish_SequenceDirector_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ULS_BossFinish_SequenceDirector_C, Timer) == 0x000040, "Member 'ULS_BossFinish_SequenceDirector_C::Timer' has a wrong offset!");
static_assert(offsetof(ULS_BossFinish_SequenceDirector_C, CEV_Timer_Ref) == 0x000048, "Member 'ULS_BossFinish_SequenceDirector_C::CEV_Timer_Ref' has a wrong offset!");
static_assert(offsetof(ULS_BossFinish_SequenceDirector_C, FocusLocation) == 0x000050, "Member 'ULS_BossFinish_SequenceDirector_C::FocusLocation' has a wrong offset!");
static_assert(offsetof(ULS_BossFinish_SequenceDirector_C, SocketNameTarget) == 0x00005C, "Member 'ULS_BossFinish_SequenceDirector_C::SocketNameTarget' has a wrong offset!");
static_assert(offsetof(ULS_BossFinish_SequenceDirector_C, AddLocation) == 0x000064, "Member 'ULS_BossFinish_SequenceDirector_C::AddLocation' has a wrong offset!");
static_assert(offsetof(ULS_BossFinish_SequenceDirector_C, Yaw) == 0x000070, "Member 'ULS_BossFinish_SequenceDirector_C::Yaw' has a wrong offset!");
static_assert(offsetof(ULS_BossFinish_SequenceDirector_C, GPA_Ref) == 0x000078, "Member 'ULS_BossFinish_SequenceDirector_C::GPA_Ref' has a wrong offset!");
static_assert(offsetof(ULS_BossFinish_SequenceDirector_C, IsInitializeSuccess) == 0x000080, "Member 'ULS_BossFinish_SequenceDirector_C::IsInitializeSuccess' has a wrong offset!");
static_assert(offsetof(ULS_BossFinish_SequenceDirector_C, Length) == 0x000084, "Member 'ULS_BossFinish_SequenceDirector_C::Length' has a wrong offset!");
static_assert(offsetof(ULS_BossFinish_SequenceDirector_C, IsClose) == 0x000088, "Member 'ULS_BossFinish_SequenceDirector_C::IsClose' has a wrong offset!");
static_assert(offsetof(ULS_BossFinish_SequenceDirector_C, NewLocation) == 0x00008C, "Member 'ULS_BossFinish_SequenceDirector_C::NewLocation' has a wrong offset!");

}

