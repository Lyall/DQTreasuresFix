#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Volume_03

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Volume_03.W_Volume_03_C
// 0x0048 (0x0618 - 0x05D0)
class UW_Volume_03_C final : public UUIVolume_01
{
public:
	class UWidgetAnimation*                       Wait;                                              // 0x05D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       off;                                               // 0x05D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       on;                                                // 0x05E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           arrow;                                             // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ChoiceBase_Additive;                               // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ChoiceFrame;                                       // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_01;                                           // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Icon_02;                                           // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VolumeGauge_03_C*                    W_VolumeGauge_01;                                  // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Volume_03_C">();
	}
	static class UW_Volume_03_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Volume_03_C>();
	}
};
static_assert(alignof(UW_Volume_03_C) == 0x000008, "Wrong alignment on UW_Volume_03_C");
static_assert(sizeof(UW_Volume_03_C) == 0x000618, "Wrong size on UW_Volume_03_C");
static_assert(offsetof(UW_Volume_03_C, Wait) == 0x0005D0, "Member 'UW_Volume_03_C::Wait' has a wrong offset!");
static_assert(offsetof(UW_Volume_03_C, off) == 0x0005D8, "Member 'UW_Volume_03_C::off' has a wrong offset!");
static_assert(offsetof(UW_Volume_03_C, on) == 0x0005E0, "Member 'UW_Volume_03_C::on' has a wrong offset!");
static_assert(offsetof(UW_Volume_03_C, arrow) == 0x0005E8, "Member 'UW_Volume_03_C::arrow' has a wrong offset!");
static_assert(offsetof(UW_Volume_03_C, ChoiceBase_Additive) == 0x0005F0, "Member 'UW_Volume_03_C::ChoiceBase_Additive' has a wrong offset!");
static_assert(offsetof(UW_Volume_03_C, ChoiceFrame) == 0x0005F8, "Member 'UW_Volume_03_C::ChoiceFrame' has a wrong offset!");
static_assert(offsetof(UW_Volume_03_C, Icon_01) == 0x000600, "Member 'UW_Volume_03_C::Icon_01' has a wrong offset!");
static_assert(offsetof(UW_Volume_03_C, Icon_02) == 0x000608, "Member 'UW_Volume_03_C::Icon_02' has a wrong offset!");
static_assert(offsetof(UW_Volume_03_C, W_VolumeGauge_01) == 0x000610, "Member 'UW_Volume_03_C::W_VolumeGauge_01' has a wrong offset!");

}

