#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_UIUtility

#include "Basic.hpp"

#include "DarwinGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_UIUtility.BP_UIUtility_C.OpenCoinName
// 0x0048 (0x0048 - 0x0000)
struct BP_UIUtility_C_OpenCoinName final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_CoinParam                          CoinParam;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UObject*                                m_WorldContext;                                    // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconItemname_C*                 Widget;                                            // 0x0028(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconItemname_C*                 CallFunc_GetItemName_OutWidget;                    // 0x0040(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_OpenCoinName) == 0x000008, "Wrong alignment on BP_UIUtility_C_OpenCoinName");
static_assert(sizeof(BP_UIUtility_C_OpenCoinName) == 0x000048, "Wrong size on BP_UIUtility_C_OpenCoinName");
static_assert(offsetof(BP_UIUtility_C_OpenCoinName, TargetActor) == 0x000000, "Member 'BP_UIUtility_C_OpenCoinName::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenCoinName, CoinParam) == 0x000008, "Member 'BP_UIUtility_C_OpenCoinName::CoinParam' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenCoinName, m_WorldContext) == 0x000020, "Member 'BP_UIUtility_C_OpenCoinName::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenCoinName, Widget) == 0x000028, "Member 'BP_UIUtility_C_OpenCoinName::Widget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenCoinName, Index_0) == 0x000030, "Member 'BP_UIUtility_C_OpenCoinName::Index_0' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenCoinName, CallFunc_GetBPUIManager_Result) == 0x000038, "Member 'BP_UIUtility_C_OpenCoinName::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenCoinName, CallFunc_GetItemName_OutWidget) == 0x000040, "Member 'BP_UIUtility_C_OpenCoinName::CallFunc_GetItemName_OutWidget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.ChangeDestinationLocation
// 0x0010 (0x0010 - 0x0000)
struct BP_UIUtility_C_ChangeDestinationLocation final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Map_WinStatus_C*                     CallFunc_GetFieldNaviMap_Result;                   // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_ChangeDestinationLocation) == 0x000008, "Wrong alignment on BP_UIUtility_C_ChangeDestinationLocation");
static_assert(sizeof(BP_UIUtility_C_ChangeDestinationLocation) == 0x000010, "Wrong size on BP_UIUtility_C_ChangeDestinationLocation");
static_assert(offsetof(BP_UIUtility_C_ChangeDestinationLocation, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_ChangeDestinationLocation::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ChangeDestinationLocation, CallFunc_GetFieldNaviMap_Result) == 0x000008, "Member 'BP_UIUtility_C_ChangeDestinationLocation::CallFunc_GetFieldNaviMap_Result' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.PlayOneShotExpTargetLocation
// 0x0030 (0x0030 - 0x0000)
struct BP_UIUtility_C_PlayOneShotExpTargetLocation final
{
public:
	struct FVector                                Target;                                            // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExpValue;                                          // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                m_WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconExp_C*                      CallFunc_GetUnusedFieldIconExp_OutWidget;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUnusedFieldIconExp_Index;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_PlayOneShotExpTargetLocation) == 0x000008, "Wrong alignment on BP_UIUtility_C_PlayOneShotExpTargetLocation");
static_assert(sizeof(BP_UIUtility_C_PlayOneShotExpTargetLocation) == 0x000030, "Wrong size on BP_UIUtility_C_PlayOneShotExpTargetLocation");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotExpTargetLocation, Target) == 0x000000, "Member 'BP_UIUtility_C_PlayOneShotExpTargetLocation::Target' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotExpTargetLocation, ExpValue) == 0x00000C, "Member 'BP_UIUtility_C_PlayOneShotExpTargetLocation::ExpValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotExpTargetLocation, m_WorldContext) == 0x000010, "Member 'BP_UIUtility_C_PlayOneShotExpTargetLocation::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotExpTargetLocation, CallFunc_GetBPUIManager_Result) == 0x000018, "Member 'BP_UIUtility_C_PlayOneShotExpTargetLocation::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotExpTargetLocation, CallFunc_GetUnusedFieldIconExp_OutWidget) == 0x000020, "Member 'BP_UIUtility_C_PlayOneShotExpTargetLocation::CallFunc_GetUnusedFieldIconExp_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotExpTargetLocation, CallFunc_GetUnusedFieldIconExp_Index) == 0x000028, "Member 'BP_UIUtility_C_PlayOneShotExpTargetLocation::CallFunc_GetUnusedFieldIconExp_Index' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.FadeOutScreenKeepAlpha
// 0x0028 (0x0028 - 0x0000)
struct BP_UIUtility_C_FadeOutScreenKeepAlpha final
{
public:
	struct FLinearColor                           DestColor;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFadeZOrderType                               ZorderType;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Fade_C*                              CallFunc_GetFade_OutWidget;                        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_FadeOutScreenKeepAlpha) == 0x000008, "Wrong alignment on BP_UIUtility_C_FadeOutScreenKeepAlpha");
static_assert(sizeof(BP_UIUtility_C_FadeOutScreenKeepAlpha) == 0x000028, "Wrong size on BP_UIUtility_C_FadeOutScreenKeepAlpha");
static_assert(offsetof(BP_UIUtility_C_FadeOutScreenKeepAlpha, DestColor) == 0x000000, "Member 'BP_UIUtility_C_FadeOutScreenKeepAlpha::DestColor' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_FadeOutScreenKeepAlpha, Time) == 0x000010, "Member 'BP_UIUtility_C_FadeOutScreenKeepAlpha::Time' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_FadeOutScreenKeepAlpha, ZorderType) == 0x000014, "Member 'BP_UIUtility_C_FadeOutScreenKeepAlpha::ZorderType' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_FadeOutScreenKeepAlpha, m_WorldContext) == 0x000018, "Member 'BP_UIUtility_C_FadeOutScreenKeepAlpha::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_FadeOutScreenKeepAlpha, CallFunc_GetFade_OutWidget) == 0x000020, "Member 'BP_UIUtility_C_FadeOutScreenKeepAlpha::CallFunc_GetFade_OutWidget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.FadeOutScreen
// 0x0028 (0x0028 - 0x0000)
struct BP_UIUtility_C_FadeOutScreen final
{
public:
	struct FLinearColor                           DestColor;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Float;                                             // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFadeZOrderType                               ZorderType;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContext;                                    // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Fade_C*                              CallFunc_GetFade_OutWidget;                        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_FadeOutScreen) == 0x000008, "Wrong alignment on BP_UIUtility_C_FadeOutScreen");
static_assert(sizeof(BP_UIUtility_C_FadeOutScreen) == 0x000028, "Wrong size on BP_UIUtility_C_FadeOutScreen");
static_assert(offsetof(BP_UIUtility_C_FadeOutScreen, DestColor) == 0x000000, "Member 'BP_UIUtility_C_FadeOutScreen::DestColor' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_FadeOutScreen, Float) == 0x000010, "Member 'BP_UIUtility_C_FadeOutScreen::Float' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_FadeOutScreen, ZorderType) == 0x000014, "Member 'BP_UIUtility_C_FadeOutScreen::ZorderType' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_FadeOutScreen, m_WorldContext) == 0x000018, "Member 'BP_UIUtility_C_FadeOutScreen::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_FadeOutScreen, CallFunc_GetFade_OutWidget) == 0x000020, "Member 'BP_UIUtility_C_FadeOutScreen::CallFunc_GetFade_OutWidget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetFade
// 0x0020 (0x0020 - 0x0000)
struct BP_UIUtility_C_GetFade final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Fade_C*                              OutWidget;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Fade_C*                              CallFunc_GetFade_OutWidget;                        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetFade) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetFade");
static_assert(sizeof(BP_UIUtility_C_GetFade) == 0x000020, "Wrong size on BP_UIUtility_C_GetFade");
static_assert(offsetof(BP_UIUtility_C_GetFade, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetFade::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFade, OutWidget) == 0x000008, "Member 'BP_UIUtility_C_GetFade::OutWidget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFade, CallFunc_GetBPUIManager_Result) == 0x000010, "Member 'BP_UIUtility_C_GetFade::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFade, CallFunc_GetFade_OutWidget) == 0x000018, "Member 'BP_UIUtility_C_GetFade::CallFunc_GetFade_OutWidget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.FadeInScreen
// 0x0020 (0x0020 - 0x0000)
struct BP_UIUtility_C_FadeInScreen final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Fade_C*                              CallFunc_GetFade_OutWidget;                        // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsUse_ReturnValue;                        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UIUtility_C_FadeInScreen) == 0x000008, "Wrong alignment on BP_UIUtility_C_FadeInScreen");
static_assert(sizeof(BP_UIUtility_C_FadeInScreen) == 0x000020, "Wrong size on BP_UIUtility_C_FadeInScreen");
static_assert(offsetof(BP_UIUtility_C_FadeInScreen, Time) == 0x000000, "Member 'BP_UIUtility_C_FadeInScreen::Time' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_FadeInScreen, m_WorldContext) == 0x000008, "Member 'BP_UIUtility_C_FadeInScreen::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_FadeInScreen, CallFunc_GetFade_OutWidget) == 0x000010, "Member 'BP_UIUtility_C_FadeInScreen::CallFunc_GetFade_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_FadeInScreen, CallFunc_IsUse_ReturnValue) == 0x000018, "Member 'BP_UIUtility_C_FadeInScreen::CallFunc_IsUse_ReturnValue' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetSlingShotReticle
// 0x0020 (0x0020 - 0x0000)
struct BP_UIUtility_C_GetSlingShotReticle final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Shot_IconReticle_C*                  OutWidget;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Shot_IconReticle_C*                  CallFunc_GetSlingShotReticle_OutWidget;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetSlingShotReticle) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetSlingShotReticle");
static_assert(sizeof(BP_UIUtility_C_GetSlingShotReticle) == 0x000020, "Wrong size on BP_UIUtility_C_GetSlingShotReticle");
static_assert(offsetof(BP_UIUtility_C_GetSlingShotReticle, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetSlingShotReticle::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetSlingShotReticle, OutWidget) == 0x000008, "Member 'BP_UIUtility_C_GetSlingShotReticle::OutWidget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetSlingShotReticle, CallFunc_GetBPUIManager_Result) == 0x000010, "Member 'BP_UIUtility_C_GetSlingShotReticle::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetSlingShotReticle, CallFunc_GetSlingShotReticle_OutWidget) == 0x000018, "Member 'BP_UIUtility_C_GetSlingShotReticle::CallFunc_GetSlingShotReticle_OutWidget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetSlingShotSelect
// 0x0020 (0x0020 - 0x0000)
struct BP_UIUtility_C_GetSlingShotSelect final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Shot_WinStatus_C*                    OutWidget;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Shot_WinStatus_C*                    CallFunc_GetSlingShotSelect_OutWidget;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetSlingShotSelect) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetSlingShotSelect");
static_assert(sizeof(BP_UIUtility_C_GetSlingShotSelect) == 0x000020, "Wrong size on BP_UIUtility_C_GetSlingShotSelect");
static_assert(offsetof(BP_UIUtility_C_GetSlingShotSelect, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetSlingShotSelect::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetSlingShotSelect, OutWidget) == 0x000008, "Member 'BP_UIUtility_C_GetSlingShotSelect::OutWidget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetSlingShotSelect, CallFunc_GetBPUIManager_Result) == 0x000010, "Member 'BP_UIUtility_C_GetSlingShotSelect::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetSlingShotSelect, CallFunc_GetSlingShotSelect_OutWidget) == 0x000018, "Member 'BP_UIUtility_C_GetSlingShotSelect::CallFunc_GetSlingShotSelect_OutWidget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetPartyPlayerParam
// 0x00A0 (0x00A0 - 0x0000)
struct BP_UIUtility_C_GetPartyPlayerParam final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NickName;                                          // 0x0008(0x0018)(Parm, OutParm)
	float                                         HP;                                                // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHP;                                             // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lv;                                                // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Exp;                                               // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextLevelExp;                                      // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NextLevelPercent;                                  // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Attack;                                            // 0x0038(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Defence;                                           // 0x003C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Agility;                                           // 0x0040(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         AttackMagic;                                       // 0x0044(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecoverMagic;                                      // 0x0048(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   PlayerID;                                          // 0x004C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetPlayerSimpleParam_Nickname;            // 0x0058(0x0018)()
	float                                         CallFunc_GetPlayerSimpleParam_HP;                  // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerSimpleParam_MaxHP;               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerSimpleParam_Lv;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerSimpleParam_Exp;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetPlayerSimpleParam_NextLevelExp;        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetPlayerSimpleParam_NextLevelPercent;    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHPAccordingToLevel_ReturnValue;        // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDexterityAccordingToLevel_ReturnValue; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetMagicAccordingToLevel_ReturnValue;     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDefenceAccordingToLevel_ReturnValue;   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetDefenceAccordingToLevel_ReturnValue_1; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetAttackAccordingToLevel_ReturnValue;    // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetPartyPlayerParam) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetPartyPlayerParam");
static_assert(sizeof(BP_UIUtility_C_GetPartyPlayerParam) == 0x0000A0, "Wrong size on BP_UIUtility_C_GetPartyPlayerParam");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetPartyPlayerParam::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, NickName) == 0x000008, "Member 'BP_UIUtility_C_GetPartyPlayerParam::NickName' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, HP) == 0x000020, "Member 'BP_UIUtility_C_GetPartyPlayerParam::HP' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, MaxHP) == 0x000024, "Member 'BP_UIUtility_C_GetPartyPlayerParam::MaxHP' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, Lv) == 0x000028, "Member 'BP_UIUtility_C_GetPartyPlayerParam::Lv' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, Exp) == 0x00002C, "Member 'BP_UIUtility_C_GetPartyPlayerParam::Exp' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, NextLevelExp) == 0x000030, "Member 'BP_UIUtility_C_GetPartyPlayerParam::NextLevelExp' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, NextLevelPercent) == 0x000034, "Member 'BP_UIUtility_C_GetPartyPlayerParam::NextLevelPercent' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, Attack) == 0x000038, "Member 'BP_UIUtility_C_GetPartyPlayerParam::Attack' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, Defence) == 0x00003C, "Member 'BP_UIUtility_C_GetPartyPlayerParam::Defence' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, Agility) == 0x000040, "Member 'BP_UIUtility_C_GetPartyPlayerParam::Agility' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, AttackMagic) == 0x000044, "Member 'BP_UIUtility_C_GetPartyPlayerParam::AttackMagic' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, RecoverMagic) == 0x000048, "Member 'BP_UIUtility_C_GetPartyPlayerParam::RecoverMagic' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, PlayerID) == 0x00004C, "Member 'BP_UIUtility_C_GetPartyPlayerParam::PlayerID' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, CallFunc_GetPlayerSimpleParam_Nickname) == 0x000058, "Member 'BP_UIUtility_C_GetPartyPlayerParam::CallFunc_GetPlayerSimpleParam_Nickname' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, CallFunc_GetPlayerSimpleParam_HP) == 0x000070, "Member 'BP_UIUtility_C_GetPartyPlayerParam::CallFunc_GetPlayerSimpleParam_HP' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, CallFunc_GetPlayerSimpleParam_MaxHP) == 0x000074, "Member 'BP_UIUtility_C_GetPartyPlayerParam::CallFunc_GetPlayerSimpleParam_MaxHP' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, CallFunc_GetPlayerSimpleParam_Lv) == 0x000078, "Member 'BP_UIUtility_C_GetPartyPlayerParam::CallFunc_GetPlayerSimpleParam_Lv' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, CallFunc_GetPlayerSimpleParam_Exp) == 0x00007C, "Member 'BP_UIUtility_C_GetPartyPlayerParam::CallFunc_GetPlayerSimpleParam_Exp' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, CallFunc_GetPlayerSimpleParam_NextLevelExp) == 0x000080, "Member 'BP_UIUtility_C_GetPartyPlayerParam::CallFunc_GetPlayerSimpleParam_NextLevelExp' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, CallFunc_GetPlayerSimpleParam_NextLevelPercent) == 0x000084, "Member 'BP_UIUtility_C_GetPartyPlayerParam::CallFunc_GetPlayerSimpleParam_NextLevelPercent' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, CallFunc_GetHPAccordingToLevel_ReturnValue) == 0x000088, "Member 'BP_UIUtility_C_GetPartyPlayerParam::CallFunc_GetHPAccordingToLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, CallFunc_GetDexterityAccordingToLevel_ReturnValue) == 0x00008C, "Member 'BP_UIUtility_C_GetPartyPlayerParam::CallFunc_GetDexterityAccordingToLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, CallFunc_GetMagicAccordingToLevel_ReturnValue) == 0x000090, "Member 'BP_UIUtility_C_GetPartyPlayerParam::CallFunc_GetMagicAccordingToLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, CallFunc_GetDefenceAccordingToLevel_ReturnValue) == 0x000094, "Member 'BP_UIUtility_C_GetPartyPlayerParam::CallFunc_GetDefenceAccordingToLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, CallFunc_GetDefenceAccordingToLevel_ReturnValue_1) == 0x000098, "Member 'BP_UIUtility_C_GetPartyPlayerParam::CallFunc_GetDefenceAccordingToLevel_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPartyPlayerParam, CallFunc_GetAttackAccordingToLevel_ReturnValue) == 0x00009C, "Member 'BP_UIUtility_C_GetPartyPlayerParam::CallFunc_GetAttackAccordingToLevel_ReturnValue' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.SwapPartyMonster
// 0x0020 (0x0020 - 0x0000)
struct BP_UIUtility_C_SwapPartyMonster final
{
public:
	int32                                         PartyIndex1;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PartyIndex2;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                m_WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ValidFriendHPItemListNum;                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameDataParty*                         CallFunc_GetGameDataParty_GameDataParty;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_SwapPartyMonster) == 0x000008, "Wrong alignment on BP_UIUtility_C_SwapPartyMonster");
static_assert(sizeof(BP_UIUtility_C_SwapPartyMonster) == 0x000020, "Wrong size on BP_UIUtility_C_SwapPartyMonster");
static_assert(offsetof(BP_UIUtility_C_SwapPartyMonster, PartyIndex1) == 0x000000, "Member 'BP_UIUtility_C_SwapPartyMonster::PartyIndex1' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_SwapPartyMonster, PartyIndex2) == 0x000004, "Member 'BP_UIUtility_C_SwapPartyMonster::PartyIndex2' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_SwapPartyMonster, m_WorldContext) == 0x000008, "Member 'BP_UIUtility_C_SwapPartyMonster::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_SwapPartyMonster, ValidFriendHPItemListNum) == 0x000010, "Member 'BP_UIUtility_C_SwapPartyMonster::ValidFriendHPItemListNum' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_SwapPartyMonster, CallFunc_GetGameDataParty_GameDataParty) == 0x000018, "Member 'BP_UIUtility_C_SwapPartyMonster::CallFunc_GetGameDataParty_GameDataParty' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetPlayerSimpleParam
// 0x0088 (0x0088 - 0x0000)
struct BP_UIUtility_C_GetPlayerSimpleParam final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NickName;                                          // 0x0008(0x0018)(Parm, OutParm)
	float                                         HP;                                                // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         MaxHP;                                             // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Lv;                                                // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Exp;                                               // 0x002C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NextLevelExp;                                      // 0x0030(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         NextLevelPercent;                                  // 0x0034(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ValidFriendHPItemListNum;                          // 0x0038(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
	class UGameDataPlayer*                        CallFunc_GetGameDataPlayer_GameDataPlayer;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataPlayer*                        CallFunc_GetGameDataPlayer_GameDataPlayer_1;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLevel_ReturnValue;                     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRequiredExpToNextLevelPercent_ReturnValue; // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHPAccordingToLevel_ReturnValue;        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRequiredExpToNextLevel_ReturnValue;    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetTotalExp_ReturnValue;                  // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetHP_ReturnValue;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetPlayerSimpleParam) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetPlayerSimpleParam");
static_assert(sizeof(BP_UIUtility_C_GetPlayerSimpleParam) == 0x000088, "Wrong size on BP_UIUtility_C_GetPlayerSimpleParam");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, NickName) == 0x000008, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::NickName' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, HP) == 0x000020, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::HP' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, MaxHP) == 0x000024, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::MaxHP' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, Lv) == 0x000028, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::Lv' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, Exp) == 0x00002C, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::Exp' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, NextLevelExp) == 0x000030, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::NextLevelExp' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, NextLevelPercent) == 0x000034, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::NextLevelPercent' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, ValidFriendHPItemListNum) == 0x000038, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::ValidFriendHPItemListNum' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, CallFunc_GetGameDataPlayer_GameDataPlayer) == 0x000058, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::CallFunc_GetGameDataPlayer_GameDataPlayer' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, CallFunc_GetGameDataPlayer_GameDataPlayer_1) == 0x000060, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::CallFunc_GetGameDataPlayer_GameDataPlayer_1' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, CallFunc_GetLevel_ReturnValue) == 0x000068, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::CallFunc_GetLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, CallFunc_GetRequiredExpToNextLevelPercent_ReturnValue) == 0x00006C, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::CallFunc_GetRequiredExpToNextLevelPercent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, CallFunc_GetHPAccordingToLevel_ReturnValue) == 0x000070, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::CallFunc_GetHPAccordingToLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, CallFunc_GetRequiredExpToNextLevel_ReturnValue) == 0x000074, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::CallFunc_GetRequiredExpToNextLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000078, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, CallFunc_GetTotalExp_ReturnValue) == 0x00007C, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::CallFunc_GetTotalExp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, CallFunc_GetHP_ReturnValue) == 0x000080, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::CallFunc_GetHP_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetPlayerSimpleParam, CallFunc_Conv_IntToFloat_ReturnValue_1) == 0x000084, "Member 'BP_UIUtility_C_GetPlayerSimpleParam::CallFunc_Conv_IntToFloat_ReturnValue_1' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.PlayOneShotIconMiss
// 0x0038 (0x0038 - 0x0000)
struct BP_UIUtility_C_PlayOneShotIconMiss final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                m_WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconMiss_C*                     OutWidget;                                         // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0018(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconMiss_C*                     CallFunc_GetUnusedIconMiss_OutWidget;              // 0x0028(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUnusedIconMiss_Index;                  // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_PlayOneShotIconMiss) == 0x000008, "Wrong alignment on BP_UIUtility_C_PlayOneShotIconMiss");
static_assert(sizeof(BP_UIUtility_C_PlayOneShotIconMiss) == 0x000038, "Wrong size on BP_UIUtility_C_PlayOneShotIconMiss");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotIconMiss, TargetActor) == 0x000000, "Member 'BP_UIUtility_C_PlayOneShotIconMiss::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotIconMiss, m_WorldContext) == 0x000008, "Member 'BP_UIUtility_C_PlayOneShotIconMiss::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotIconMiss, OutWidget) == 0x000010, "Member 'BP_UIUtility_C_PlayOneShotIconMiss::OutWidget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotIconMiss, Index_0) == 0x000018, "Member 'BP_UIUtility_C_PlayOneShotIconMiss::Index_0' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotIconMiss, CallFunc_GetBPUIManager_Result) == 0x000020, "Member 'BP_UIUtility_C_PlayOneShotIconMiss::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotIconMiss, CallFunc_GetUnusedIconMiss_OutWidget) == 0x000028, "Member 'BP_UIUtility_C_PlayOneShotIconMiss::CallFunc_GetUnusedIconMiss_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotIconMiss, CallFunc_GetUnusedIconMiss_Index) == 0x000030, "Member 'BP_UIUtility_C_PlayOneShotIconMiss::CallFunc_GetUnusedIconMiss_Index' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.PlayOneShotFieldIconLvUp
// 0x0030 (0x0030 - 0x0000)
struct BP_UIUtility_C_PlayOneShotFieldIconLvUp final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsComboUp;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconLvup_C*                     CallFunc_GetUnusedFieldIconLvUp_OutWidget;         // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUnusedFieldIconLvUp_Index;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_PlayOneShotFieldIconLvUp) == 0x000008, "Wrong alignment on BP_UIUtility_C_PlayOneShotFieldIconLvUp");
static_assert(sizeof(BP_UIUtility_C_PlayOneShotFieldIconLvUp) == 0x000030, "Wrong size on BP_UIUtility_C_PlayOneShotFieldIconLvUp");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotFieldIconLvUp, TargetActor) == 0x000000, "Member 'BP_UIUtility_C_PlayOneShotFieldIconLvUp::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotFieldIconLvUp, IsComboUp) == 0x000008, "Member 'BP_UIUtility_C_PlayOneShotFieldIconLvUp::IsComboUp' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotFieldIconLvUp, m_WorldContext) == 0x000010, "Member 'BP_UIUtility_C_PlayOneShotFieldIconLvUp::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotFieldIconLvUp, CallFunc_GetBPUIManager_Result) == 0x000018, "Member 'BP_UIUtility_C_PlayOneShotFieldIconLvUp::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotFieldIconLvUp, CallFunc_GetUnusedFieldIconLvUp_OutWidget) == 0x000020, "Member 'BP_UIUtility_C_PlayOneShotFieldIconLvUp::CallFunc_GetUnusedFieldIconLvUp_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotFieldIconLvUp, CallFunc_GetUnusedFieldIconLvUp_Index) == 0x000028, "Member 'BP_UIUtility_C_PlayOneShotFieldIconLvUp::CallFunc_GetUnusedFieldIconLvUp_Index' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.PlayOneShotFieldIconExp
// 0x0030 (0x0030 - 0x0000)
struct BP_UIUtility_C_PlayOneShotFieldIconExp final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ExpValue;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconExp_C*                      CallFunc_GetUnusedFieldIconExp_OutWidget;          // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUnusedFieldIconExp_Index;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_PlayOneShotFieldIconExp) == 0x000008, "Wrong alignment on BP_UIUtility_C_PlayOneShotFieldIconExp");
static_assert(sizeof(BP_UIUtility_C_PlayOneShotFieldIconExp) == 0x000030, "Wrong size on BP_UIUtility_C_PlayOneShotFieldIconExp");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotFieldIconExp, TargetActor) == 0x000000, "Member 'BP_UIUtility_C_PlayOneShotFieldIconExp::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotFieldIconExp, ExpValue) == 0x000008, "Member 'BP_UIUtility_C_PlayOneShotFieldIconExp::ExpValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotFieldIconExp, m_WorldContext) == 0x000010, "Member 'BP_UIUtility_C_PlayOneShotFieldIconExp::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotFieldIconExp, CallFunc_GetBPUIManager_Result) == 0x000018, "Member 'BP_UIUtility_C_PlayOneShotFieldIconExp::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotFieldIconExp, CallFunc_GetUnusedFieldIconExp_OutWidget) == 0x000020, "Member 'BP_UIUtility_C_PlayOneShotFieldIconExp::CallFunc_GetUnusedFieldIconExp_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_PlayOneShotFieldIconExp, CallFunc_GetUnusedFieldIconExp_Index) == 0x000028, "Member 'BP_UIUtility_C_PlayOneShotFieldIconExp::CallFunc_GetUnusedFieldIconExp_Index' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.ReplaceItemIconBrush
// 0x0170 (0x0170 - 0x0000)
struct BP_UIUtility_C_ReplaceItemIconBrush final
{
public:
	class UImage*                                 Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ItemId;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                m_WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FST_ItemInfoData                       CallFunc_GetDataTableRowFromName_OutRow;           // 0x0028(0x0128)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0158(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_LoadTextureSoft_ReturnValue;              // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_ReplaceItemIconBrush) == 0x000008, "Wrong alignment on BP_UIUtility_C_ReplaceItemIconBrush");
static_assert(sizeof(BP_UIUtility_C_ReplaceItemIconBrush) == 0x000170, "Wrong size on BP_UIUtility_C_ReplaceItemIconBrush");
static_assert(offsetof(BP_UIUtility_C_ReplaceItemIconBrush, Image) == 0x000000, "Member 'BP_UIUtility_C_ReplaceItemIconBrush::Image' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceItemIconBrush, ItemId) == 0x000008, "Member 'BP_UIUtility_C_ReplaceItemIconBrush::ItemId' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceItemIconBrush, m_WorldContext) == 0x000010, "Member 'BP_UIUtility_C_ReplaceItemIconBrush::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceItemIconBrush, CallFunc_Conv_NameToString_ReturnValue) == 0x000018, "Member 'BP_UIUtility_C_ReplaceItemIconBrush::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceItemIconBrush, CallFunc_GetDataTableRowFromName_OutRow) == 0x000028, "Member 'BP_UIUtility_C_ReplaceItemIconBrush::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceItemIconBrush, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000150, "Member 'BP_UIUtility_C_ReplaceItemIconBrush::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceItemIconBrush, CallFunc_Concat_StrStr_ReturnValue) == 0x000158, "Member 'BP_UIUtility_C_ReplaceItemIconBrush::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceItemIconBrush, CallFunc_LoadTextureSoft_ReturnValue) == 0x000168, "Member 'BP_UIUtility_C_ReplaceItemIconBrush::CallFunc_LoadTextureSoft_ReturnValue' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.CloseItemName
// 0x0020 (0x0020 - 0x0000)
struct BP_UIUtility_C_CloseItemName final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconItemname_C*                 CallFunc_GetItemName_OutWidget;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_CloseItemName) == 0x000008, "Wrong alignment on BP_UIUtility_C_CloseItemName");
static_assert(sizeof(BP_UIUtility_C_CloseItemName) == 0x000020, "Wrong size on BP_UIUtility_C_CloseItemName");
static_assert(offsetof(BP_UIUtility_C_CloseItemName, Index_0) == 0x000000, "Member 'BP_UIUtility_C_CloseItemName::Index_0' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_CloseItemName, m_WorldContext) == 0x000008, "Member 'BP_UIUtility_C_CloseItemName::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_CloseItemName, CallFunc_GetBPUIManager_Result) == 0x000010, "Member 'BP_UIUtility_C_CloseItemName::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_CloseItemName, CallFunc_GetItemName_OutWidget) == 0x000018, "Member 'BP_UIUtility_C_CloseItemName::CallFunc_GetItemName_OutWidget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.OpenItemname
// 0x0038 (0x0038 - 0x0000)
struct BP_UIUtility_C_OpenItemname final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   ItemId;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                m_WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconItemname_C*                 Widget;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconItemname_C*                 CallFunc_GetItemName_OutWidget;                    // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_OpenItemname) == 0x000008, "Wrong alignment on BP_UIUtility_C_OpenItemname");
static_assert(sizeof(BP_UIUtility_C_OpenItemname) == 0x000038, "Wrong size on BP_UIUtility_C_OpenItemname");
static_assert(offsetof(BP_UIUtility_C_OpenItemname, TargetActor) == 0x000000, "Member 'BP_UIUtility_C_OpenItemname::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenItemname, ItemId) == 0x000008, "Member 'BP_UIUtility_C_OpenItemname::ItemId' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenItemname, m_WorldContext) == 0x000010, "Member 'BP_UIUtility_C_OpenItemname::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenItemname, Widget) == 0x000018, "Member 'BP_UIUtility_C_OpenItemname::Widget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenItemname, Index_0) == 0x000020, "Member 'BP_UIUtility_C_OpenItemname::Index_0' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenItemname, CallFunc_GetBPUIManager_Result) == 0x000028, "Member 'BP_UIUtility_C_OpenItemname::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenItemname, CallFunc_GetItemName_OutWidget) == 0x000030, "Member 'BP_UIUtility_C_OpenItemname::CallFunc_GetItemName_OutWidget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.OpenUnusedHealStatus
// 0x0040 (0x0040 - 0x0000)
struct BP_UIUtility_C_OpenUnusedHealStatus final
{
public:
	class AActor*                                 TargetActor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Value;                                             // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconHeal_C*                     Widget;                                            // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconHeal_C*                     CallFunc_GetUnusedHealStatus_OutWidget;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUnusedHealStatus_Index;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_OpenUnusedHealStatus) == 0x000008, "Wrong alignment on BP_UIUtility_C_OpenUnusedHealStatus");
static_assert(sizeof(BP_UIUtility_C_OpenUnusedHealStatus) == 0x000040, "Wrong size on BP_UIUtility_C_OpenUnusedHealStatus");
static_assert(offsetof(BP_UIUtility_C_OpenUnusedHealStatus, TargetActor) == 0x000000, "Member 'BP_UIUtility_C_OpenUnusedHealStatus::TargetActor' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenUnusedHealStatus, Value) == 0x000008, "Member 'BP_UIUtility_C_OpenUnusedHealStatus::Value' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenUnusedHealStatus, m_WorldContext) == 0x000010, "Member 'BP_UIUtility_C_OpenUnusedHealStatus::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenUnusedHealStatus, Widget) == 0x000018, "Member 'BP_UIUtility_C_OpenUnusedHealStatus::Widget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenUnusedHealStatus, Index_0) == 0x000020, "Member 'BP_UIUtility_C_OpenUnusedHealStatus::Index_0' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenUnusedHealStatus, CallFunc_GetBPUIManager_Result) == 0x000028, "Member 'BP_UIUtility_C_OpenUnusedHealStatus::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenUnusedHealStatus, CallFunc_GetUnusedHealStatus_OutWidget) == 0x000030, "Member 'BP_UIUtility_C_OpenUnusedHealStatus::CallFunc_GetUnusedHealStatus_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_OpenUnusedHealStatus, CallFunc_GetUnusedHealStatus_Index) == 0x000038, "Member 'BP_UIUtility_C_OpenUnusedHealStatus::CallFunc_GetUnusedHealStatus_Index' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetUnusedHealStatus
// 0x0030 (0x0030 - 0x0000)
struct BP_UIUtility_C_GetUnusedHealStatus final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconHeal_C*                     Widget;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconHeal_C*                     CallFunc_GetUnusedHealStatus_OutWidget;            // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUnusedHealStatus_Index;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetUnusedHealStatus) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetUnusedHealStatus");
static_assert(sizeof(BP_UIUtility_C_GetUnusedHealStatus) == 0x000030, "Wrong size on BP_UIUtility_C_GetUnusedHealStatus");
static_assert(offsetof(BP_UIUtility_C_GetUnusedHealStatus, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetUnusedHealStatus::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetUnusedHealStatus, Widget) == 0x000008, "Member 'BP_UIUtility_C_GetUnusedHealStatus::Widget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetUnusedHealStatus, Index_0) == 0x000010, "Member 'BP_UIUtility_C_GetUnusedHealStatus::Index_0' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetUnusedHealStatus, CallFunc_GetBPUIManager_Result) == 0x000018, "Member 'BP_UIUtility_C_GetUnusedHealStatus::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetUnusedHealStatus, CallFunc_GetUnusedHealStatus_OutWidget) == 0x000020, "Member 'BP_UIUtility_C_GetUnusedHealStatus::CallFunc_GetUnusedHealStatus_OutWidget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetUnusedHealStatus, CallFunc_GetUnusedHealStatus_Index) == 0x000028, "Member 'BP_UIUtility_C_GetUnusedHealStatus::CallFunc_GetUnusedHealStatus_Index' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.Close Map Destination
// 0x0010 (0x0010 - 0x0000)
struct BP_UIUtility_C_Close_Map_Destination final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_Close_Map_Destination) == 0x000008, "Wrong alignment on BP_UIUtility_C_Close_Map_Destination");
static_assert(sizeof(BP_UIUtility_C_Close_Map_Destination) == 0x000010, "Wrong size on BP_UIUtility_C_Close_Map_Destination");
static_assert(offsetof(BP_UIUtility_C_Close_Map_Destination, Index_0) == 0x000000, "Member 'BP_UIUtility_C_Close_Map_Destination::Index_0' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_Close_Map_Destination, m_WorldContext) == 0x000008, "Member 'BP_UIUtility_C_Close_Map_Destination::m_WorldContext' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.Open Map Unused Destination
// 0x0018 (0x0018 - 0x0000)
struct BP_UIUtility_C_Open_Map_Unused_Destination final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_Open_Map_Unused_Destination) == 0x000008, "Wrong alignment on BP_UIUtility_C_Open_Map_Unused_Destination");
static_assert(sizeof(BP_UIUtility_C_Open_Map_Unused_Destination) == 0x000018, "Wrong size on BP_UIUtility_C_Open_Map_Unused_Destination");
static_assert(offsetof(BP_UIUtility_C_Open_Map_Unused_Destination, Location) == 0x000000, "Member 'BP_UIUtility_C_Open_Map_Unused_Destination::Location' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_Open_Map_Unused_Destination, m_WorldContext) == 0x000010, "Member 'BP_UIUtility_C_Open_Map_Unused_Destination::m_WorldContext' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.ReplaceMonsterIconMat
// 0x0198 (0x0198 - 0x0000)
struct BP_UIUtility_C_ReplaceMonsterIconMat final
{
public:
	class UImage*                                 Image;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   MonstreID;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                m_WorldContext;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_UIMonsterResource                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0148)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0170(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0180(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UTexture2D*                             CallFunc_LoadTextureSoft_ReturnValue;              // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_ReplaceMonsterIconMat) == 0x000008, "Wrong alignment on BP_UIUtility_C_ReplaceMonsterIconMat");
static_assert(sizeof(BP_UIUtility_C_ReplaceMonsterIconMat) == 0x000198, "Wrong size on BP_UIUtility_C_ReplaceMonsterIconMat");
static_assert(offsetof(BP_UIUtility_C_ReplaceMonsterIconMat, Image) == 0x000000, "Member 'BP_UIUtility_C_ReplaceMonsterIconMat::Image' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceMonsterIconMat, MonstreID) == 0x000008, "Member 'BP_UIUtility_C_ReplaceMonsterIconMat::MonstreID' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceMonsterIconMat, m_WorldContext) == 0x000010, "Member 'BP_UIUtility_C_ReplaceMonsterIconMat::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceMonsterIconMat, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'BP_UIUtility_C_ReplaceMonsterIconMat::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceMonsterIconMat, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'BP_UIUtility_C_ReplaceMonsterIconMat::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceMonsterIconMat, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000168, "Member 'BP_UIUtility_C_ReplaceMonsterIconMat::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceMonsterIconMat, CallFunc_Conv_NameToString_ReturnValue) == 0x000170, "Member 'BP_UIUtility_C_ReplaceMonsterIconMat::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceMonsterIconMat, CallFunc_Concat_StrStr_ReturnValue) == 0x000180, "Member 'BP_UIUtility_C_ReplaceMonsterIconMat::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_ReplaceMonsterIconMat, CallFunc_LoadTextureSoft_ReturnValue) == 0x000190, "Member 'BP_UIUtility_C_ReplaceMonsterIconMat::CallFunc_LoadTextureSoft_ReturnValue' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetFieldIconQuestLine
// 0x0020 (0x0020 - 0x0000)
struct BP_UIUtility_C_GetFieldIconQuestLine final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Field_IconQuestLine_C*               Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Field_IconQuestLine_C*               CallFunc_GetFieldIconQuestLine_OutWidget;          // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetFieldIconQuestLine) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetFieldIconQuestLine");
static_assert(sizeof(BP_UIUtility_C_GetFieldIconQuestLine) == 0x000020, "Wrong size on BP_UIUtility_C_GetFieldIconQuestLine");
static_assert(offsetof(BP_UIUtility_C_GetFieldIconQuestLine, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetFieldIconQuestLine::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldIconQuestLine, Result) == 0x000008, "Member 'BP_UIUtility_C_GetFieldIconQuestLine::Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldIconQuestLine, CallFunc_GetBPUIManager_Result) == 0x000010, "Member 'BP_UIUtility_C_GetFieldIconQuestLine::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldIconQuestLine, CallFunc_GetFieldIconQuestLine_OutWidget) == 0x000018, "Member 'BP_UIUtility_C_GetFieldIconQuestLine::CallFunc_GetFieldIconQuestLine_OutWidget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetMonsterLink
// 0x0020 (0x0020 - 0x0000)
struct BP_UIUtility_C_GetMonsterLink final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Field_IconLink_C*                    OutWidget;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Field_IconLink_C*                    CallFunc_GetMonsterLink_OutWidget;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetMonsterLink) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetMonsterLink");
static_assert(sizeof(BP_UIUtility_C_GetMonsterLink) == 0x000020, "Wrong size on BP_UIUtility_C_GetMonsterLink");
static_assert(offsetof(BP_UIUtility_C_GetMonsterLink, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetMonsterLink::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetMonsterLink, OutWidget) == 0x000008, "Member 'BP_UIUtility_C_GetMonsterLink::OutWidget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetMonsterLink, CallFunc_GetBPUIManager_Result) == 0x000010, "Member 'BP_UIUtility_C_GetMonsterLink::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetMonsterLink, CallFunc_GetMonsterLink_OutWidget) == 0x000018, "Member 'BP_UIUtility_C_GetMonsterLink::CallFunc_GetMonsterLink_OutWidget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetFieldQuestWindow
// 0x0020 (0x0020 - 0x0000)
struct BP_UIUtility_C_GetFieldQuestWindow final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIField_WinQuest*                      OutWidget;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Field_Status_C*                      CallFunc_GetFieldStatus_Result;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIField_WinQuest*                      CallFunc_GetQuestWindow_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetFieldQuestWindow) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetFieldQuestWindow");
static_assert(sizeof(BP_UIUtility_C_GetFieldQuestWindow) == 0x000020, "Wrong size on BP_UIUtility_C_GetFieldQuestWindow");
static_assert(offsetof(BP_UIUtility_C_GetFieldQuestWindow, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetFieldQuestWindow::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldQuestWindow, OutWidget) == 0x000008, "Member 'BP_UIUtility_C_GetFieldQuestWindow::OutWidget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldQuestWindow, CallFunc_GetFieldStatus_Result) == 0x000010, "Member 'BP_UIUtility_C_GetFieldQuestWindow::CallFunc_GetFieldStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldQuestWindow, CallFunc_GetQuestWindow_ReturnValue) == 0x000018, "Member 'BP_UIUtility_C_GetFieldQuestWindow::CallFunc_GetQuestWindow_ReturnValue' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetUnusedFieldIconQuest
// 0x0030 (0x0030 - 0x0000)
struct BP_UIUtility_C_GetUnusedFieldIconQuest final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconQuest_C*                    Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconQuest_C*                    CallFunc_GetUnusedFieldIconQuest_OutWIdget;        // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetUnusedFieldIconQuest_Index;            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetUnusedFieldIconQuest) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetUnusedFieldIconQuest");
static_assert(sizeof(BP_UIUtility_C_GetUnusedFieldIconQuest) == 0x000030, "Wrong size on BP_UIUtility_C_GetUnusedFieldIconQuest");
static_assert(offsetof(BP_UIUtility_C_GetUnusedFieldIconQuest, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetUnusedFieldIconQuest::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetUnusedFieldIconQuest, Result) == 0x000008, "Member 'BP_UIUtility_C_GetUnusedFieldIconQuest::Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetUnusedFieldIconQuest, Index_0) == 0x000010, "Member 'BP_UIUtility_C_GetUnusedFieldIconQuest::Index_0' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetUnusedFieldIconQuest, CallFunc_GetBPUIManager_Result) == 0x000018, "Member 'BP_UIUtility_C_GetUnusedFieldIconQuest::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetUnusedFieldIconQuest, CallFunc_GetUnusedFieldIconQuest_OutWIdget) == 0x000020, "Member 'BP_UIUtility_C_GetUnusedFieldIconQuest::CallFunc_GetUnusedFieldIconQuest_OutWIdget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetUnusedFieldIconQuest, CallFunc_GetUnusedFieldIconQuest_Index) == 0x000028, "Member 'BP_UIUtility_C_GetUnusedFieldIconQuest::CallFunc_GetUnusedFieldIconQuest_Index' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetFieldIconQuest
// 0x0028 (0x0028 - 0x0000)
struct BP_UIUtility_C_GetFieldIconQuest final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconQuest_C*                    Result;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Sign_IconQuest_C*                    CallFunc_GetFIeldIconQuest_NewParam;               // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetFieldIconQuest) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetFieldIconQuest");
static_assert(sizeof(BP_UIUtility_C_GetFieldIconQuest) == 0x000028, "Wrong size on BP_UIUtility_C_GetFieldIconQuest");
static_assert(offsetof(BP_UIUtility_C_GetFieldIconQuest, Index_0) == 0x000000, "Member 'BP_UIUtility_C_GetFieldIconQuest::Index_0' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldIconQuest, m_WorldContext) == 0x000008, "Member 'BP_UIUtility_C_GetFieldIconQuest::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldIconQuest, Result) == 0x000010, "Member 'BP_UIUtility_C_GetFieldIconQuest::Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldIconQuest, CallFunc_GetBPUIManager_Result) == 0x000018, "Member 'BP_UIUtility_C_GetFieldIconQuest::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldIconQuest, CallFunc_GetFIeldIconQuest_NewParam) == 0x000020, "Member 'BP_UIUtility_C_GetFieldIconQuest::CallFunc_GetFIeldIconQuest_NewParam' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetFieldIconAction
// 0x0020 (0x0020 - 0x0000)
struct BP_UIUtility_C_GetFieldIconAction final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Field_WinAction_C*                   Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Field_WinAction_C*                   CallFunc_GetFIeldIconAction_OutWIdget;             // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetFieldIconAction) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetFieldIconAction");
static_assert(sizeof(BP_UIUtility_C_GetFieldIconAction) == 0x000020, "Wrong size on BP_UIUtility_C_GetFieldIconAction");
static_assert(offsetof(BP_UIUtility_C_GetFieldIconAction, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetFieldIconAction::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldIconAction, Result) == 0x000008, "Member 'BP_UIUtility_C_GetFieldIconAction::Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldIconAction, CallFunc_GetBPUIManager_Result) == 0x000010, "Member 'BP_UIUtility_C_GetFieldIconAction::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldIconAction, CallFunc_GetFIeldIconAction_OutWIdget) == 0x000018, "Member 'BP_UIUtility_C_GetFieldIconAction::CallFunc_GetFIeldIconAction_OutWIdget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetFieldLogWindow
// 0x0020 (0x0020 - 0x0000)
struct BP_UIUtility_C_GetFieldLogWindow final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIField_WinLogbox*                     OutWidget;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Field_Status_C*                      CallFunc_GetFieldStatus_Result;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIField_WinLogbox*                     CallFunc_GetLogWindow_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetFieldLogWindow) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetFieldLogWindow");
static_assert(sizeof(BP_UIUtility_C_GetFieldLogWindow) == 0x000020, "Wrong size on BP_UIUtility_C_GetFieldLogWindow");
static_assert(offsetof(BP_UIUtility_C_GetFieldLogWindow, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetFieldLogWindow::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldLogWindow, OutWidget) == 0x000008, "Member 'BP_UIUtility_C_GetFieldLogWindow::OutWidget' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldLogWindow, CallFunc_GetFieldStatus_Result) == 0x000010, "Member 'BP_UIUtility_C_GetFieldLogWindow::CallFunc_GetFieldStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldLogWindow, CallFunc_GetLogWindow_ReturnValue) == 0x000018, "Member 'BP_UIUtility_C_GetFieldLogWindow::CallFunc_GetLogWindow_ReturnValue' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetFieldNaviMap
// 0x0018 (0x0018 - 0x0000)
struct BP_UIUtility_C_GetFieldNaviMap final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Map_WinStatus_C*                     Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Field_Status_C*                      CallFunc_GetFieldStatus_Result;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetFieldNaviMap) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetFieldNaviMap");
static_assert(sizeof(BP_UIUtility_C_GetFieldNaviMap) == 0x000018, "Wrong size on BP_UIUtility_C_GetFieldNaviMap");
static_assert(offsetof(BP_UIUtility_C_GetFieldNaviMap, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetFieldNaviMap::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldNaviMap, Result) == 0x000008, "Member 'BP_UIUtility_C_GetFieldNaviMap::Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldNaviMap, CallFunc_GetFieldStatus_Result) == 0x000010, "Member 'BP_UIUtility_C_GetFieldNaviMap::CallFunc_GetFieldStatus_Result' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetMainMenu
// 0x0018 (0x0018 - 0x0000)
struct BP_UIUtility_C_GetMainMenu final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDarwinUserWidget*                      Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_MainMenu_Root_C*                     CallFunc_GetWidgetFromClass_OutWidget;             // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetMainMenu) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetMainMenu");
static_assert(sizeof(BP_UIUtility_C_GetMainMenu) == 0x000018, "Wrong size on BP_UIUtility_C_GetMainMenu");
static_assert(offsetof(BP_UIUtility_C_GetMainMenu, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetMainMenu::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetMainMenu, Result) == 0x000008, "Member 'BP_UIUtility_C_GetMainMenu::Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetMainMenu, CallFunc_GetWidgetFromClass_OutWidget) == 0x000010, "Member 'BP_UIUtility_C_GetMainMenu::CallFunc_GetWidgetFromClass_OutWidget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetChoiceWindow
// 0x0020 (0x0020 - 0x0000)
struct BP_UIUtility_C_GetChoiceWindow final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Talk_WinChoice_C*                    NewParam;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Talk_WinChoice_C*                    CallFunc_GetChoiceWindow_OutWidget;                // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetChoiceWindow) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetChoiceWindow");
static_assert(sizeof(BP_UIUtility_C_GetChoiceWindow) == 0x000020, "Wrong size on BP_UIUtility_C_GetChoiceWindow");
static_assert(offsetof(BP_UIUtility_C_GetChoiceWindow, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetChoiceWindow::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetChoiceWindow, NewParam) == 0x000008, "Member 'BP_UIUtility_C_GetChoiceWindow::NewParam' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetChoiceWindow, CallFunc_GetBPUIManager_Result) == 0x000010, "Member 'BP_UIUtility_C_GetChoiceWindow::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetChoiceWindow, CallFunc_GetChoiceWindow_OutWidget) == 0x000018, "Member 'BP_UIUtility_C_GetChoiceWindow::CallFunc_GetChoiceWindow_OutWidget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetFieldFriendStatus
// 0x0028 (0x0028 - 0x0000)
struct BP_UIUtility_C_GetFieldFriendStatus final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                m_WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIField_WinFStatus*                    Result;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Field_Status_C*                      CallFunc_GetFieldStatus_Result;                    // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIField_WinFStatus*                    CallFunc_GetFriendStatus_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetFieldFriendStatus) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetFieldFriendStatus");
static_assert(sizeof(BP_UIUtility_C_GetFieldFriendStatus) == 0x000028, "Wrong size on BP_UIUtility_C_GetFieldFriendStatus");
static_assert(offsetof(BP_UIUtility_C_GetFieldFriendStatus, Index_0) == 0x000000, "Member 'BP_UIUtility_C_GetFieldFriendStatus::Index_0' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldFriendStatus, m_WorldContext) == 0x000008, "Member 'BP_UIUtility_C_GetFieldFriendStatus::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldFriendStatus, Result) == 0x000010, "Member 'BP_UIUtility_C_GetFieldFriendStatus::Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldFriendStatus, CallFunc_GetFieldStatus_Result) == 0x000018, "Member 'BP_UIUtility_C_GetFieldFriendStatus::CallFunc_GetFieldStatus_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldFriendStatus, CallFunc_GetFriendStatus_ReturnValue) == 0x000020, "Member 'BP_UIUtility_C_GetFieldFriendStatus::CallFunc_GetFriendStatus_ReturnValue' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetFieldPlayerStatus
// 0x0018 (0x0018 - 0x0000)
struct BP_UIUtility_C_GetFieldPlayerStatus final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Field_WinPStatus_C*                  Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Field_Status_C*                      CallFunc_GetFieldStatus_Result;                    // 0x0010(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetFieldPlayerStatus) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetFieldPlayerStatus");
static_assert(sizeof(BP_UIUtility_C_GetFieldPlayerStatus) == 0x000018, "Wrong size on BP_UIUtility_C_GetFieldPlayerStatus");
static_assert(offsetof(BP_UIUtility_C_GetFieldPlayerStatus, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetFieldPlayerStatus::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldPlayerStatus, Result) == 0x000008, "Member 'BP_UIUtility_C_GetFieldPlayerStatus::Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldPlayerStatus, CallFunc_GetFieldStatus_Result) == 0x000010, "Member 'BP_UIUtility_C_GetFieldPlayerStatus::CallFunc_GetFieldStatus_Result' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetFieldStatus
// 0x0020 (0x0020 - 0x0000)
struct BP_UIUtility_C_GetFieldStatus final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Field_Status_C*                      Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Field_Status_C*                      CallFunc_GetFieldStatus_OutWidget;                 // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetFieldStatus) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetFieldStatus");
static_assert(sizeof(BP_UIUtility_C_GetFieldStatus) == 0x000020, "Wrong size on BP_UIUtility_C_GetFieldStatus");
static_assert(offsetof(BP_UIUtility_C_GetFieldStatus, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetFieldStatus::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldStatus, Result) == 0x000008, "Member 'BP_UIUtility_C_GetFieldStatus::Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldStatus, CallFunc_GetBPUIManager_Result) == 0x000010, "Member 'BP_UIUtility_C_GetFieldStatus::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetFieldStatus, CallFunc_GetFieldStatus_OutWidget) == 0x000018, "Member 'BP_UIUtility_C_GetFieldStatus::CallFunc_GetFieldStatus_OutWidget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetTalkWindow
// 0x0020 (0x0020 - 0x0000)
struct BP_UIUtility_C_GetTalkWindow final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Talk_WinStatus_C*                    Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        CallFunc_GetBPUIManager_Result;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_Talk_WinStatus_C*                    CallFunc_GetTalkWindow_OutWidget;                  // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_GetTalkWindow) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetTalkWindow");
static_assert(sizeof(BP_UIUtility_C_GetTalkWindow) == 0x000020, "Wrong size on BP_UIUtility_C_GetTalkWindow");
static_assert(offsetof(BP_UIUtility_C_GetTalkWindow, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetTalkWindow::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetTalkWindow, Result) == 0x000008, "Member 'BP_UIUtility_C_GetTalkWindow::Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetTalkWindow, CallFunc_GetBPUIManager_Result) == 0x000010, "Member 'BP_UIUtility_C_GetTalkWindow::CallFunc_GetBPUIManager_Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetTalkWindow, CallFunc_GetTalkWindow_OutWidget) == 0x000018, "Member 'BP_UIUtility_C_GetTalkWindow::CallFunc_GetTalkWindow_OutWidget' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.GetBPUIManager
// 0x0028 (0x0028 - 0x0000)
struct BP_UIUtility_C_GetBPUIManager final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUIManager*                             CallFunc_GetInstance_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_UIManager_C*                        K2Node_DynamicCast_AsBP_UIManager;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_UIUtility_C_GetBPUIManager) == 0x000008, "Wrong alignment on BP_UIUtility_C_GetBPUIManager");
static_assert(sizeof(BP_UIUtility_C_GetBPUIManager) == 0x000028, "Wrong size on BP_UIUtility_C_GetBPUIManager");
static_assert(offsetof(BP_UIUtility_C_GetBPUIManager, m_WorldContext) == 0x000000, "Member 'BP_UIUtility_C_GetBPUIManager::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetBPUIManager, Result) == 0x000008, "Member 'BP_UIUtility_C_GetBPUIManager::Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetBPUIManager, CallFunc_GetInstance_ReturnValue) == 0x000010, "Member 'BP_UIUtility_C_GetBPUIManager::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetBPUIManager, K2Node_DynamicCast_AsBP_UIManager) == 0x000018, "Member 'BP_UIUtility_C_GetBPUIManager::K2Node_DynamicCast_AsBP_UIManager' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_GetBPUIManager, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_UIUtility_C_GetBPUIManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function BP_UIUtility.BP_UIUtility_C.CalculateLeftTopPositionOfCanvasSlot
// 0x0040 (0x0040 - 0x0000)
struct BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot final
{
public:
	class UCanvasPanelSlot*                       Slot;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                m_WorldContext;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Result;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAlignment_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot) == 0x000008, "Wrong alignment on BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot");
static_assert(sizeof(BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot) == 0x000040, "Wrong size on BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot");
static_assert(offsetof(BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot, Slot) == 0x000000, "Member 'BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot::Slot' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot, m_WorldContext) == 0x000008, "Member 'BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot, Result) == 0x000010, "Member 'BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot::Result' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot, CallFunc_GetPosition_ReturnValue) == 0x000018, "Member 'BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot, CallFunc_GetAlignment_ReturnValue) == 0x000020, "Member 'BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot::CallFunc_GetAlignment_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot, CallFunc_GetSize_ReturnValue) == 0x000028, "Member 'BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000030, "Member 'BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000038, "Member 'BP_UIUtility_C_CalculateLeftTopPositionOfCanvasSlot::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");

}

