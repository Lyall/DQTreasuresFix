#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Darkness

#include "Basic.hpp"

#include "DarwinGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function W_Darkness.W_Darkness_C.ReAddViewPort
// 0x0038 (0x0038 - 0x0000)
struct W_Darkness_C_ReAddViewPort final
{
public:
	EFadeZOrderType                               ZorderType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_UIZOrderDataTableRow               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0020(0x0010)()
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_AddToPlayerScreen_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Darkness_C_ReAddViewPort) == 0x000008, "Wrong alignment on W_Darkness_C_ReAddViewPort");
static_assert(sizeof(W_Darkness_C_ReAddViewPort) == 0x000038, "Wrong size on W_Darkness_C_ReAddViewPort");
static_assert(offsetof(W_Darkness_C_ReAddViewPort, ZorderType) == 0x000000, "Member 'W_Darkness_C_ReAddViewPort::ZorderType' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_ReAddViewPort, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'W_Darkness_C_ReAddViewPort::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_ReAddViewPort, CallFunc_Conv_StringToName_ReturnValue) == 0x000018, "Member 'W_Darkness_C_ReAddViewPort::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_ReAddViewPort, CallFunc_GetDataTableRowFromName_OutRow) == 0x000020, "Member 'W_Darkness_C_ReAddViewPort::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_ReAddViewPort, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000030, "Member 'W_Darkness_C_ReAddViewPort::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_ReAddViewPort, CallFunc_AddToPlayerScreen_ReturnValue) == 0x000031, "Member 'W_Darkness_C_ReAddViewPort::CallFunc_AddToPlayerScreen_ReturnValue' has a wrong offset!");

// Function W_Darkness.W_Darkness_C.FadeInScreen
// 0x0014 (0x0014 - 0x0000)
struct W_Darkness_C_FadeInScreen final
{
public:
	float                                         Time;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Darkness_C_FadeInScreen) == 0x000004, "Wrong alignment on W_Darkness_C_FadeInScreen");
static_assert(sizeof(W_Darkness_C_FadeInScreen) == 0x000014, "Wrong size on W_Darkness_C_FadeInScreen");
static_assert(offsetof(W_Darkness_C_FadeInScreen, Time) == 0x000000, "Member 'W_Darkness_C_FadeInScreen::Time' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_FadeInScreen, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000004, "Member 'W_Darkness_C_FadeInScreen::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_FadeInScreen, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000008, "Member 'W_Darkness_C_FadeInScreen::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_FadeInScreen, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00000C, "Member 'W_Darkness_C_FadeInScreen::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_FadeInScreen, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000010, "Member 'W_Darkness_C_FadeInScreen::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function W_Darkness.W_Darkness_C.UpdateFade
// 0x001C (0x001C - 0x0000)
struct W_Darkness_C_UpdateFade final
{
public:
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Darkness_C_UpdateFade) == 0x000004, "Wrong alignment on W_Darkness_C_UpdateFade");
static_assert(sizeof(W_Darkness_C_UpdateFade) == 0x00001C, "Wrong size on W_Darkness_C_UpdateFade");
static_assert(offsetof(W_Darkness_C_UpdateFade, CallFunc_Less_FloatFloat_ReturnValue) == 0x000000, "Member 'W_Darkness_C_UpdateFade::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_UpdateFade, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000001, "Member 'W_Darkness_C_UpdateFade::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_UpdateFade, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000002, "Member 'W_Darkness_C_UpdateFade::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_UpdateFade, CallFunc_Add_FloatFloat_ReturnValue) == 0x000004, "Member 'W_Darkness_C_UpdateFade::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_UpdateFade, CallFunc_FClamp_ReturnValue) == 0x000008, "Member 'W_Darkness_C_UpdateFade::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_UpdateFade, K2Node_MakeStruct_LinearColor) == 0x00000C, "Member 'W_Darkness_C_UpdateFade::K2Node_MakeStruct_LinearColor' has a wrong offset!");

// Function W_Darkness.W_Darkness_C.FadeOutScreen
// 0x0020 (0x0020 - 0x0000)
struct W_Darkness_C_FadeOutScreen final
{
public:
	struct FLinearColor                           Color_0;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Time;                                              // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFadeZOrderType                               ZorderType;                                        // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue_1;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Darkness_C_FadeOutScreen) == 0x000004, "Wrong alignment on W_Darkness_C_FadeOutScreen");
static_assert(sizeof(W_Darkness_C_FadeOutScreen) == 0x000020, "Wrong size on W_Darkness_C_FadeOutScreen");
static_assert(offsetof(W_Darkness_C_FadeOutScreen, Color_0) == 0x000000, "Member 'W_Darkness_C_FadeOutScreen::Color_0' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_FadeOutScreen, Time) == 0x000010, "Member 'W_Darkness_C_FadeOutScreen::Time' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_FadeOutScreen, ZorderType) == 0x000014, "Member 'W_Darkness_C_FadeOutScreen::ZorderType' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_FadeOutScreen, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000015, "Member 'W_Darkness_C_FadeOutScreen::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_FadeOutScreen, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000018, "Member 'W_Darkness_C_FadeOutScreen::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_FadeOutScreen, CallFunc_Divide_FloatFloat_ReturnValue_1) == 0x00001C, "Member 'W_Darkness_C_FadeOutScreen::CallFunc_Divide_FloatFloat_ReturnValue_1' has a wrong offset!");

// Function W_Darkness.W_Darkness_C.Update
// 0x0004 (0x0004 - 0x0000)
struct W_Darkness_C_Update final
{
public:
	float                                         DeltaTime;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Darkness_C_Update) == 0x000004, "Wrong alignment on W_Darkness_C_Update");
static_assert(sizeof(W_Darkness_C_Update) == 0x000004, "Wrong size on W_Darkness_C_Update");
static_assert(offsetof(W_Darkness_C_Update, DeltaTime) == 0x000000, "Member 'W_Darkness_C_Update::DeltaTime' has a wrong offset!");

// Function W_Darkness.W_Darkness_C.ExecuteUbergraph_W_Darkness
// 0x0018 (0x0018 - 0x0000)
struct W_Darkness_C_ExecuteUbergraph_W_Darkness final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTime;                            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Darkness_C_ExecuteUbergraph_W_Darkness) == 0x000004, "Wrong alignment on W_Darkness_C_ExecuteUbergraph_W_Darkness");
static_assert(sizeof(W_Darkness_C_ExecuteUbergraph_W_Darkness) == 0x000018, "Wrong size on W_Darkness_C_ExecuteUbergraph_W_Darkness");
static_assert(offsetof(W_Darkness_C_ExecuteUbergraph_W_Darkness, EntryPoint) == 0x000000, "Member 'W_Darkness_C_ExecuteUbergraph_W_Darkness::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_ExecuteUbergraph_W_Darkness, CallFunc_MakeColor_ReturnValue) == 0x000004, "Member 'W_Darkness_C_ExecuteUbergraph_W_Darkness::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Darkness_C_ExecuteUbergraph_W_Darkness, K2Node_Event_DeltaTime) == 0x000014, "Member 'W_Darkness_C_ExecuteUbergraph_W_Darkness::K2Node_Event_DeltaTime' has a wrong offset!");

}

