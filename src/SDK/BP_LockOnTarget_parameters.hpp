#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LockOnTarget

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_LockOnTarget.BP_LockOnTarget_C.ExecuteUbergraph_BP_LockOnTarget
// 0x0008 (0x0008 - 0x0000)
struct BP_LockOnTarget_C_ExecuteUbergraph_BP_LockOnTarget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Visibility;                     // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LockOnTarget_C_ExecuteUbergraph_BP_LockOnTarget) == 0x000004, "Wrong alignment on BP_LockOnTarget_C_ExecuteUbergraph_BP_LockOnTarget");
static_assert(sizeof(BP_LockOnTarget_C_ExecuteUbergraph_BP_LockOnTarget) == 0x000008, "Wrong size on BP_LockOnTarget_C_ExecuteUbergraph_BP_LockOnTarget");
static_assert(offsetof(BP_LockOnTarget_C_ExecuteUbergraph_BP_LockOnTarget, EntryPoint) == 0x000000, "Member 'BP_LockOnTarget_C_ExecuteUbergraph_BP_LockOnTarget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_LockOnTarget_C_ExecuteUbergraph_BP_LockOnTarget, K2Node_CustomEvent_Visibility) == 0x000004, "Member 'BP_LockOnTarget_C_ExecuteUbergraph_BP_LockOnTarget::K2Node_CustomEvent_Visibility' has a wrong offset!");

// Function BP_LockOnTarget.BP_LockOnTarget_C.SetAreaVisibility
// 0x0001 (0x0001 - 0x0000)
struct BP_LockOnTarget_C_SetAreaVisibility final
{
public:
	bool                                          Visibility;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_LockOnTarget_C_SetAreaVisibility) == 0x000001, "Wrong alignment on BP_LockOnTarget_C_SetAreaVisibility");
static_assert(sizeof(BP_LockOnTarget_C_SetAreaVisibility) == 0x000001, "Wrong size on BP_LockOnTarget_C_SetAreaVisibility");
static_assert(offsetof(BP_LockOnTarget_C_SetAreaVisibility, Visibility) == 0x000000, "Member 'BP_LockOnTarget_C_SetAreaVisibility::Visibility' has a wrong offset!");

}

