#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Air_FieldLink

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DarwinGame_structs.hpp"
#include "DarwinGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Air_FieldLink.BP_Air_FieldLink_C
// 0x0068 (0x02B0 - 0x0248)
class UBP_Air_FieldLink_C final : public UAirStateStartLink
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0248(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class AMonster*                               Target;                                            // 0x0250(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                BaseLocation;                                      // 0x0258(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFalling_0;                                      // 0x0264(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_265[0x3];                                      // 0x0265(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         BaseHeight;                                        // 0x0268(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LinkStart;                                         // 0x026C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Size;                                              // 0x0270(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FST_LinkData                           LinkData;                                          // 0x0278(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void Enter();
	void Exit();
	void Button_LT(bool bRelease);
	void Button_RT(bool bRelease);
	void ExecuteUbergraph_BP_Air_FieldLink(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Air_FieldLink_C">();
	}
	static class UBP_Air_FieldLink_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_Air_FieldLink_C>();
	}
};
static_assert(alignof(UBP_Air_FieldLink_C) == 0x000008, "Wrong alignment on UBP_Air_FieldLink_C");
static_assert(sizeof(UBP_Air_FieldLink_C) == 0x0002B0, "Wrong size on UBP_Air_FieldLink_C");
static_assert(offsetof(UBP_Air_FieldLink_C, UberGraphFrame) == 0x000248, "Member 'UBP_Air_FieldLink_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_Air_FieldLink_C, Target) == 0x000250, "Member 'UBP_Air_FieldLink_C::Target' has a wrong offset!");
static_assert(offsetof(UBP_Air_FieldLink_C, BaseLocation) == 0x000258, "Member 'UBP_Air_FieldLink_C::BaseLocation' has a wrong offset!");
static_assert(offsetof(UBP_Air_FieldLink_C, bIsFalling_0) == 0x000264, "Member 'UBP_Air_FieldLink_C::bIsFalling_0' has a wrong offset!");
static_assert(offsetof(UBP_Air_FieldLink_C, BaseHeight) == 0x000268, "Member 'UBP_Air_FieldLink_C::BaseHeight' has a wrong offset!");
static_assert(offsetof(UBP_Air_FieldLink_C, LinkStart) == 0x00026C, "Member 'UBP_Air_FieldLink_C::LinkStart' has a wrong offset!");
static_assert(offsetof(UBP_Air_FieldLink_C, Size) == 0x000270, "Member 'UBP_Air_FieldLink_C::Size' has a wrong offset!");
static_assert(offsetof(UBP_Air_FieldLink_C, LinkData) == 0x000278, "Member 'UBP_Air_FieldLink_C::LinkData' has a wrong offset!");

}

