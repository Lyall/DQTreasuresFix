#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AS_PlayMonsterEmote

#include "Basic.hpp"

#include "DarwinGame_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass AS_PlayMonsterEmote.AS_PlayMonsterEmote_C
// 0x0020 (0x0058 - 0x0038)
class UAS_PlayMonsterEmote_C final : public UAnimNotifyState
{
public:
	EEmoteType                                    emoteType;                                         // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EEmoteMethod>                          ignoreMethods;                                     // 0x0040(0x0010)(Edit, BlueprintVisible, HasGetValueTypeHash)
	float                                         PlayTime;                                          // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	bool Received_NotifyBegin(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation, float TotalDuration) const;
	bool Received_NotifyEnd(class USkeletalMeshComponent* MeshComp, class UAnimSequenceBase* Animation) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"AS_PlayMonsterEmote_C">();
	}
	static class UAS_PlayMonsterEmote_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAS_PlayMonsterEmote_C>();
	}
};
static_assert(alignof(UAS_PlayMonsterEmote_C) == 0x000008, "Wrong alignment on UAS_PlayMonsterEmote_C");
static_assert(sizeof(UAS_PlayMonsterEmote_C) == 0x000058, "Wrong size on UAS_PlayMonsterEmote_C");
static_assert(offsetof(UAS_PlayMonsterEmote_C, emoteType) == 0x000038, "Member 'UAS_PlayMonsterEmote_C::emoteType' has a wrong offset!");
static_assert(offsetof(UAS_PlayMonsterEmote_C, ignoreMethods) == 0x000040, "Member 'UAS_PlayMonsterEmote_C::ignoreMethods' has a wrong offset!");
static_assert(offsetof(UAS_PlayMonsterEmote_C, PlayTime) == 0x000050, "Member 'UAS_PlayMonsterEmote_C::PlayTime' has a wrong offset!");

}

