#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Quest_Data

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Quest_Data.W_Quest_Data_C
// 0x0070 (0x0568 - 0x04F8)
class UW_Quest_Data_C final : public UUIQuest_Data
{
public:
	class UWidgetAnimation*                       Reserve_Loop;                                      // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Reserve_In;                                        // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Gold;                                              // 0x0508(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Normal;                                            // 0x0510(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Clear;                                             // 0x0518(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Counter_Off;                                       // 0x0520(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Counter_On;                                        // 0x0528(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Check;                                             // 0x0530(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CheckBox;                                          // 0x0538(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CheckBox_02;                                       // 0x0540(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CheckBox_03;                                       // 0x0548(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SideScrollTextWidget_C*              W_SubQuest_Scroll_1;                               // 0x0550(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SideScrollTextWidget_C*              W_SubQuest_Scroll_2;                               // 0x0558(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_SideScrollTextWidget_C*              W_SubQuest_Scroll_3;                               // 0x0560(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Quest_Data_C">();
	}
	static class UW_Quest_Data_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Quest_Data_C>();
	}
};
static_assert(alignof(UW_Quest_Data_C) == 0x000008, "Wrong alignment on UW_Quest_Data_C");
static_assert(sizeof(UW_Quest_Data_C) == 0x000568, "Wrong size on UW_Quest_Data_C");
static_assert(offsetof(UW_Quest_Data_C, Reserve_Loop) == 0x0004F8, "Member 'UW_Quest_Data_C::Reserve_Loop' has a wrong offset!");
static_assert(offsetof(UW_Quest_Data_C, Reserve_In) == 0x000500, "Member 'UW_Quest_Data_C::Reserve_In' has a wrong offset!");
static_assert(offsetof(UW_Quest_Data_C, Gold) == 0x000508, "Member 'UW_Quest_Data_C::Gold' has a wrong offset!");
static_assert(offsetof(UW_Quest_Data_C, Normal) == 0x000510, "Member 'UW_Quest_Data_C::Normal' has a wrong offset!");
static_assert(offsetof(UW_Quest_Data_C, Clear) == 0x000518, "Member 'UW_Quest_Data_C::Clear' has a wrong offset!");
static_assert(offsetof(UW_Quest_Data_C, Counter_Off) == 0x000520, "Member 'UW_Quest_Data_C::Counter_Off' has a wrong offset!");
static_assert(offsetof(UW_Quest_Data_C, Counter_On) == 0x000528, "Member 'UW_Quest_Data_C::Counter_On' has a wrong offset!");
static_assert(offsetof(UW_Quest_Data_C, Check) == 0x000530, "Member 'UW_Quest_Data_C::Check' has a wrong offset!");
static_assert(offsetof(UW_Quest_Data_C, CheckBox) == 0x000538, "Member 'UW_Quest_Data_C::CheckBox' has a wrong offset!");
static_assert(offsetof(UW_Quest_Data_C, CheckBox_02) == 0x000540, "Member 'UW_Quest_Data_C::CheckBox_02' has a wrong offset!");
static_assert(offsetof(UW_Quest_Data_C, CheckBox_03) == 0x000548, "Member 'UW_Quest_Data_C::CheckBox_03' has a wrong offset!");
static_assert(offsetof(UW_Quest_Data_C, W_SubQuest_Scroll_1) == 0x000550, "Member 'UW_Quest_Data_C::W_SubQuest_Scroll_1' has a wrong offset!");
static_assert(offsetof(UW_Quest_Data_C, W_SubQuest_Scroll_2) == 0x000558, "Member 'UW_Quest_Data_C::W_SubQuest_Scroll_2' has a wrong offset!");
static_assert(offsetof(UW_Quest_Data_C, W_SubQuest_Scroll_3) == 0x000560, "Member 'UW_Quest_Data_C::W_SubQuest_Scroll_3' has a wrong offset!");

}

