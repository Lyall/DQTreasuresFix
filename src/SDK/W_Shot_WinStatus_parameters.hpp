#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Shot_WinStatus

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_Shot_WinStatus.W_Shot_WinStatus_C.IsExistBullet
// 0x0048 (0x0048 - 0x0000)
struct W_Shot_WinStatus_C_IsExistBullet final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectIndex_ReturnValue;               // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0010(0x0010)(ReferenceParm, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameBelongingsItem*                    CallFunc_GetGameDataBelongingsItem_GameDataBelongingsItem; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItem_ReturnValue;                      // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Shot_WinStatus_C_IsExistBullet) == 0x000008, "Wrong alignment on W_Shot_WinStatus_C_IsExistBullet");
static_assert(sizeof(W_Shot_WinStatus_C_IsExistBullet) == 0x000048, "Wrong size on W_Shot_WinStatus_C_IsExistBullet");
static_assert(offsetof(W_Shot_WinStatus_C_IsExistBullet, Result) == 0x000000, "Member 'W_Shot_WinStatus_C_IsExistBullet::Result' has a wrong offset!");
static_assert(offsetof(W_Shot_WinStatus_C_IsExistBullet, CallFunc_GetSelectIndex_ReturnValue) == 0x000004, "Member 'W_Shot_WinStatus_C_IsExistBullet::CallFunc_GetSelectIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Shot_WinStatus_C_IsExistBullet, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'W_Shot_WinStatus_C_IsExistBullet::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Shot_WinStatus_C_IsExistBullet, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000010, "Member 'W_Shot_WinStatus_C_IsExistBullet::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(W_Shot_WinStatus_C_IsExistBullet, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'W_Shot_WinStatus_C_IsExistBullet::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Shot_WinStatus_C_IsExistBullet, CallFunc_Array_Get_Item) == 0x000024, "Member 'W_Shot_WinStatus_C_IsExistBullet::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_Shot_WinStatus_C_IsExistBullet, CallFunc_Array_Length_ReturnValue_1) == 0x00002C, "Member 'W_Shot_WinStatus_C_IsExistBullet::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_Shot_WinStatus_C_IsExistBullet, CallFunc_GetGameDataBelongingsItem_GameDataBelongingsItem) == 0x000030, "Member 'W_Shot_WinStatus_C_IsExistBullet::CallFunc_GetGameDataBelongingsItem_GameDataBelongingsItem' has a wrong offset!");
static_assert(offsetof(W_Shot_WinStatus_C_IsExistBullet, CallFunc_Less_IntInt_ReturnValue) == 0x000038, "Member 'W_Shot_WinStatus_C_IsExistBullet::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Shot_WinStatus_C_IsExistBullet, CallFunc_GetItem_ReturnValue) == 0x00003C, "Member 'W_Shot_WinStatus_C_IsExistBullet::CallFunc_GetItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_Shot_WinStatus_C_IsExistBullet, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000040, "Member 'W_Shot_WinStatus_C_IsExistBullet::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");

// Function W_Shot_WinStatus.W_Shot_WinStatus_C.GetSelectProjectileIndex
// 0x0008 (0x0008 - 0x0000)
struct W_Shot_WinStatus_C_GetSelectProjectileIndex final
{
public:
	int32                                         OutProjectileIndex;                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSelectIndex_ReturnValue;               // 0x0004(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_Shot_WinStatus_C_GetSelectProjectileIndex) == 0x000004, "Wrong alignment on W_Shot_WinStatus_C_GetSelectProjectileIndex");
static_assert(sizeof(W_Shot_WinStatus_C_GetSelectProjectileIndex) == 0x000008, "Wrong size on W_Shot_WinStatus_C_GetSelectProjectileIndex");
static_assert(offsetof(W_Shot_WinStatus_C_GetSelectProjectileIndex, OutProjectileIndex) == 0x000000, "Member 'W_Shot_WinStatus_C_GetSelectProjectileIndex::OutProjectileIndex' has a wrong offset!");
static_assert(offsetof(W_Shot_WinStatus_C_GetSelectProjectileIndex, CallFunc_GetSelectIndex_ReturnValue) == 0x000004, "Member 'W_Shot_WinStatus_C_GetSelectProjectileIndex::CallFunc_GetSelectIndex_ReturnValue' has a wrong offset!");

// Function W_Shot_WinStatus.W_Shot_WinStatus_C.SetUIVisible
// 0x0001 (0x0001 - 0x0000)
struct W_Shot_WinStatus_C_SetUIVisible final
{
public:
	bool                                          SetUIVisible_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_Shot_WinStatus_C_SetUIVisible) == 0x000001, "Wrong alignment on W_Shot_WinStatus_C_SetUIVisible");
static_assert(sizeof(W_Shot_WinStatus_C_SetUIVisible) == 0x000001, "Wrong size on W_Shot_WinStatus_C_SetUIVisible");
static_assert(offsetof(W_Shot_WinStatus_C_SetUIVisible, SetUIVisible_0) == 0x000000, "Member 'W_Shot_WinStatus_C_SetUIVisible::SetUIVisible_0' has a wrong offset!");

}

