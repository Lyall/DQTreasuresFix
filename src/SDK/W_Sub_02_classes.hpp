#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Sub_02

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Sub_02.W_Sub_02_C
// 0x0088 (0x0530 - 0x04A8)
class UW_Sub_02_C final : public UUISub_02
{
public:
	class UWidgetAnimation*                       Name_03_Out;                                       // 0x04A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Name_03_In;                                        // 0x04B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Name_02_Out;                                       // 0x04B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Name_02_In;                                        // 0x04C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Name_01_Out;                                       // 0x04C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Name_01_In;                                        // 0x04D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Skip_Off;                                          // 0x04D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Skip_Out;                                          // 0x04E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Skip_Wait;                                         // 0x04E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Skip_in;                                           // 0x04F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Wait;                                              // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0508(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Icon_1;                                            // 0x0510(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_26;                                          // 0x0518(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mask_Bottom;                                       // 0x0520(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Mask_Top;                                          // 0x0528(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Sub_02_C">();
	}
	static class UW_Sub_02_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Sub_02_C>();
	}
};
static_assert(alignof(UW_Sub_02_C) == 0x000008, "Wrong alignment on UW_Sub_02_C");
static_assert(sizeof(UW_Sub_02_C) == 0x000530, "Wrong size on UW_Sub_02_C");
static_assert(offsetof(UW_Sub_02_C, Name_03_Out) == 0x0004A8, "Member 'UW_Sub_02_C::Name_03_Out' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Name_03_In) == 0x0004B0, "Member 'UW_Sub_02_C::Name_03_In' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Name_02_Out) == 0x0004B8, "Member 'UW_Sub_02_C::Name_02_Out' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Name_02_In) == 0x0004C0, "Member 'UW_Sub_02_C::Name_02_In' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Name_01_Out) == 0x0004C8, "Member 'UW_Sub_02_C::Name_01_Out' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Name_01_In) == 0x0004D0, "Member 'UW_Sub_02_C::Name_01_In' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Skip_Off) == 0x0004D8, "Member 'UW_Sub_02_C::Skip_Off' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Skip_Out) == 0x0004E0, "Member 'UW_Sub_02_C::Skip_Out' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Skip_Wait) == 0x0004E8, "Member 'UW_Sub_02_C::Skip_Wait' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Skip_in) == 0x0004F0, "Member 'UW_Sub_02_C::Skip_in' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Wait) == 0x0004F8, "Member 'UW_Sub_02_C::Wait' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Out) == 0x000500, "Member 'UW_Sub_02_C::Out' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, In) == 0x000508, "Member 'UW_Sub_02_C::In' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Icon_1) == 0x000510, "Member 'UW_Sub_02_C::Icon_1' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Image_26) == 0x000518, "Member 'UW_Sub_02_C::Image_26' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Mask_Bottom) == 0x000520, "Member 'UW_Sub_02_C::Mask_Bottom' has a wrong offset!");
static_assert(offsetof(UW_Sub_02_C, Mask_Top) == 0x000528, "Member 'UW_Sub_02_C::Mask_Top' has a wrong offset!");

}

