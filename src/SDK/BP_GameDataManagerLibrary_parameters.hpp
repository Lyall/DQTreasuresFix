#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_GameDataManagerLibrary

#include "Basic.hpp"


namespace SDK::Params
{

// Function BP_GameDataManagerLibrary.BP_GameDataManagerLibrary_C.GetGameDataArea
// 0x0020 (0x0020 - 0x0000)
struct BP_GameDataManagerLibrary_C_GetGameDataArea final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataArea*                          GameDataArea;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDatabase*                          CallFunc_GetGameDatabase_GameDatabase;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataArea*                          CallFunc_GetArea_ReturnValue;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameDataManagerLibrary_C_GetGameDataArea) == 0x000008, "Wrong alignment on BP_GameDataManagerLibrary_C_GetGameDataArea");
static_assert(sizeof(BP_GameDataManagerLibrary_C_GetGameDataArea) == 0x000020, "Wrong size on BP_GameDataManagerLibrary_C_GetGameDataArea");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataArea, m_WorldContext) == 0x000000, "Member 'BP_GameDataManagerLibrary_C_GetGameDataArea::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataArea, GameDataArea) == 0x000008, "Member 'BP_GameDataManagerLibrary_C_GetGameDataArea::GameDataArea' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataArea, CallFunc_GetGameDatabase_GameDatabase) == 0x000010, "Member 'BP_GameDataManagerLibrary_C_GetGameDataArea::CallFunc_GetGameDatabase_GameDatabase' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataArea, CallFunc_GetArea_ReturnValue) == 0x000018, "Member 'BP_GameDataManagerLibrary_C_GetGameDataArea::CallFunc_GetArea_ReturnValue' has a wrong offset!");

// Function BP_GameDataManagerLibrary.BP_GameDataManagerLibrary_C.GetGameDataFixTreasureBox
// 0x0020 (0x0020 - 0x0000)
struct BP_GameDataManagerLibrary_C_GetGameDataFixTreasureBox final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataFixTreasureBox*                GameDataFixTreasureBox;                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDatabase*                          CallFunc_GetGameDatabase_GameDatabase;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataFixTreasureBox*                CallFunc_GetFixTreasureBox_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameDataManagerLibrary_C_GetGameDataFixTreasureBox) == 0x000008, "Wrong alignment on BP_GameDataManagerLibrary_C_GetGameDataFixTreasureBox");
static_assert(sizeof(BP_GameDataManagerLibrary_C_GetGameDataFixTreasureBox) == 0x000020, "Wrong size on BP_GameDataManagerLibrary_C_GetGameDataFixTreasureBox");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataFixTreasureBox, m_WorldContext) == 0x000000, "Member 'BP_GameDataManagerLibrary_C_GetGameDataFixTreasureBox::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataFixTreasureBox, GameDataFixTreasureBox) == 0x000008, "Member 'BP_GameDataManagerLibrary_C_GetGameDataFixTreasureBox::GameDataFixTreasureBox' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataFixTreasureBox, CallFunc_GetGameDatabase_GameDatabase) == 0x000010, "Member 'BP_GameDataManagerLibrary_C_GetGameDataFixTreasureBox::CallFunc_GetGameDatabase_GameDatabase' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataFixTreasureBox, CallFunc_GetFixTreasureBox_ReturnValue) == 0x000018, "Member 'BP_GameDataManagerLibrary_C_GetGameDataFixTreasureBox::CallFunc_GetFixTreasureBox_ReturnValue' has a wrong offset!");

// Function BP_GameDataManagerLibrary.BP_GameDataManagerLibrary_C.GetGameDataParty
// 0x0020 (0x0020 - 0x0000)
struct BP_GameDataManagerLibrary_C_GetGameDataParty final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataParty*                         GameDataParty;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDatabase*                          CallFunc_GetGameDatabase_GameDatabase;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataParty*                         CallFunc_GetParty_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameDataManagerLibrary_C_GetGameDataParty) == 0x000008, "Wrong alignment on BP_GameDataManagerLibrary_C_GetGameDataParty");
static_assert(sizeof(BP_GameDataManagerLibrary_C_GetGameDataParty) == 0x000020, "Wrong size on BP_GameDataManagerLibrary_C_GetGameDataParty");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataParty, m_WorldContext) == 0x000000, "Member 'BP_GameDataManagerLibrary_C_GetGameDataParty::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataParty, GameDataParty) == 0x000008, "Member 'BP_GameDataManagerLibrary_C_GetGameDataParty::GameDataParty' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataParty, CallFunc_GetGameDatabase_GameDatabase) == 0x000010, "Member 'BP_GameDataManagerLibrary_C_GetGameDataParty::CallFunc_GetGameDatabase_GameDatabase' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataParty, CallFunc_GetParty_ReturnValue) == 0x000018, "Member 'BP_GameDataManagerLibrary_C_GetGameDataParty::CallFunc_GetParty_ReturnValue' has a wrong offset!");

// Function BP_GameDataManagerLibrary.BP_GameDataManagerLibrary_C.GetGameDataFlag
// 0x0020 (0x0020 - 0x0000)
struct BP_GameDataManagerLibrary_C_GetGameDataFlag final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataFlag*                          GameDataFlag;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDatabase*                          CallFunc_GetGameDatabase_GameDatabase;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataFlag*                          CallFunc_GetGameDataFlag_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameDataManagerLibrary_C_GetGameDataFlag) == 0x000008, "Wrong alignment on BP_GameDataManagerLibrary_C_GetGameDataFlag");
static_assert(sizeof(BP_GameDataManagerLibrary_C_GetGameDataFlag) == 0x000020, "Wrong size on BP_GameDataManagerLibrary_C_GetGameDataFlag");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataFlag, m_WorldContext) == 0x000000, "Member 'BP_GameDataManagerLibrary_C_GetGameDataFlag::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataFlag, GameDataFlag) == 0x000008, "Member 'BP_GameDataManagerLibrary_C_GetGameDataFlag::GameDataFlag' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataFlag, CallFunc_GetGameDatabase_GameDatabase) == 0x000010, "Member 'BP_GameDataManagerLibrary_C_GetGameDataFlag::CallFunc_GetGameDatabase_GameDatabase' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataFlag, CallFunc_GetGameDataFlag_ReturnValue) == 0x000018, "Member 'BP_GameDataManagerLibrary_C_GetGameDataFlag::CallFunc_GetGameDataFlag_ReturnValue' has a wrong offset!");

// Function BP_GameDataManagerLibrary.BP_GameDataManagerLibrary_C.GetGameDataBelongingsItem
// 0x0020 (0x0020 - 0x0000)
struct BP_GameDataManagerLibrary_C_GetGameDataBelongingsItem final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameBelongingsItem*                    GameDataBelongingsItem;                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDatabase*                          CallFunc_GetGameDatabase_GameDatabase;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameBelongingsItem*                    CallFunc_GetBelongingsItem_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameDataManagerLibrary_C_GetGameDataBelongingsItem) == 0x000008, "Wrong alignment on BP_GameDataManagerLibrary_C_GetGameDataBelongingsItem");
static_assert(sizeof(BP_GameDataManagerLibrary_C_GetGameDataBelongingsItem) == 0x000020, "Wrong size on BP_GameDataManagerLibrary_C_GetGameDataBelongingsItem");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataBelongingsItem, m_WorldContext) == 0x000000, "Member 'BP_GameDataManagerLibrary_C_GetGameDataBelongingsItem::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataBelongingsItem, GameDataBelongingsItem) == 0x000008, "Member 'BP_GameDataManagerLibrary_C_GetGameDataBelongingsItem::GameDataBelongingsItem' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataBelongingsItem, CallFunc_GetGameDatabase_GameDatabase) == 0x000010, "Member 'BP_GameDataManagerLibrary_C_GetGameDataBelongingsItem::CallFunc_GetGameDatabase_GameDatabase' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataBelongingsItem, CallFunc_GetBelongingsItem_ReturnValue) == 0x000018, "Member 'BP_GameDataManagerLibrary_C_GetGameDataBelongingsItem::CallFunc_GetBelongingsItem_ReturnValue' has a wrong offset!");

// Function BP_GameDataManagerLibrary.BP_GameDataManagerLibrary_C.GetGameDataSavePoint
// 0x0020 (0x0020 - 0x0000)
struct BP_GameDataManagerLibrary_C_GetGameDataSavePoint final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataSavePoint*                     GameDataSavePoint;                                 // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDatabase*                          CallFunc_GetGameDatabase_GameDatabase;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataSavePoint*                     CallFunc_GetSavePoint_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameDataManagerLibrary_C_GetGameDataSavePoint) == 0x000008, "Wrong alignment on BP_GameDataManagerLibrary_C_GetGameDataSavePoint");
static_assert(sizeof(BP_GameDataManagerLibrary_C_GetGameDataSavePoint) == 0x000020, "Wrong size on BP_GameDataManagerLibrary_C_GetGameDataSavePoint");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataSavePoint, m_WorldContext) == 0x000000, "Member 'BP_GameDataManagerLibrary_C_GetGameDataSavePoint::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataSavePoint, GameDataSavePoint) == 0x000008, "Member 'BP_GameDataManagerLibrary_C_GetGameDataSavePoint::GameDataSavePoint' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataSavePoint, CallFunc_GetGameDatabase_GameDatabase) == 0x000010, "Member 'BP_GameDataManagerLibrary_C_GetGameDataSavePoint::CallFunc_GetGameDatabase_GameDatabase' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataSavePoint, CallFunc_GetSavePoint_ReturnValue) == 0x000018, "Member 'BP_GameDataManagerLibrary_C_GetGameDataSavePoint::CallFunc_GetSavePoint_ReturnValue' has a wrong offset!");

// Function BP_GameDataManagerLibrary.BP_GameDataManagerLibrary_C.GetGameDataPlayer
// 0x0020 (0x0020 - 0x0000)
struct BP_GameDataManagerLibrary_C_GetGameDataPlayer final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataPlayer*                        GameDataPlayer;                                    // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDatabase*                          CallFunc_GetGameDatabase_GameDatabase;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataPlayer*                        CallFunc_GetPlayerData_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameDataManagerLibrary_C_GetGameDataPlayer) == 0x000008, "Wrong alignment on BP_GameDataManagerLibrary_C_GetGameDataPlayer");
static_assert(sizeof(BP_GameDataManagerLibrary_C_GetGameDataPlayer) == 0x000020, "Wrong size on BP_GameDataManagerLibrary_C_GetGameDataPlayer");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataPlayer, m_WorldContext) == 0x000000, "Member 'BP_GameDataManagerLibrary_C_GetGameDataPlayer::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataPlayer, GameDataPlayer) == 0x000008, "Member 'BP_GameDataManagerLibrary_C_GetGameDataPlayer::GameDataPlayer' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataPlayer, CallFunc_GetGameDatabase_GameDatabase) == 0x000010, "Member 'BP_GameDataManagerLibrary_C_GetGameDataPlayer::CallFunc_GetGameDatabase_GameDatabase' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataPlayer, CallFunc_GetPlayerData_ReturnValue) == 0x000018, "Member 'BP_GameDataManagerLibrary_C_GetGameDataPlayer::CallFunc_GetPlayerData_ReturnValue' has a wrong offset!");

// Function BP_GameDataManagerLibrary.BP_GameDataManagerLibrary_C.GetGameDatabase
// 0x0020 (0x0020 - 0x0000)
struct BP_GameDataManagerLibrary_C_GetGameDatabase final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDatabase*                          GameDatabase;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameDataManager_C*                  CallFunc_GetGameDataManager_GameDataManager;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDatabase*                          CallFunc_GetGameDatabase_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_GameDataManagerLibrary_C_GetGameDatabase) == 0x000008, "Wrong alignment on BP_GameDataManagerLibrary_C_GetGameDatabase");
static_assert(sizeof(BP_GameDataManagerLibrary_C_GetGameDatabase) == 0x000020, "Wrong size on BP_GameDataManagerLibrary_C_GetGameDatabase");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDatabase, m_WorldContext) == 0x000000, "Member 'BP_GameDataManagerLibrary_C_GetGameDatabase::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDatabase, GameDatabase) == 0x000008, "Member 'BP_GameDataManagerLibrary_C_GetGameDatabase::GameDatabase' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDatabase, CallFunc_GetGameDataManager_GameDataManager) == 0x000010, "Member 'BP_GameDataManagerLibrary_C_GetGameDatabase::CallFunc_GetGameDataManager_GameDataManager' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDatabase, CallFunc_GetGameDatabase_ReturnValue) == 0x000018, "Member 'BP_GameDataManagerLibrary_C_GetGameDatabase::CallFunc_GetGameDatabase_ReturnValue' has a wrong offset!");

// Function BP_GameDataManagerLibrary.BP_GameDataManagerLibrary_C.GetGameDataManager
// 0x0028 (0x0028 - 0x0000)
struct BP_GameDataManagerLibrary_C_GetGameDataManager final
{
public:
	class UObject*                                m_WorldContext;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameDataManager_C*                  GameDataManager;                                   // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameDataManager*                       CallFunc_GetInstance_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBP_GameDataManager_C*                  K2Node_DynamicCast_AsBP_Game_Data_Manager;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_GameDataManagerLibrary_C_GetGameDataManager) == 0x000008, "Wrong alignment on BP_GameDataManagerLibrary_C_GetGameDataManager");
static_assert(sizeof(BP_GameDataManagerLibrary_C_GetGameDataManager) == 0x000028, "Wrong size on BP_GameDataManagerLibrary_C_GetGameDataManager");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataManager, m_WorldContext) == 0x000000, "Member 'BP_GameDataManagerLibrary_C_GetGameDataManager::m_WorldContext' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataManager, GameDataManager) == 0x000008, "Member 'BP_GameDataManagerLibrary_C_GetGameDataManager::GameDataManager' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataManager, CallFunc_GetInstance_ReturnValue) == 0x000010, "Member 'BP_GameDataManagerLibrary_C_GetGameDataManager::CallFunc_GetInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataManager, K2Node_DynamicCast_AsBP_Game_Data_Manager) == 0x000018, "Member 'BP_GameDataManagerLibrary_C_GetGameDataManager::K2Node_DynamicCast_AsBP_Game_Data_Manager' has a wrong offset!");
static_assert(offsetof(BP_GameDataManagerLibrary_C_GetGameDataManager, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'BP_GameDataManagerLibrary_C_GetGameDataManager::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

