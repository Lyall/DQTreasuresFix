#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MonsterDict_Content_10

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_MonsterDict_Content_10.W_MonsterDict_Content_10_C
// 0x0028 (0x04C8 - 0x04A0)
class UW_MonsterDict_Content_10_C final : public UUIMonsterDict_Content_10
{
public:
	class UImage*                                 Buymenu_DescriptionBase_02;                        // 0x04A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 ContentBase_1;                                     // 0x04A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 line;                                              // 0x04B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_MonsterDict_Content_Trivia_C*        Text_Commentary;                                   // 0x04B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TitleIcon;                                         // 0x04C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_MonsterDict_Content_10_C">();
	}
	static class UW_MonsterDict_Content_10_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_MonsterDict_Content_10_C>();
	}
};
static_assert(alignof(UW_MonsterDict_Content_10_C) == 0x000008, "Wrong alignment on UW_MonsterDict_Content_10_C");
static_assert(sizeof(UW_MonsterDict_Content_10_C) == 0x0004C8, "Wrong size on UW_MonsterDict_Content_10_C");
static_assert(offsetof(UW_MonsterDict_Content_10_C, Buymenu_DescriptionBase_02) == 0x0004A0, "Member 'UW_MonsterDict_Content_10_C::Buymenu_DescriptionBase_02' has a wrong offset!");
static_assert(offsetof(UW_MonsterDict_Content_10_C, ContentBase_1) == 0x0004A8, "Member 'UW_MonsterDict_Content_10_C::ContentBase_1' has a wrong offset!");
static_assert(offsetof(UW_MonsterDict_Content_10_C, line) == 0x0004B0, "Member 'UW_MonsterDict_Content_10_C::line' has a wrong offset!");
static_assert(offsetof(UW_MonsterDict_Content_10_C, Text_Commentary) == 0x0004B8, "Member 'UW_MonsterDict_Content_10_C::Text_Commentary' has a wrong offset!");
static_assert(offsetof(UW_MonsterDict_Content_10_C, TitleIcon) == 0x0004C0, "Member 'UW_MonsterDict_Content_10_C::TitleIcon' has a wrong offset!");

}

