#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_WaterBlock

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "DarwinGame_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_WaterBlock.BP_WaterBlock_C.GetRelativeLocation
// 0x000C (0x000C - 0x0000)
struct BP_WaterBlock_C_GetRelativeLocation final
{
public:
	struct FVector                                RelativeLocation_0;                                // 0x0000(0x000C)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterBlock_C_GetRelativeLocation) == 0x000004, "Wrong alignment on BP_WaterBlock_C_GetRelativeLocation");
static_assert(sizeof(BP_WaterBlock_C_GetRelativeLocation) == 0x00000C, "Wrong size on BP_WaterBlock_C_GetRelativeLocation");
static_assert(offsetof(BP_WaterBlock_C_GetRelativeLocation, RelativeLocation_0) == 0x000000, "Member 'BP_WaterBlock_C_GetRelativeLocation::RelativeLocation_0' has a wrong offset!");

// Function BP_WaterBlock.BP_WaterBlock_C.SetBoss
// 0x0008 (0x0008 - 0x0000)
struct BP_WaterBlock_C_SetBoss final
{
public:
	class AMonsterBoss*                           MonsterBoss_0;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterBlock_C_SetBoss) == 0x000008, "Wrong alignment on BP_WaterBlock_C_SetBoss");
static_assert(sizeof(BP_WaterBlock_C_SetBoss) == 0x000008, "Wrong size on BP_WaterBlock_C_SetBoss");
static_assert(offsetof(BP_WaterBlock_C_SetBoss, MonsterBoss_0) == 0x000000, "Member 'BP_WaterBlock_C_SetBoss::MonsterBoss_0' has a wrong offset!");

// Function BP_WaterBlock.BP_WaterBlock_C.IsBossBoost
// 0x0005 (0x0005 - 0x0000)
struct BP_WaterBlock_C_IsBossBoost final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ret;                                               // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WaterBlock_C_IsBossBoost) == 0x000001, "Wrong alignment on BP_WaterBlock_C_IsBossBoost");
static_assert(sizeof(BP_WaterBlock_C_IsBossBoost) == 0x000005, "Wrong size on BP_WaterBlock_C_IsBossBoost");
static_assert(offsetof(BP_WaterBlock_C_IsBossBoost, NewParam) == 0x000000, "Member 'BP_WaterBlock_C_IsBossBoost::NewParam' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_IsBossBoost, ret) == 0x000001, "Member 'BP_WaterBlock_C_IsBossBoost::ret' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_IsBossBoost, CallFunc_MakeLiteralByte_ReturnValue) == 0x000002, "Member 'BP_WaterBlock_C_IsBossBoost::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_IsBossBoost, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'BP_WaterBlock_C_IsBossBoost::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_IsBossBoost, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'BP_WaterBlock_C_IsBossBoost::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BP_WaterBlock.BP_WaterBlock_C.BreakEffect
// 0x0130 (0x0130 - 0x0000)
struct BP_WaterBlock_C_BreakEffect final
{
public:
	EMonsterBossDerived                           CallFunc_GetBossDerived_ReturnValue;               // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsBossBoost_NewParam;                     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_K2_GetRootComponent_ReturnValue_1;        // 0x0018(0x0008)(ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGimmickFirstBreak_ReturnValue;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0xC];                                       // 0x0024(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0030(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0060(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0078(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_X;                            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Y;                            // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector_Z;                            // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsBossBoost_NewParam_1;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorRelativeLocation_SweepHitResult; // 0x00A8(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_WaterBlock_C_BreakEffect) == 0x000010, "Wrong alignment on BP_WaterBlock_C_BreakEffect");
static_assert(sizeof(BP_WaterBlock_C_BreakEffect) == 0x000130, "Wrong size on BP_WaterBlock_C_BreakEffect");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_GetBossDerived_ReturnValue) == 0x000000, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_GetBossDerived_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_K2_GetRootComponent_ReturnValue) == 0x000008, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_K2_GetRootComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_IsBossBoost_NewParam) == 0x000011, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_IsBossBoost_NewParam' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_K2_GetRootComponent_ReturnValue_1) == 0x000018, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_K2_GetRootComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_IsValid_ReturnValue) == 0x000022, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_IsGimmickFirstBreak_ReturnValue) == 0x000023, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_IsGimmickFirstBreak_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000030, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_BreakTransform_Location) == 0x000060, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_BreakTransform_Rotation) == 0x00006C, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_BreakTransform_Scale) == 0x000078, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_BreakVector_X) == 0x000084, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_BreakVector_Y) == 0x000088, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_BreakVector_Z) == 0x00008C, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_IsBossBoost_NewParam_1) == 0x000090, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_IsBossBoost_NewParam_1' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_Add_FloatFloat_ReturnValue) == 0x000094, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_Not_PreBool_ReturnValue_1) == 0x000098, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_MakeVector_ReturnValue) == 0x00009C, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_BreakEffect, CallFunc_K2_SetActorRelativeLocation_SweepHitResult) == 0x0000A8, "Member 'BP_WaterBlock_C_BreakEffect::CallFunc_K2_SetActorRelativeLocation_SweepHitResult' has a wrong offset!");

// Function BP_WaterBlock.BP_WaterBlock_C.HitCheck
// 0x0028 (0x0028 - 0x0000)
struct BP_WaterBlock_C_HitCheck final
{
public:
	struct FVector                                InLocation_0;                                      // 0x0000(0x000C)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InRadius_0;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledSphereRadius_ReturnValue;        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HitCheckCylindrical_ReturnValue;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_WaterBlock_C_HitCheck) == 0x000004, "Wrong alignment on BP_WaterBlock_C_HitCheck");
static_assert(sizeof(BP_WaterBlock_C_HitCheck) == 0x000028, "Wrong size on BP_WaterBlock_C_HitCheck");
static_assert(offsetof(BP_WaterBlock_C_HitCheck, InLocation_0) == 0x000000, "Member 'BP_WaterBlock_C_HitCheck::InLocation_0' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_HitCheck, InRadius_0) == 0x00000C, "Member 'BP_WaterBlock_C_HitCheck::InRadius_0' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_HitCheck, ReturnValue) == 0x000010, "Member 'BP_WaterBlock_C_HitCheck::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_HitCheck, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000014, "Member 'BP_WaterBlock_C_HitCheck::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_HitCheck, CallFunc_GetScaledSphereRadius_ReturnValue) == 0x000020, "Member 'BP_WaterBlock_C_HitCheck::CallFunc_GetScaledSphereRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_HitCheck, CallFunc_HitCheckCylindrical_ReturnValue) == 0x000024, "Member 'BP_WaterBlock_C_HitCheck::CallFunc_HitCheckCylindrical_ReturnValue' has a wrong offset!");

// Function BP_WaterBlock.BP_WaterBlock_C.SetMove
// 0x000C (0x000C - 0x0000)
struct BP_WaterBlock_C_SetMove final
{
public:
	float                                         Speed_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DirVec_0;                                          // 0x0004(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterBlock_C_SetMove) == 0x000004, "Wrong alignment on BP_WaterBlock_C_SetMove");
static_assert(sizeof(BP_WaterBlock_C_SetMove) == 0x00000C, "Wrong size on BP_WaterBlock_C_SetMove");
static_assert(offsetof(BP_WaterBlock_C_SetMove, Speed_0) == 0x000000, "Member 'BP_WaterBlock_C_SetMove::Speed_0' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_SetMove, DirVec_0) == 0x000004, "Member 'BP_WaterBlock_C_SetMove::DirVec_0' has a wrong offset!");

// Function BP_WaterBlock.BP_WaterBlock_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_WaterBlock_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterBlock_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_WaterBlock_C_ReceiveTick");
static_assert(sizeof(BP_WaterBlock_C_ReceiveTick) == 0x000004, "Wrong size on BP_WaterBlock_C_ReceiveTick");
static_assert(offsetof(BP_WaterBlock_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_WaterBlock_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_WaterBlock.BP_WaterBlock_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct BP_WaterBlock_C_Initialize final
{
public:
	class ABP_VolcanoPillarSet_C*                 PillarSet;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterBlock_C_Initialize) == 0x000008, "Wrong alignment on BP_WaterBlock_C_Initialize");
static_assert(sizeof(BP_WaterBlock_C_Initialize) == 0x000008, "Wrong size on BP_WaterBlock_C_Initialize");
static_assert(offsetof(BP_WaterBlock_C_Initialize, PillarSet) == 0x000000, "Member 'BP_WaterBlock_C_Initialize::PillarSet' has a wrong offset!");

// Function BP_WaterBlock.BP_WaterBlock_C.ExecuteUbergraph_BP_WaterBlock
// 0x0048 (0x0048 - 0x0000)
struct BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_VolcanoPillarSet_C*                 K2Node_CustomEvent_PillarSet;                      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveFloatValue_ReturnValue;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock) == 0x000008, "Wrong alignment on BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock");
static_assert(sizeof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock) == 0x000048, "Wrong size on BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock");
static_assert(offsetof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock, EntryPoint) == 0x000000, "Member 'BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock, Temp_bool_Variable) == 0x000004, "Member 'BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock, K2Node_Event_DeltaSeconds) == 0x000008, "Member 'BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock, K2Node_CustomEvent_PillarSet) == 0x000010, "Member 'BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock::K2Node_CustomEvent_PillarSet' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock, CallFunc_Add_FloatFloat_ReturnValue) == 0x000018, "Member 'BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000020, "Member 'BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock, CallFunc_GetTimeRange_MinTime) == 0x000028, "Member 'BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock, CallFunc_GetTimeRange_MaxTime) == 0x00002C, "Member 'BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000030, "Member 'BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock, CallFunc_GetCurveFloatValue_ReturnValue) == 0x000038, "Member 'BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock::CallFunc_GetCurveFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x00003C, "Member 'BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock, K2Node_Select_Default) == 0x000040, "Member 'BP_WaterBlock_C_ExecuteUbergraph_BP_WaterBlock::K2Node_Select_Default' has a wrong offset!");

}

