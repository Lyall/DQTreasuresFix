#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_EventTrigger

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DarwinGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_EventTrigger.BP_EventTrigger_C
// 0x0060 (0x02C0 - 0x0260)
class ABP_EventTrigger_C final : public AEventTrigger
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UArrowComponent*                        arrow;                                             // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_EventSender_C*                      BP_EventSender;                                    // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          IsExit;                                            // 0x0288(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CSVHeader;                                         // 0x0290(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UDataTable*                             TargetDataTable;                                   // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CSVRowData;                                        // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	float                                         BoxOffset;                                         // 0x02B8(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_EventTrigger(int32 EntryPoint);
	void BndEvt__Box_K2Node_ComponentBoundEvent_1_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveBeginPlay();
	void BndEvt__Box_K2Node_ComponentBoundEvent_2_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__Box_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void SetEventIDToEventSender(class FName event_id);
	void UserConstructionScript();
	void EntryDataTable();
	class FString ConvertCSV(class FName EventID_0, const struct FVector& Postion, const struct FRotator& Rotation, const struct FVector& Scale);
	struct FVector GetAutoSaveLocation(class AActor* self2);
	void StartEvent(class AActor* OtherActor);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_EventTrigger_C">();
	}
	static class ABP_EventTrigger_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_EventTrigger_C>();
	}
};
static_assert(alignof(ABP_EventTrigger_C) == 0x000008, "Wrong alignment on ABP_EventTrigger_C");
static_assert(sizeof(ABP_EventTrigger_C) == 0x0002C0, "Wrong size on ABP_EventTrigger_C");
static_assert(offsetof(ABP_EventTrigger_C, UberGraphFrame) == 0x000260, "Member 'ABP_EventTrigger_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_EventTrigger_C, arrow) == 0x000268, "Member 'ABP_EventTrigger_C::arrow' has a wrong offset!");
static_assert(offsetof(ABP_EventTrigger_C, Box) == 0x000270, "Member 'ABP_EventTrigger_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_EventTrigger_C, BP_EventSender) == 0x000278, "Member 'ABP_EventTrigger_C::BP_EventSender' has a wrong offset!");
static_assert(offsetof(ABP_EventTrigger_C, DefaultSceneRoot) == 0x000280, "Member 'ABP_EventTrigger_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_EventTrigger_C, IsExit) == 0x000288, "Member 'ABP_EventTrigger_C::IsExit' has a wrong offset!");
static_assert(offsetof(ABP_EventTrigger_C, CSVHeader) == 0x000290, "Member 'ABP_EventTrigger_C::CSVHeader' has a wrong offset!");
static_assert(offsetof(ABP_EventTrigger_C, TargetDataTable) == 0x0002A0, "Member 'ABP_EventTrigger_C::TargetDataTable' has a wrong offset!");
static_assert(offsetof(ABP_EventTrigger_C, CSVRowData) == 0x0002A8, "Member 'ABP_EventTrigger_C::CSVRowData' has a wrong offset!");
static_assert(offsetof(ABP_EventTrigger_C, BoxOffset) == 0x0002B8, "Member 'ABP_EventTrigger_C::BoxOffset' has a wrong offset!");

}

