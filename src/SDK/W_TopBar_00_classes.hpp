#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TopBar_00

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_TopBar_00.W_TopBar_00_C
// 0x0128 (0x0620 - 0x04F8)
class UW_TopBar_00_C final : public UUITopbar_00
{
public:
	class UWidgetAnimation*                       BG_Size_Knowledge;                                 // 0x04F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Coin_Off;                                          // 0x0500(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Coin_On;                                           // 0x0508(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Lv_On;                                             // 0x0510(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Lv_Off;                                            // 0x0518(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BG_Size_QuestMenu;                                 // 0x0520(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BG_Size_QuestData;                                 // 0x0528(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BG_Size_Dict;                                      // 0x0530(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BG_Size_Item;                                      // 0x0538(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BG_Size_Coin;                                      // 0x0540(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BG_Size_PatryCoin;                                 // 0x0548(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       BG_Size_Party;                                     // 0x0550(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PageLR_On;                                         // 0x0558(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       PageLR_Off;                                        // 0x0560(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x0568(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x0570(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Page_Slide_02;                                     // 0x0578(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Page_Slide_01;                                     // 0x0580(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       R_Key_On;                                          // 0x0588(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       L_Key_On;                                          // 0x0590(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 CenterBar;                                         // 0x0598(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CenterBar_1;                                       // 0x05A0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 L_Arrow_1;                                         // 0x05A8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 L_Key;                                             // 0x05B0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 L_Key_1;                                           // 0x05B8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Lv_Base;                                           // 0x05C0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Lv_Base_1;                                         // 0x05C8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenu_Page_01_C*                        Menu_Page_01;                                      // 0x05D0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenu_Page_01_C*                        Menu_Page_02;                                      // 0x05D8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenu_Page_01_C*                        Menu_Page_03;                                      // 0x05E0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenu_Page_01_C*                        Menu_Page_04;                                      // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenu_Page_01_C*                        Menu_Page_05;                                      // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMenu_Page_01_C*                        Menu_Page_06;                                      // 0x05F8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 PM_ListBG;                                         // 0x0600(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 R_Arrow_1;                                         // 0x0608(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 R_Key;                                             // 0x0610(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 R_Key_1;                                           // 0x0618(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_TopBar_00_C">();
	}
	static class UW_TopBar_00_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_TopBar_00_C>();
	}
};
static_assert(alignof(UW_TopBar_00_C) == 0x000008, "Wrong alignment on UW_TopBar_00_C");
static_assert(sizeof(UW_TopBar_00_C) == 0x000620, "Wrong size on UW_TopBar_00_C");
static_assert(offsetof(UW_TopBar_00_C, BG_Size_Knowledge) == 0x0004F8, "Member 'UW_TopBar_00_C::BG_Size_Knowledge' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Coin_Off) == 0x000500, "Member 'UW_TopBar_00_C::Coin_Off' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Coin_On) == 0x000508, "Member 'UW_TopBar_00_C::Coin_On' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Lv_On) == 0x000510, "Member 'UW_TopBar_00_C::Lv_On' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Lv_Off) == 0x000518, "Member 'UW_TopBar_00_C::Lv_Off' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, BG_Size_QuestMenu) == 0x000520, "Member 'UW_TopBar_00_C::BG_Size_QuestMenu' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, BG_Size_QuestData) == 0x000528, "Member 'UW_TopBar_00_C::BG_Size_QuestData' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, BG_Size_Dict) == 0x000530, "Member 'UW_TopBar_00_C::BG_Size_Dict' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, BG_Size_Item) == 0x000538, "Member 'UW_TopBar_00_C::BG_Size_Item' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, BG_Size_Coin) == 0x000540, "Member 'UW_TopBar_00_C::BG_Size_Coin' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, BG_Size_PatryCoin) == 0x000548, "Member 'UW_TopBar_00_C::BG_Size_PatryCoin' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, BG_Size_Party) == 0x000550, "Member 'UW_TopBar_00_C::BG_Size_Party' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, PageLR_On) == 0x000558, "Member 'UW_TopBar_00_C::PageLR_On' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, PageLR_Off) == 0x000560, "Member 'UW_TopBar_00_C::PageLR_Off' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Out) == 0x000568, "Member 'UW_TopBar_00_C::Out' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, In) == 0x000570, "Member 'UW_TopBar_00_C::In' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Page_Slide_02) == 0x000578, "Member 'UW_TopBar_00_C::Page_Slide_02' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Page_Slide_01) == 0x000580, "Member 'UW_TopBar_00_C::Page_Slide_01' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, R_Key_On) == 0x000588, "Member 'UW_TopBar_00_C::R_Key_On' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, L_Key_On) == 0x000590, "Member 'UW_TopBar_00_C::L_Key_On' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, CenterBar) == 0x000598, "Member 'UW_TopBar_00_C::CenterBar' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, CenterBar_1) == 0x0005A0, "Member 'UW_TopBar_00_C::CenterBar_1' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, L_Arrow_1) == 0x0005A8, "Member 'UW_TopBar_00_C::L_Arrow_1' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, L_Key) == 0x0005B0, "Member 'UW_TopBar_00_C::L_Key' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, L_Key_1) == 0x0005B8, "Member 'UW_TopBar_00_C::L_Key_1' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Lv_Base) == 0x0005C0, "Member 'UW_TopBar_00_C::Lv_Base' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Lv_Base_1) == 0x0005C8, "Member 'UW_TopBar_00_C::Lv_Base_1' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Menu_Page_01) == 0x0005D0, "Member 'UW_TopBar_00_C::Menu_Page_01' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Menu_Page_02) == 0x0005D8, "Member 'UW_TopBar_00_C::Menu_Page_02' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Menu_Page_03) == 0x0005E0, "Member 'UW_TopBar_00_C::Menu_Page_03' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Menu_Page_04) == 0x0005E8, "Member 'UW_TopBar_00_C::Menu_Page_04' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Menu_Page_05) == 0x0005F0, "Member 'UW_TopBar_00_C::Menu_Page_05' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, Menu_Page_06) == 0x0005F8, "Member 'UW_TopBar_00_C::Menu_Page_06' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, PM_ListBG) == 0x000600, "Member 'UW_TopBar_00_C::PM_ListBG' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, R_Arrow_1) == 0x000608, "Member 'UW_TopBar_00_C::R_Arrow_1' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, R_Key) == 0x000610, "Member 'UW_TopBar_00_C::R_Key' has a wrong offset!");
static_assert(offsetof(UW_TopBar_00_C, R_Key_1) == 0x000618, "Member 'UW_TopBar_00_C::R_Key_1' has a wrong offset!");

}

