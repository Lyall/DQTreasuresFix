#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_UnknownArtifact_Pop

#include "Basic.hpp"

#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_UnknownArtifact_Pop.W_UnknownArtifact_Pop_C
// 0x0030 (0x0600 - 0x05D0)
class UW_UnknownArtifact_Pop_C final : public UUIUnknownArtifact_Pop
{
public:
	class UWidgetAnimation*                       Wait;                                              // 0x05D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Out;                                               // 0x05D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       In;                                                // 0x05E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 UnknownIcon;                                       // 0x05E8(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_UnknownArtifact_eff01_C*             W_UnknownArtifact_eff01;                           // 0x05F0(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_UnknownArtifact_Pop_C">();
	}
	static class UW_UnknownArtifact_Pop_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_UnknownArtifact_Pop_C>();
	}
};
static_assert(alignof(UW_UnknownArtifact_Pop_C) == 0x000010, "Wrong alignment on UW_UnknownArtifact_Pop_C");
static_assert(sizeof(UW_UnknownArtifact_Pop_C) == 0x000600, "Wrong size on UW_UnknownArtifact_Pop_C");
static_assert(offsetof(UW_UnknownArtifact_Pop_C, Wait) == 0x0005D0, "Member 'UW_UnknownArtifact_Pop_C::Wait' has a wrong offset!");
static_assert(offsetof(UW_UnknownArtifact_Pop_C, Out) == 0x0005D8, "Member 'UW_UnknownArtifact_Pop_C::Out' has a wrong offset!");
static_assert(offsetof(UW_UnknownArtifact_Pop_C, In) == 0x0005E0, "Member 'UW_UnknownArtifact_Pop_C::In' has a wrong offset!");
static_assert(offsetof(UW_UnknownArtifact_Pop_C, UnknownIcon) == 0x0005E8, "Member 'UW_UnknownArtifact_Pop_C::UnknownIcon' has a wrong offset!");
static_assert(offsetof(UW_UnknownArtifact_Pop_C, W_UnknownArtifact_eff01) == 0x0005F0, "Member 'UW_UnknownArtifact_Pop_C::W_UnknownArtifact_eff01' has a wrong offset!");

}

