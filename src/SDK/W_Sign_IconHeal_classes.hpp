#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_Sign_IconHeal

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DarwinGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_Sign_IconHeal.W_Sign_IconHeal_C
// 0x0030 (0x0680 - 0x0650)
class UW_Sign_IconHeal_C final : public UUISign_IconHeal
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0650(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Heal;                                              // 0x0658(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UImage*                                 Image_Base;                                        // 0x0660(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Effect;                                      // 0x0668(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UAutoTextBlock*                         Text_Heal;                                         // 0x0670(0x0008)(BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)

public:
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void ExecuteUbergraph_W_Sign_IconHeal(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_Sign_IconHeal_C">();
	}
	static class UW_Sign_IconHeal_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_Sign_IconHeal_C>();
	}
};
static_assert(alignof(UW_Sign_IconHeal_C) == 0x000010, "Wrong alignment on UW_Sign_IconHeal_C");
static_assert(sizeof(UW_Sign_IconHeal_C) == 0x000680, "Wrong size on UW_Sign_IconHeal_C");
static_assert(offsetof(UW_Sign_IconHeal_C, UberGraphFrame) == 0x000650, "Member 'UW_Sign_IconHeal_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_Sign_IconHeal_C, Heal) == 0x000658, "Member 'UW_Sign_IconHeal_C::Heal' has a wrong offset!");
static_assert(offsetof(UW_Sign_IconHeal_C, Image_Base) == 0x000660, "Member 'UW_Sign_IconHeal_C::Image_Base' has a wrong offset!");
static_assert(offsetof(UW_Sign_IconHeal_C, Image_Effect) == 0x000668, "Member 'UW_Sign_IconHeal_C::Image_Effect' has a wrong offset!");
static_assert(offsetof(UW_Sign_IconHeal_C, Text_Heal) == 0x000670, "Member 'UW_Sign_IconHeal_C::Text_Heal' has a wrong offset!");

}

