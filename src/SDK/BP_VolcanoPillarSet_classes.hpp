#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_VolcanoPillarSet

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DarwinGame_structs.hpp"
#include "DarwinGame_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_VolcanoPillarSet.BP_VolcanoPillarSet_C
// 0x0080 (0x0330 - 0x02B0)
class ABP_VolcanoPillarSet_C final : public AFieldObjectBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02B0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParticleSystemComponent*               EF_FLD_DIS_KiraiBreak0100_00_0_00;                 // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UCapsuleComponent*                      Capsule;                                           // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   SM_BossAreaRockExplosionMark_01;                   // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UChildActorComponent*                   WaterBlock;                                        // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, IsPlainOldData, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class AMonsterBoss*                           MonsterBoss;                                       // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMonsterBossSightType                         SightType;                                         // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              DirVec;                                            // 0x02EC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Speed;                                             // 0x02F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_WaterBlock_C*                       WaterBall;                                         // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InLocation;                                        // 0x0300(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         InRadius;                                          // 0x030C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         FlickeringTime;                                    // 0x0310(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            FlickeringCycle;                                   // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CapsuleOffset;                                     // 0x0320(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBreak;                                           // 0x032C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void HitCheckGimmick(const struct FVector& InLocation_0, float InRadius_0, bool* IsBreking);
	void HitCheckPillar(const struct FVector& InLocation_0, float InRadius_0, bool* IsBreaking);
	void SetBoss(class AMonsterBoss* MonsterBoss_0);
	void BossBoost(class AMonsterBoss* MonsterBoss_0);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SetBlockEffect(const struct FVector& Location);
	void ExecuteUbergraph_BP_VolcanoPillarSet(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_VolcanoPillarSet_C">();
	}
	static class ABP_VolcanoPillarSet_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_VolcanoPillarSet_C>();
	}
};
static_assert(alignof(ABP_VolcanoPillarSet_C) == 0x000008, "Wrong alignment on ABP_VolcanoPillarSet_C");
static_assert(sizeof(ABP_VolcanoPillarSet_C) == 0x000330, "Wrong size on ABP_VolcanoPillarSet_C");
static_assert(offsetof(ABP_VolcanoPillarSet_C, UberGraphFrame) == 0x0002B0, "Member 'ABP_VolcanoPillarSet_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, EF_FLD_DIS_KiraiBreak0100_00_0_00) == 0x0002B8, "Member 'ABP_VolcanoPillarSet_C::EF_FLD_DIS_KiraiBreak0100_00_0_00' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, Capsule) == 0x0002C0, "Member 'ABP_VolcanoPillarSet_C::Capsule' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, SM_BossAreaRockExplosionMark_01) == 0x0002C8, "Member 'ABP_VolcanoPillarSet_C::SM_BossAreaRockExplosionMark_01' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, WaterBlock) == 0x0002D0, "Member 'ABP_VolcanoPillarSet_C::WaterBlock' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, Scene) == 0x0002D8, "Member 'ABP_VolcanoPillarSet_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, MonsterBoss) == 0x0002E0, "Member 'ABP_VolcanoPillarSet_C::MonsterBoss' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, SightType) == 0x0002E8, "Member 'ABP_VolcanoPillarSet_C::SightType' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, DirVec) == 0x0002EC, "Member 'ABP_VolcanoPillarSet_C::DirVec' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, Speed) == 0x0002F4, "Member 'ABP_VolcanoPillarSet_C::Speed' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, WaterBall) == 0x0002F8, "Member 'ABP_VolcanoPillarSet_C::WaterBall' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, InLocation) == 0x000300, "Member 'ABP_VolcanoPillarSet_C::InLocation' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, InRadius) == 0x00030C, "Member 'ABP_VolcanoPillarSet_C::InRadius' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, FlickeringTime) == 0x000310, "Member 'ABP_VolcanoPillarSet_C::FlickeringTime' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, FlickeringCycle) == 0x000318, "Member 'ABP_VolcanoPillarSet_C::FlickeringCycle' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, CapsuleOffset) == 0x000320, "Member 'ABP_VolcanoPillarSet_C::CapsuleOffset' has a wrong offset!");
static_assert(offsetof(ABP_VolcanoPillarSet_C, IsBreak) == 0x00032C, "Member 'ABP_VolcanoPillarSet_C::IsBreak' has a wrong offset!");

}

